

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Mar 22 04:13:06 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	clrtext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,space=0,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Generated 11/01/2024 GMT
    48                           ; 
    49                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F18855 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0008                     bsr             equ	8
    82     0005                     fsr0h           equ	5
    83     0004                     fsr0l           equ	4
    84     0007                     fsr1h           equ	7
    85     0006                     fsr1l           equ	6
    86     0000                     indf            equ	0
    87     0000                     indf0           equ	0
    88     0001                     indf1           equ	1
    89     000B                     intcon          equ	11
    90     0002                     pc              equ	2
    91     0002                     pcl             equ	2
    92     000A                     pclath          equ	10
    93     0003                     status          equ	3
    94     0009                     wreg            equ	9
    95     0000                     INDF0           equ	0	;# 
    96     0001                     INDF1           equ	1	;# 
    97     0002                     PCL             equ	2	;# 
    98     0003                     STATUS          equ	3	;# 
    99     0004                     FSR0L           equ	4	;# 
   100     0005                     FSR0H           equ	5	;# 
   101     0006                     FSR1L           equ	6	;# 
   102     0007                     FSR1H           equ	7	;# 
   103     0008                     BSR             equ	8	;# 
   104     0009                     WREG            equ	9	;# 
   105     000A                     PCLATH          equ	10	;# 
   106     000B                     INTCON          equ	11	;# 
   107     000C                     PORTA           equ	12	;# 
   108     000D                     PORTB           equ	13	;# 
   109     000E                     PORTC           equ	14	;# 
   110     0010                     PORTE           equ	16	;# 
   111     0011                     TRISA           equ	17	;# 
   112     0012                     TRISB           equ	18	;# 
   113     0013                     TRISC           equ	19	;# 
   114     0016                     LATA            equ	22	;# 
   115     0017                     LATB            equ	23	;# 
   116     0018                     LATC            equ	24	;# 
   117     001C                     TMR0L           equ	28	;# 
   118     001C                     TMR0            equ	28	;# 
   119     001D                     TMR0H           equ	29	;# 
   120     001D                     PR0             equ	29	;# 
   121     001E                     T0CON0          equ	30	;# 
   122     001F                     T0CON1          equ	31	;# 
   123     008C                     ADRES           equ	140	;# 
   124     008C                     ADRESL          equ	140	;# 
   125     008D                     ADRESH          equ	141	;# 
   126     008E                     ADPREV          equ	142	;# 
   127     008E                     ADPREVL         equ	142	;# 
   128     008F                     ADPREVH         equ	143	;# 
   129     0090                     ADACC           equ	144	;# 
   130     0090                     ADACCL          equ	144	;# 
   131     0091                     ADACCH          equ	145	;# 
   132     0093                     ADCON0          equ	147	;# 
   133     0094                     ADCON1          equ	148	;# 
   134     0095                     ADCON2          equ	149	;# 
   135     0096                     ADCON3          equ	150	;# 
   136     0097                     ADSTAT          equ	151	;# 
   137     0098                     ADCLK           equ	152	;# 
   138     0099                     ADACT           equ	153	;# 
   139     009A                     ADREF           equ	154	;# 
   140     009B                     ADCAP           equ	155	;# 
   141     009C                     ADPRE           equ	156	;# 
   142     009D                     ADACQ           equ	157	;# 
   143     009E                     ADPCH           equ	158	;# 
   144     010C                     ADCNT           equ	268	;# 
   145     010D                     ADRPT           equ	269	;# 
   146     010E                     ADLTH           equ	270	;# 
   147     010E                     ADLTHL          equ	270	;# 
   148     010F                     ADLTHH          equ	271	;# 
   149     0110                     ADUTH           equ	272	;# 
   150     0110                     ADUTHL          equ	272	;# 
   151     0111                     ADUTHH          equ	273	;# 
   152     0112                     ADSTPT          equ	274	;# 
   153     0112                     ADSTPTL         equ	274	;# 
   154     0113                     ADSTPTH         equ	275	;# 
   155     0114                     ADFLTR          equ	276	;# 
   156     0114                     ADFLTRL         equ	276	;# 
   157     0115                     ADFLTRH         equ	277	;# 
   158     0116                     ADERR           equ	278	;# 
   159     0116                     ADERRL          equ	278	;# 
   160     0117                     ADERRH          equ	279	;# 
   161     0119                     RC1REG          equ	281	;# 
   162     0119                     RCREG           equ	281	;# 
   163     0119                     RCREG1          equ	281	;# 
   164     011A                     TX1REG          equ	282	;# 
   165     011A                     TXREG1          equ	282	;# 
   166     011A                     TXREG           equ	282	;# 
   167     011B                     SP1BRG          equ	283	;# 
   168     011B                     SPBRG           equ	283	;# 
   169     011B                     SP1BRGL         equ	283	;# 
   170     011B                     SPBRG1          equ	283	;# 
   171     011B                     SPBRGL          equ	283	;# 
   172     011C                     SP1BRGH         equ	284	;# 
   173     011C                     SPBRGH          equ	284	;# 
   174     011C                     SPBRGH1         equ	284	;# 
   175     011D                     RC1STA          equ	285	;# 
   176     011D                     RCSTA1          equ	285	;# 
   177     011D                     RCSTA           equ	285	;# 
   178     011E                     TX1STA          equ	286	;# 
   179     011E                     TXSTA1          equ	286	;# 
   180     011E                     TXSTA           equ	286	;# 
   181     011F                     BAUD1CON        equ	287	;# 
   182     011F                     BAUDCON1        equ	287	;# 
   183     011F                     BAUDCTL1        equ	287	;# 
   184     011F                     BAUDCON         equ	287	;# 
   185     011F                     BAUDCTL         equ	287	;# 
   186     018C                     SSP1BUF         equ	396	;# 
   187     018D                     SSP1ADD         equ	397	;# 
   188     018E                     SSP1MSK         equ	398	;# 
   189     018F                     SSP1STAT        equ	399	;# 
   190     0190                     SSP1CON1        equ	400	;# 
   191     0191                     SSP1CON2        equ	401	;# 
   192     0192                     SSP1CON3        equ	402	;# 
   193     0196                     SSP2BUF         equ	406	;# 
   194     0197                     SSP2ADD         equ	407	;# 
   195     0198                     SSP2MSK         equ	408	;# 
   196     0199                     SSP2STAT        equ	409	;# 
   197     019A                     SSP2CON1        equ	410	;# 
   198     019B                     SSP2CON2        equ	411	;# 
   199     019C                     SSP2CON3        equ	412	;# 
   200     020C                     TMR1            equ	524	;# 
   201     020C                     TMR1L           equ	524	;# 
   202     020D                     TMR1H           equ	525	;# 
   203     020E                     T1CON           equ	526	;# 
   204     020F                     T1GCON          equ	527	;# 
   205     020F                     PR1             equ	527	;# 
   206     0210                     T1GATE          equ	528	;# 
   207     0210                     TMR1GATE        equ	528	;# 
   208     0211                     T1CLK           equ	529	;# 
   209     0211                     TMR1CLK         equ	529	;# 
   210     0212                     TMR3            equ	530	;# 
   211     0212                     TMR3L           equ	530	;# 
   212     0213                     TMR3H           equ	531	;# 
   213     0214                     T3CON           equ	532	;# 
   214     0215                     T3GCON          equ	533	;# 
   215     0215                     PR3             equ	533	;# 
   216     0216                     T3GATE          equ	534	;# 
   217     0216                     TMR3GATE        equ	534	;# 
   218     0217                     T3CLK           equ	535	;# 
   219     0217                     TMR3CLK         equ	535	;# 
   220     0218                     TMR5            equ	536	;# 
   221     0218                     TMR5L           equ	536	;# 
   222     0219                     TMR5H           equ	537	;# 
   223     021A                     T5CON           equ	538	;# 
   224     021B                     T5GCON          equ	539	;# 
   225     021B                     PR5             equ	539	;# 
   226     021C                     T5GATE          equ	540	;# 
   227     021C                     TMR5GATE        equ	540	;# 
   228     021D                     T5CLK           equ	541	;# 
   229     021D                     TMR5CLK         equ	541	;# 
   230     021E                     CCPTMRS0        equ	542	;# 
   231     021F                     CCPTMRS1        equ	543	;# 
   232     028C                     T2TMR           equ	652	;# 
   233     028C                     TMR2            equ	652	;# 
   234     028D                     T2PR            equ	653	;# 
   235     028D                     PR2             equ	653	;# 
   236     028E                     T2CON           equ	654	;# 
   237     028F                     T2HLT           equ	655	;# 
   238     0290                     T2CLKCON        equ	656	;# 
   239     0290                     T2CLK           equ	656	;# 
   240     0291                     T2RST           equ	657	;# 
   241     0292                     T4TMR           equ	658	;# 
   242     0292                     TMR4            equ	658	;# 
   243     0293                     T4PR            equ	659	;# 
   244     0293                     PR4             equ	659	;# 
   245     0294                     T4CON           equ	660	;# 
   246     0295                     T4HLT           equ	661	;# 
   247     0296                     T4CLKCON        equ	662	;# 
   248     0296                     T4CLK           equ	662	;# 
   249     0297                     T4RST           equ	663	;# 
   250     0298                     T6TMR           equ	664	;# 
   251     0298                     TMR6            equ	664	;# 
   252     0299                     T6PR            equ	665	;# 
   253     0299                     PR6             equ	665	;# 
   254     029A                     T6CON           equ	666	;# 
   255     029B                     T6HLT           equ	667	;# 
   256     029C                     T6CLKCON        equ	668	;# 
   257     029C                     T6CLK           equ	668	;# 
   258     029D                     T6RST           equ	669	;# 
   259     030C                     CCPR1           equ	780	;# 
   260     030C                     CCPR1L          equ	780	;# 
   261     030D                     CCPR1H          equ	781	;# 
   262     030E                     CCP1CON         equ	782	;# 
   263     030F                     CCP1CAP         equ	783	;# 
   264     0310                     CCPR2           equ	784	;# 
   265     0310                     CCPR2L          equ	784	;# 
   266     0311                     CCPR2H          equ	785	;# 
   267     0312                     CCP2CON         equ	786	;# 
   268     0313                     CCP2CAP         equ	787	;# 
   269     0314                     CCPR3           equ	788	;# 
   270     0314                     CCPR3L          equ	788	;# 
   271     0315                     CCPR3H          equ	789	;# 
   272     0316                     CCP3CON         equ	790	;# 
   273     0317                     CCP3CAP         equ	791	;# 
   274     0318                     CCPR4           equ	792	;# 
   275     0318                     CCPR4L          equ	792	;# 
   276     0319                     CCPR4H          equ	793	;# 
   277     031A                     CCP4CON         equ	794	;# 
   278     031B                     CCP4CAP         equ	795	;# 
   279     031C                     CCPR5           equ	796	;# 
   280     031C                     CCPR5L          equ	796	;# 
   281     031D                     CCPR5H          equ	797	;# 
   282     031E                     CCP5CON         equ	798	;# 
   283     031F                     CCP5CAP         equ	799	;# 
   284     038C                     PWM6DC          equ	908	;# 
   285     038C                     PWM6DCL         equ	908	;# 
   286     038D                     PWM6DCH         equ	909	;# 
   287     038E                     PWM6CON         equ	910	;# 
   288     0390                     PWM7DC          equ	912	;# 
   289     0390                     PWM7DCL         equ	912	;# 
   290     0391                     PWM7DCH         equ	913	;# 
   291     0392                     PWM7CON         equ	914	;# 
   292     040C                     SCANLADRL       equ	1036	;# 
   293     040D                     SCANLADRH       equ	1037	;# 
   294     040E                     SCANHADRL       equ	1038	;# 
   295     040F                     SCANHADRH       equ	1039	;# 
   296     0410                     SCANCON0        equ	1040	;# 
   297     0411                     SCANTRIG        equ	1041	;# 
   298     0416                     CRCDATA         equ	1046	;# 
   299     0416                     CRCDATL         equ	1046	;# 
   300     0417                     CRCDATH         equ	1047	;# 
   301     0418                     CRCACC          equ	1048	;# 
   302     0418                     CRCACCL         equ	1048	;# 
   303     0419                     CRCACCH         equ	1049	;# 
   304     041A                     CRCSHFT         equ	1050	;# 
   305     041A                     CRCSHIFTL       equ	1050	;# 
   306     041B                     CRCSHIFTH       equ	1051	;# 
   307     041C                     CRCXOR          equ	1052	;# 
   308     041C                     CRCXORL         equ	1052	;# 
   309     041D                     CRCXORH         equ	1053	;# 
   310     041E                     CRCCON0         equ	1054	;# 
   311     041F                     CRCCON1         equ	1055	;# 
   312     048C                     SMT1TMR         equ	1164	;# 
   313     048C                     SMT1TMRL        equ	1164	;# 
   314     048D                     SMT1TMRH        equ	1165	;# 
   315     048E                     SMT1TMRU        equ	1166	;# 
   316     048F                     SMT1CPR         equ	1167	;# 
   317     048F                     SMT1CPRL        equ	1167	;# 
   318     0490                     SMT1CPRH        equ	1168	;# 
   319     0491                     SMT1CPRU        equ	1169	;# 
   320     0492                     SMT1CPW         equ	1170	;# 
   321     0492                     SMT1CPWL        equ	1170	;# 
   322     0493                     SMT1CPWH        equ	1171	;# 
   323     0494                     SMT1CPWU        equ	1172	;# 
   324     0495                     SMT1PR          equ	1173	;# 
   325     0495                     SMT1PRL         equ	1173	;# 
   326     0496                     SMT1PRH         equ	1174	;# 
   327     0497                     SMT1PRU         equ	1175	;# 
   328     0498                     SMT1CON0        equ	1176	;# 
   329     0499                     SMT1CON1        equ	1177	;# 
   330     049A                     SMT1STAT        equ	1178	;# 
   331     049B                     SMT1CLK         equ	1179	;# 
   332     049C                     SMT1SIG         equ	1180	;# 
   333     049D                     SMT1WIN         equ	1181	;# 
   334     050C                     SMT2TMR         equ	1292	;# 
   335     050C                     SMT2TMRL        equ	1292	;# 
   336     050D                     SMT2TMRH        equ	1293	;# 
   337     050E                     SMT2TMRU        equ	1294	;# 
   338     050F                     SMT2CPR         equ	1295	;# 
   339     050F                     SMT2CPRL        equ	1295	;# 
   340     0510                     SMT2CPRH        equ	1296	;# 
   341     0511                     SMT2CPRU        equ	1297	;# 
   342     0512                     SMT2CPW         equ	1298	;# 
   343     0512                     SMT2CPWL        equ	1298	;# 
   344     0513                     SMT2CPWH        equ	1299	;# 
   345     0514                     SMT2CPWU        equ	1300	;# 
   346     0515                     SMT2PR          equ	1301	;# 
   347     0515                     SMT2PRL         equ	1301	;# 
   348     0516                     SMT2PRH         equ	1302	;# 
   349     0517                     SMT2PRU         equ	1303	;# 
   350     0518                     SMT2CON0        equ	1304	;# 
   351     0519                     SMT2CON1        equ	1305	;# 
   352     051A                     SMT2STAT        equ	1306	;# 
   353     051B                     SMT2CLK         equ	1307	;# 
   354     051C                     SMT2SIG         equ	1308	;# 
   355     051D                     SMT2WIN         equ	1309	;# 
   356     058C                     NCO1ACC         equ	1420	;# 
   357     058C                     NCO1ACCL        equ	1420	;# 
   358     058D                     NCO1ACCH        equ	1421	;# 
   359     058E                     NCO1ACCU        equ	1422	;# 
   360     058F                     NCO1INC         equ	1423	;# 
   361     058F                     NCO1INCL        equ	1423	;# 
   362     0590                     NCO1INCH        equ	1424	;# 
   363     0591                     NCO1INCU        equ	1425	;# 
   364     0592                     NCO1CON         equ	1426	;# 
   365     0593                     NCO1CLK         equ	1427	;# 
   366     060C                     CWG1CLKCON      equ	1548	;# 
   367     060D                     CWG1ISM         equ	1549	;# 
   368     060E                     CWG1DBR         equ	1550	;# 
   369     060F                     CWG1DBF         equ	1551	;# 
   370     0610                     CWG1CON0        equ	1552	;# 
   371     0611                     CWG1CON1        equ	1553	;# 
   372     0612                     CWG1AS0         equ	1554	;# 
   373     0613                     CWG1AS1         equ	1555	;# 
   374     0614                     CWG1STR         equ	1556	;# 
   375     0616                     CWG2CLKCON      equ	1558	;# 
   376     0617                     CWG2ISM         equ	1559	;# 
   377     0618                     CWG2DBR         equ	1560	;# 
   378     0619                     CWG2DBF         equ	1561	;# 
   379     061A                     CWG2CON0        equ	1562	;# 
   380     061B                     CWG2CON1        equ	1563	;# 
   381     061C                     CWG2AS0         equ	1564	;# 
   382     061D                     CWG2AS1         equ	1565	;# 
   383     061E                     CWG2STR         equ	1566	;# 
   384     068C                     CWG3CLKCON      equ	1676	;# 
   385     068D                     CWG3ISM         equ	1677	;# 
   386     068E                     CWG3DBR         equ	1678	;# 
   387     068F                     CWG3DBF         equ	1679	;# 
   388     0690                     CWG3CON0        equ	1680	;# 
   389     0691                     CWG3CON1        equ	1681	;# 
   390     0692                     CWG3AS0         equ	1682	;# 
   391     0693                     CWG3AS1         equ	1683	;# 
   392     0694                     CWG3STR         equ	1684	;# 
   393     070C                     PIR0            equ	1804	;# 
   394     070D                     PIR1            equ	1805	;# 
   395     070E                     PIR2            equ	1806	;# 
   396     070F                     PIR3            equ	1807	;# 
   397     0710                     PIR4            equ	1808	;# 
   398     0711                     PIR5            equ	1809	;# 
   399     0712                     PIR6            equ	1810	;# 
   400     0713                     PIR7            equ	1811	;# 
   401     0714                     PIR8            equ	1812	;# 
   402     0716                     PIE0            equ	1814	;# 
   403     0717                     PIE1            equ	1815	;# 
   404     0718                     PIE2            equ	1816	;# 
   405     0719                     PIE3            equ	1817	;# 
   406     071A                     PIE4            equ	1818	;# 
   407     071B                     PIE5            equ	1819	;# 
   408     071C                     PIE6            equ	1820	;# 
   409     071D                     PIE7            equ	1821	;# 
   410     071E                     PIE8            equ	1822	;# 
   411     0796                     PMD0            equ	1942	;# 
   412     0797                     PMD1            equ	1943	;# 
   413     0798                     PMD2            equ	1944	;# 
   414     0799                     PMD3            equ	1945	;# 
   415     079A                     PMD4            equ	1946	;# 
   416     079B                     PMD5            equ	1947	;# 
   417     080C                     WDTCON0         equ	2060	;# 
   418     080D                     WDTCON1         equ	2061	;# 
   419     080E                     WDTPSL          equ	2062	;# 
   420     080F                     WDTPSH          equ	2063	;# 
   421     0810                     WDTTMR          equ	2064	;# 
   422     0811                     BORCON          equ	2065	;# 
   423     0812                     VREGCON         equ	2066	;# 
   424     0813                     PCON0           equ	2067	;# 
   425     0814                     CCDCON          equ	2068	;# 
   426     081A                     NVMADRL         equ	2074	;# 
   427     081B                     NVMADRH         equ	2075	;# 
   428     081C                     NVMDATL         equ	2076	;# 
   429     081D                     NVMDATH         equ	2077	;# 
   430     081E                     NVMCON1         equ	2078	;# 
   431     081F                     NVMCON2         equ	2079	;# 
   432     088C                     CPUDOZE         equ	2188	;# 
   433     088D                     OSCCON1         equ	2189	;# 
   434     088E                     OSCCON2         equ	2190	;# 
   435     088F                     OSCCON3         equ	2191	;# 
   436     0890                     OSCSTAT         equ	2192	;# 
   437     0891                     OSCEN           equ	2193	;# 
   438     0892                     OSCTUNE         equ	2194	;# 
   439     0893                     OSCFRQ          equ	2195	;# 
   440     0895                     CLKRCON         equ	2197	;# 
   441     0896                     CLKRCLK         equ	2198	;# 
   442     0897                     MDCON0          equ	2199	;# 
   443     0898                     MDCON1          equ	2200	;# 
   444     0899                     MDSRC           equ	2201	;# 
   445     089A                     MDCARL          equ	2202	;# 
   446     089B                     MDCARH          equ	2203	;# 
   447     090C                     FVRCON          equ	2316	;# 
   448     090E                     DAC1CON0        equ	2318	;# 
   449     090F                     DAC1CON1        equ	2319	;# 
   450     091F                     ZCD1CON         equ	2335	;# 
   451     091F                     ZCDCON          equ	2335	;# 
   452     098F                     CMOUT           equ	2447	;# 
   453     098F                     CMSTAT          equ	2447	;# 
   454     0990                     CM1CON0         equ	2448	;# 
   455     0991                     CM1CON1         equ	2449	;# 
   456     0992                     CM1NSEL         equ	2450	;# 
   457     0993                     CM1PSEL         equ	2451	;# 
   458     0994                     CM2CON0         equ	2452	;# 
   459     0995                     CM2CON1         equ	2453	;# 
   460     0996                     CM2NSEL         equ	2454	;# 
   461     0997                     CM2PSEL         equ	2455	;# 
   462     0E0F                     CLCDATA         equ	3599	;# 
   463     0E10                     CLC1CON         equ	3600	;# 
   464     0E11                     CLC1POL         equ	3601	;# 
   465     0E12                     CLC1SEL0        equ	3602	;# 
   466     0E13                     CLC1SEL1        equ	3603	;# 
   467     0E14                     CLC1SEL2        equ	3604	;# 
   468     0E15                     CLC1SEL3        equ	3605	;# 
   469     0E16                     CLC1GLS0        equ	3606	;# 
   470     0E17                     CLC1GLS1        equ	3607	;# 
   471     0E18                     CLC1GLS2        equ	3608	;# 
   472     0E19                     CLC1GLS3        equ	3609	;# 
   473     0E1A                     CLC2CON         equ	3610	;# 
   474     0E1B                     CLC2POL         equ	3611	;# 
   475     0E1C                     CLC2SEL0        equ	3612	;# 
   476     0E1D                     CLC2SEL1        equ	3613	;# 
   477     0E1E                     CLC2SEL2        equ	3614	;# 
   478     0E1F                     CLC2SEL3        equ	3615	;# 
   479     0E20                     CLC2GLS0        equ	3616	;# 
   480     0E21                     CLC2GLS1        equ	3617	;# 
   481     0E22                     CLC2GLS2        equ	3618	;# 
   482     0E23                     CLC2GLS3        equ	3619	;# 
   483     0E24                     CLC3CON         equ	3620	;# 
   484     0E25                     CLC3POL         equ	3621	;# 
   485     0E26                     CLC3SEL0        equ	3622	;# 
   486     0E27                     CLC3SEL1        equ	3623	;# 
   487     0E28                     CLC3SEL2        equ	3624	;# 
   488     0E29                     CLC3SEL3        equ	3625	;# 
   489     0E2A                     CLC3GLS0        equ	3626	;# 
   490     0E2B                     CLC3GLS1        equ	3627	;# 
   491     0E2C                     CLC3GLS2        equ	3628	;# 
   492     0E2D                     CLC3GLS3        equ	3629	;# 
   493     0E2E                     CLC4CON         equ	3630	;# 
   494     0E2F                     CLC4POL         equ	3631	;# 
   495     0E30                     CLC4SEL0        equ	3632	;# 
   496     0E31                     CLC4SEL1        equ	3633	;# 
   497     0E32                     CLC4SEL2        equ	3634	;# 
   498     0E33                     CLC4SEL3        equ	3635	;# 
   499     0E34                     CLC4GLS0        equ	3636	;# 
   500     0E35                     CLC4GLS1        equ	3637	;# 
   501     0E36                     CLC4GLS2        equ	3638	;# 
   502     0E37                     CLC4GLS3        equ	3639	;# 
   503     0E8F                     PPSLOCK         equ	3727	;# 
   504     0E90                     INTPPS          equ	3728	;# 
   505     0E91                     T0CKIPPS        equ	3729	;# 
   506     0E92                     T1CKIPPS        equ	3730	;# 
   507     0E93                     T1GPPS          equ	3731	;# 
   508     0E94                     T3CKIPPS        equ	3732	;# 
   509     0E95                     T3GPPS          equ	3733	;# 
   510     0E96                     T5CKIPPS        equ	3734	;# 
   511     0E97                     T5GPPS          equ	3735	;# 
   512     0E9C                     T2AINPPS        equ	3740	;# 
   513     0E9D                     T4AINPPS        equ	3741	;# 
   514     0E9E                     T6AINPPS        equ	3742	;# 
   515     0EA1                     CCP1PPS         equ	3745	;# 
   516     0EA2                     CCP2PPS         equ	3746	;# 
   517     0EA3                     CCP3PPS         equ	3747	;# 
   518     0EA4                     CCP4PPS         equ	3748	;# 
   519     0EA5                     CCP5PPS         equ	3749	;# 
   520     0EA9                     SMT1WINPPS      equ	3753	;# 
   521     0EAA                     SMT1SIGPPS      equ	3754	;# 
   522     0EAB                     SMT2WINPPS      equ	3755	;# 
   523     0EAC                     SMT2SIGPPS      equ	3756	;# 
   524     0EB1                     CWG1PPS         equ	3761	;# 
   525     0EB2                     CWG2PPS         equ	3762	;# 
   526     0EB3                     CWG3PPS         equ	3763	;# 
   527     0EB8                     MDCARLPPS       equ	3768	;# 
   528     0EB9                     MDCARHPPS       equ	3769	;# 
   529     0EBA                     MDSRCPPS        equ	3770	;# 
   530     0EBB                     CLCIN0PPS       equ	3771	;# 
   531     0EBC                     CLCIN1PPS       equ	3772	;# 
   532     0EBD                     CLCIN2PPS       equ	3773	;# 
   533     0EBE                     CLCIN3PPS       equ	3774	;# 
   534     0EC3                     ADCACTPPS       equ	3779	;# 
   535     0EC5                     SSP1CLKPPS      equ	3781	;# 
   536     0EC6                     SSP1DATPPS      equ	3782	;# 
   537     0EC7                     SSP1SSPPS       equ	3783	;# 
   538     0EC8                     SSP2CLKPPS      equ	3784	;# 
   539     0EC9                     SSP2DATPPS      equ	3785	;# 
   540     0ECA                     SSP2SSPPS       equ	3786	;# 
   541     0ECB                     RXPPS           equ	3787	;# 
   542     0ECC                     TXPPS           equ	3788	;# 
   543     0F10                     RA0PPS          equ	3856	;# 
   544     0F11                     RA1PPS          equ	3857	;# 
   545     0F12                     RA2PPS          equ	3858	;# 
   546     0F13                     RA3PPS          equ	3859	;# 
   547     0F14                     RA4PPS          equ	3860	;# 
   548     0F15                     RA5PPS          equ	3861	;# 
   549     0F16                     RA6PPS          equ	3862	;# 
   550     0F17                     RA7PPS          equ	3863	;# 
   551     0F18                     RB0PPS          equ	3864	;# 
   552     0F19                     RB1PPS          equ	3865	;# 
   553     0F1A                     RB2PPS          equ	3866	;# 
   554     0F1B                     RB3PPS          equ	3867	;# 
   555     0F1C                     RB4PPS          equ	3868	;# 
   556     0F1D                     RB5PPS          equ	3869	;# 
   557     0F1E                     RB6PPS          equ	3870	;# 
   558     0F1F                     RB7PPS          equ	3871	;# 
   559     0F20                     RC0PPS          equ	3872	;# 
   560     0F21                     RC1PPS          equ	3873	;# 
   561     0F22                     RC2PPS          equ	3874	;# 
   562     0F23                     RC3PPS          equ	3875	;# 
   563     0F24                     RC4PPS          equ	3876	;# 
   564     0F25                     RC5PPS          equ	3877	;# 
   565     0F26                     RC6PPS          equ	3878	;# 
   566     0F27                     RC7PPS          equ	3879	;# 
   567     0F38                     ANSELA          equ	3896	;# 
   568     0F39                     WPUA            equ	3897	;# 
   569     0F3A                     ODCONA          equ	3898	;# 
   570     0F3B                     SLRCONA         equ	3899	;# 
   571     0F3C                     INLVLA          equ	3900	;# 
   572     0F3D                     IOCAP           equ	3901	;# 
   573     0F3E                     IOCAN           equ	3902	;# 
   574     0F3F                     IOCAF           equ	3903	;# 
   575     0F40                     CCDNA           equ	3904	;# 
   576     0F41                     CCDPA           equ	3905	;# 
   577     0F43                     ANSELB          equ	3907	;# 
   578     0F44                     WPUB            equ	3908	;# 
   579     0F45                     ODCONB          equ	3909	;# 
   580     0F46                     SLRCONB         equ	3910	;# 
   581     0F47                     INLVLB          equ	3911	;# 
   582     0F48                     IOCBP           equ	3912	;# 
   583     0F49                     IOCBN           equ	3913	;# 
   584     0F4A                     IOCBF           equ	3914	;# 
   585     0F4B                     CCDNB           equ	3915	;# 
   586     0F4C                     CCDPB           equ	3916	;# 
   587     0F4E                     ANSELC          equ	3918	;# 
   588     0F4F                     WPUC            equ	3919	;# 
   589     0F50                     ODCONC          equ	3920	;# 
   590     0F51                     SLRCONC         equ	3921	;# 
   591     0F52                     INLVLC          equ	3922	;# 
   592     0F53                     IOCCP           equ	3923	;# 
   593     0F54                     IOCCN           equ	3924	;# 
   594     0F55                     IOCCF           equ	3925	;# 
   595     0F56                     CCDNC           equ	3926	;# 
   596     0F57                     CCDPC           equ	3927	;# 
   597     0F65                     WPUE            equ	3941	;# 
   598     0F68                     INLVLE          equ	3944	;# 
   599     0F69                     IOCEP           equ	3945	;# 
   600     0F6A                     IOCEN           equ	3946	;# 
   601     0F6B                     IOCEF           equ	3947	;# 
   602     0FE4                     STATUS_SHAD     equ	4068	;# 
   603     0FE5                     WREG_SHAD       equ	4069	;# 
   604     0FE6                     BSR_SHAD        equ	4070	;# 
   605     0FE7                     PCLATH_SHAD     equ	4071	;# 
   606     0FE8                     FSR0L_SHAD      equ	4072	;# 
   607     0FE9                     FSR0H_SHAD      equ	4073	;# 
   608     0FEA                     FSR1L_SHAD      equ	4074	;# 
   609     0FEB                     FSR1H_SHAD      equ	4075	;# 
   610     0FED                     STKPTR          equ	4077	;# 
   611     0FEE                     TOSL            equ	4078	;# 
   612     0FEF                     TOSH            equ	4079	;# 
   613     0000                     INDF0           equ	0	;# 
   614     0001                     INDF1           equ	1	;# 
   615     0002                     PCL             equ	2	;# 
   616     0003                     STATUS          equ	3	;# 
   617     0004                     FSR0L           equ	4	;# 
   618     0005                     FSR0H           equ	5	;# 
   619     0006                     FSR1L           equ	6	;# 
   620     0007                     FSR1H           equ	7	;# 
   621     0008                     BSR             equ	8	;# 
   622     0009                     WREG            equ	9	;# 
   623     000A                     PCLATH          equ	10	;# 
   624     000B                     INTCON          equ	11	;# 
   625     000C                     PORTA           equ	12	;# 
   626     000D                     PORTB           equ	13	;# 
   627     000E                     PORTC           equ	14	;# 
   628     0010                     PORTE           equ	16	;# 
   629     0011                     TRISA           equ	17	;# 
   630     0012                     TRISB           equ	18	;# 
   631     0013                     TRISC           equ	19	;# 
   632     0016                     LATA            equ	22	;# 
   633     0017                     LATB            equ	23	;# 
   634     0018                     LATC            equ	24	;# 
   635     001C                     TMR0L           equ	28	;# 
   636     001C                     TMR0            equ	28	;# 
   637     001D                     TMR0H           equ	29	;# 
   638     001D                     PR0             equ	29	;# 
   639     001E                     T0CON0          equ	30	;# 
   640     001F                     T0CON1          equ	31	;# 
   641     008C                     ADRES           equ	140	;# 
   642     008C                     ADRESL          equ	140	;# 
   643     008D                     ADRESH          equ	141	;# 
   644     008E                     ADPREV          equ	142	;# 
   645     008E                     ADPREVL         equ	142	;# 
   646     008F                     ADPREVH         equ	143	;# 
   647     0090                     ADACC           equ	144	;# 
   648     0090                     ADACCL          equ	144	;# 
   649     0091                     ADACCH          equ	145	;# 
   650     0093                     ADCON0          equ	147	;# 
   651     0094                     ADCON1          equ	148	;# 
   652     0095                     ADCON2          equ	149	;# 
   653     0096                     ADCON3          equ	150	;# 
   654     0097                     ADSTAT          equ	151	;# 
   655     0098                     ADCLK           equ	152	;# 
   656     0099                     ADACT           equ	153	;# 
   657     009A                     ADREF           equ	154	;# 
   658     009B                     ADCAP           equ	155	;# 
   659     009C                     ADPRE           equ	156	;# 
   660     009D                     ADACQ           equ	157	;# 
   661     009E                     ADPCH           equ	158	;# 
   662     010C                     ADCNT           equ	268	;# 
   663     010D                     ADRPT           equ	269	;# 
   664     010E                     ADLTH           equ	270	;# 
   665     010E                     ADLTHL          equ	270	;# 
   666     010F                     ADLTHH          equ	271	;# 
   667     0110                     ADUTH           equ	272	;# 
   668     0110                     ADUTHL          equ	272	;# 
   669     0111                     ADUTHH          equ	273	;# 
   670     0112                     ADSTPT          equ	274	;# 
   671     0112                     ADSTPTL         equ	274	;# 
   672     0113                     ADSTPTH         equ	275	;# 
   673     0114                     ADFLTR          equ	276	;# 
   674     0114                     ADFLTRL         equ	276	;# 
   675     0115                     ADFLTRH         equ	277	;# 
   676     0116                     ADERR           equ	278	;# 
   677     0116                     ADERRL          equ	278	;# 
   678     0117                     ADERRH          equ	279	;# 
   679     0119                     RC1REG          equ	281	;# 
   680     0119                     RCREG           equ	281	;# 
   681     0119                     RCREG1          equ	281	;# 
   682     011A                     TX1REG          equ	282	;# 
   683     011A                     TXREG1          equ	282	;# 
   684     011A                     TXREG           equ	282	;# 
   685     011B                     SP1BRG          equ	283	;# 
   686     011B                     SPBRG           equ	283	;# 
   687     011B                     SP1BRGL         equ	283	;# 
   688     011B                     SPBRG1          equ	283	;# 
   689     011B                     SPBRGL          equ	283	;# 
   690     011C                     SP1BRGH         equ	284	;# 
   691     011C                     SPBRGH          equ	284	;# 
   692     011C                     SPBRGH1         equ	284	;# 
   693     011D                     RC1STA          equ	285	;# 
   694     011D                     RCSTA1          equ	285	;# 
   695     011D                     RCSTA           equ	285	;# 
   696     011E                     TX1STA          equ	286	;# 
   697     011E                     TXSTA1          equ	286	;# 
   698     011E                     TXSTA           equ	286	;# 
   699     011F                     BAUD1CON        equ	287	;# 
   700     011F                     BAUDCON1        equ	287	;# 
   701     011F                     BAUDCTL1        equ	287	;# 
   702     011F                     BAUDCON         equ	287	;# 
   703     011F                     BAUDCTL         equ	287	;# 
   704     018C                     SSP1BUF         equ	396	;# 
   705     018D                     SSP1ADD         equ	397	;# 
   706     018E                     SSP1MSK         equ	398	;# 
   707     018F                     SSP1STAT        equ	399	;# 
   708     0190                     SSP1CON1        equ	400	;# 
   709     0191                     SSP1CON2        equ	401	;# 
   710     0192                     SSP1CON3        equ	402	;# 
   711     0196                     SSP2BUF         equ	406	;# 
   712     0197                     SSP2ADD         equ	407	;# 
   713     0198                     SSP2MSK         equ	408	;# 
   714     0199                     SSP2STAT        equ	409	;# 
   715     019A                     SSP2CON1        equ	410	;# 
   716     019B                     SSP2CON2        equ	411	;# 
   717     019C                     SSP2CON3        equ	412	;# 
   718     020C                     TMR1            equ	524	;# 
   719     020C                     TMR1L           equ	524	;# 
   720     020D                     TMR1H           equ	525	;# 
   721     020E                     T1CON           equ	526	;# 
   722     020F                     T1GCON          equ	527	;# 
   723     020F                     PR1             equ	527	;# 
   724     0210                     T1GATE          equ	528	;# 
   725     0210                     TMR1GATE        equ	528	;# 
   726     0211                     T1CLK           equ	529	;# 
   727     0211                     TMR1CLK         equ	529	;# 
   728     0212                     TMR3            equ	530	;# 
   729     0212                     TMR3L           equ	530	;# 
   730     0213                     TMR3H           equ	531	;# 
   731     0214                     T3CON           equ	532	;# 
   732     0215                     T3GCON          equ	533	;# 
   733     0215                     PR3             equ	533	;# 
   734     0216                     T3GATE          equ	534	;# 
   735     0216                     TMR3GATE        equ	534	;# 
   736     0217                     T3CLK           equ	535	;# 
   737     0217                     TMR3CLK         equ	535	;# 
   738     0218                     TMR5            equ	536	;# 
   739     0218                     TMR5L           equ	536	;# 
   740     0219                     TMR5H           equ	537	;# 
   741     021A                     T5CON           equ	538	;# 
   742     021B                     T5GCON          equ	539	;# 
   743     021B                     PR5             equ	539	;# 
   744     021C                     T5GATE          equ	540	;# 
   745     021C                     TMR5GATE        equ	540	;# 
   746     021D                     T5CLK           equ	541	;# 
   747     021D                     TMR5CLK         equ	541	;# 
   748     021E                     CCPTMRS0        equ	542	;# 
   749     021F                     CCPTMRS1        equ	543	;# 
   750     028C                     T2TMR           equ	652	;# 
   751     028C                     TMR2            equ	652	;# 
   752     028D                     T2PR            equ	653	;# 
   753     028D                     PR2             equ	653	;# 
   754     028E                     T2CON           equ	654	;# 
   755     028F                     T2HLT           equ	655	;# 
   756     0290                     T2CLKCON        equ	656	;# 
   757     0290                     T2CLK           equ	656	;# 
   758     0291                     T2RST           equ	657	;# 
   759     0292                     T4TMR           equ	658	;# 
   760     0292                     TMR4            equ	658	;# 
   761     0293                     T4PR            equ	659	;# 
   762     0293                     PR4             equ	659	;# 
   763     0294                     T4CON           equ	660	;# 
   764     0295                     T4HLT           equ	661	;# 
   765     0296                     T4CLKCON        equ	662	;# 
   766     0296                     T4CLK           equ	662	;# 
   767     0297                     T4RST           equ	663	;# 
   768     0298                     T6TMR           equ	664	;# 
   769     0298                     TMR6            equ	664	;# 
   770     0299                     T6PR            equ	665	;# 
   771     0299                     PR6             equ	665	;# 
   772     029A                     T6CON           equ	666	;# 
   773     029B                     T6HLT           equ	667	;# 
   774     029C                     T6CLKCON        equ	668	;# 
   775     029C                     T6CLK           equ	668	;# 
   776     029D                     T6RST           equ	669	;# 
   777     030C                     CCPR1           equ	780	;# 
   778     030C                     CCPR1L          equ	780	;# 
   779     030D                     CCPR1H          equ	781	;# 
   780     030E                     CCP1CON         equ	782	;# 
   781     030F                     CCP1CAP         equ	783	;# 
   782     0310                     CCPR2           equ	784	;# 
   783     0310                     CCPR2L          equ	784	;# 
   784     0311                     CCPR2H          equ	785	;# 
   785     0312                     CCP2CON         equ	786	;# 
   786     0313                     CCP2CAP         equ	787	;# 
   787     0314                     CCPR3           equ	788	;# 
   788     0314                     CCPR3L          equ	788	;# 
   789     0315                     CCPR3H          equ	789	;# 
   790     0316                     CCP3CON         equ	790	;# 
   791     0317                     CCP3CAP         equ	791	;# 
   792     0318                     CCPR4           equ	792	;# 
   793     0318                     CCPR4L          equ	792	;# 
   794     0319                     CCPR4H          equ	793	;# 
   795     031A                     CCP4CON         equ	794	;# 
   796     031B                     CCP4CAP         equ	795	;# 
   797     031C                     CCPR5           equ	796	;# 
   798     031C                     CCPR5L          equ	796	;# 
   799     031D                     CCPR5H          equ	797	;# 
   800     031E                     CCP5CON         equ	798	;# 
   801     031F                     CCP5CAP         equ	799	;# 
   802     038C                     PWM6DC          equ	908	;# 
   803     038C                     PWM6DCL         equ	908	;# 
   804     038D                     PWM6DCH         equ	909	;# 
   805     038E                     PWM6CON         equ	910	;# 
   806     0390                     PWM7DC          equ	912	;# 
   807     0390                     PWM7DCL         equ	912	;# 
   808     0391                     PWM7DCH         equ	913	;# 
   809     0392                     PWM7CON         equ	914	;# 
   810     040C                     SCANLADRL       equ	1036	;# 
   811     040D                     SCANLADRH       equ	1037	;# 
   812     040E                     SCANHADRL       equ	1038	;# 
   813     040F                     SCANHADRH       equ	1039	;# 
   814     0410                     SCANCON0        equ	1040	;# 
   815     0411                     SCANTRIG        equ	1041	;# 
   816     0416                     CRCDATA         equ	1046	;# 
   817     0416                     CRCDATL         equ	1046	;# 
   818     0417                     CRCDATH         equ	1047	;# 
   819     0418                     CRCACC          equ	1048	;# 
   820     0418                     CRCACCL         equ	1048	;# 
   821     0419                     CRCACCH         equ	1049	;# 
   822     041A                     CRCSHFT         equ	1050	;# 
   823     041A                     CRCSHIFTL       equ	1050	;# 
   824     041B                     CRCSHIFTH       equ	1051	;# 
   825     041C                     CRCXOR          equ	1052	;# 
   826     041C                     CRCXORL         equ	1052	;# 
   827     041D                     CRCXORH         equ	1053	;# 
   828     041E                     CRCCON0         equ	1054	;# 
   829     041F                     CRCCON1         equ	1055	;# 
   830     048C                     SMT1TMR         equ	1164	;# 
   831     048C                     SMT1TMRL        equ	1164	;# 
   832     048D                     SMT1TMRH        equ	1165	;# 
   833     048E                     SMT1TMRU        equ	1166	;# 
   834     048F                     SMT1CPR         equ	1167	;# 
   835     048F                     SMT1CPRL        equ	1167	;# 
   836     0490                     SMT1CPRH        equ	1168	;# 
   837     0491                     SMT1CPRU        equ	1169	;# 
   838     0492                     SMT1CPW         equ	1170	;# 
   839     0492                     SMT1CPWL        equ	1170	;# 
   840     0493                     SMT1CPWH        equ	1171	;# 
   841     0494                     SMT1CPWU        equ	1172	;# 
   842     0495                     SMT1PR          equ	1173	;# 
   843     0495                     SMT1PRL         equ	1173	;# 
   844     0496                     SMT1PRH         equ	1174	;# 
   845     0497                     SMT1PRU         equ	1175	;# 
   846     0498                     SMT1CON0        equ	1176	;# 
   847     0499                     SMT1CON1        equ	1177	;# 
   848     049A                     SMT1STAT        equ	1178	;# 
   849     049B                     SMT1CLK         equ	1179	;# 
   850     049C                     SMT1SIG         equ	1180	;# 
   851     049D                     SMT1WIN         equ	1181	;# 
   852     050C                     SMT2TMR         equ	1292	;# 
   853     050C                     SMT2TMRL        equ	1292	;# 
   854     050D                     SMT2TMRH        equ	1293	;# 
   855     050E                     SMT2TMRU        equ	1294	;# 
   856     050F                     SMT2CPR         equ	1295	;# 
   857     050F                     SMT2CPRL        equ	1295	;# 
   858     0510                     SMT2CPRH        equ	1296	;# 
   859     0511                     SMT2CPRU        equ	1297	;# 
   860     0512                     SMT2CPW         equ	1298	;# 
   861     0512                     SMT2CPWL        equ	1298	;# 
   862     0513                     SMT2CPWH        equ	1299	;# 
   863     0514                     SMT2CPWU        equ	1300	;# 
   864     0515                     SMT2PR          equ	1301	;# 
   865     0515                     SMT2PRL         equ	1301	;# 
   866     0516                     SMT2PRH         equ	1302	;# 
   867     0517                     SMT2PRU         equ	1303	;# 
   868     0518                     SMT2CON0        equ	1304	;# 
   869     0519                     SMT2CON1        equ	1305	;# 
   870     051A                     SMT2STAT        equ	1306	;# 
   871     051B                     SMT2CLK         equ	1307	;# 
   872     051C                     SMT2SIG         equ	1308	;# 
   873     051D                     SMT2WIN         equ	1309	;# 
   874     058C                     NCO1ACC         equ	1420	;# 
   875     058C                     NCO1ACCL        equ	1420	;# 
   876     058D                     NCO1ACCH        equ	1421	;# 
   877     058E                     NCO1ACCU        equ	1422	;# 
   878     058F                     NCO1INC         equ	1423	;# 
   879     058F                     NCO1INCL        equ	1423	;# 
   880     0590                     NCO1INCH        equ	1424	;# 
   881     0591                     NCO1INCU        equ	1425	;# 
   882     0592                     NCO1CON         equ	1426	;# 
   883     0593                     NCO1CLK         equ	1427	;# 
   884     060C                     CWG1CLKCON      equ	1548	;# 
   885     060D                     CWG1ISM         equ	1549	;# 
   886     060E                     CWG1DBR         equ	1550	;# 
   887     060F                     CWG1DBF         equ	1551	;# 
   888     0610                     CWG1CON0        equ	1552	;# 
   889     0611                     CWG1CON1        equ	1553	;# 
   890     0612                     CWG1AS0         equ	1554	;# 
   891     0613                     CWG1AS1         equ	1555	;# 
   892     0614                     CWG1STR         equ	1556	;# 
   893     0616                     CWG2CLKCON      equ	1558	;# 
   894     0617                     CWG2ISM         equ	1559	;# 
   895     0618                     CWG2DBR         equ	1560	;# 
   896     0619                     CWG2DBF         equ	1561	;# 
   897     061A                     CWG2CON0        equ	1562	;# 
   898     061B                     CWG2CON1        equ	1563	;# 
   899     061C                     CWG2AS0         equ	1564	;# 
   900     061D                     CWG2AS1         equ	1565	;# 
   901     061E                     CWG2STR         equ	1566	;# 
   902     068C                     CWG3CLKCON      equ	1676	;# 
   903     068D                     CWG3ISM         equ	1677	;# 
   904     068E                     CWG3DBR         equ	1678	;# 
   905     068F                     CWG3DBF         equ	1679	;# 
   906     0690                     CWG3CON0        equ	1680	;# 
   907     0691                     CWG3CON1        equ	1681	;# 
   908     0692                     CWG3AS0         equ	1682	;# 
   909     0693                     CWG3AS1         equ	1683	;# 
   910     0694                     CWG3STR         equ	1684	;# 
   911     070C                     PIR0            equ	1804	;# 
   912     070D                     PIR1            equ	1805	;# 
   913     070E                     PIR2            equ	1806	;# 
   914     070F                     PIR3            equ	1807	;# 
   915     0710                     PIR4            equ	1808	;# 
   916     0711                     PIR5            equ	1809	;# 
   917     0712                     PIR6            equ	1810	;# 
   918     0713                     PIR7            equ	1811	;# 
   919     0714                     PIR8            equ	1812	;# 
   920     0716                     PIE0            equ	1814	;# 
   921     0717                     PIE1            equ	1815	;# 
   922     0718                     PIE2            equ	1816	;# 
   923     0719                     PIE3            equ	1817	;# 
   924     071A                     PIE4            equ	1818	;# 
   925     071B                     PIE5            equ	1819	;# 
   926     071C                     PIE6            equ	1820	;# 
   927     071D                     PIE7            equ	1821	;# 
   928     071E                     PIE8            equ	1822	;# 
   929     0796                     PMD0            equ	1942	;# 
   930     0797                     PMD1            equ	1943	;# 
   931     0798                     PMD2            equ	1944	;# 
   932     0799                     PMD3            equ	1945	;# 
   933     079A                     PMD4            equ	1946	;# 
   934     079B                     PMD5            equ	1947	;# 
   935     080C                     WDTCON0         equ	2060	;# 
   936     080D                     WDTCON1         equ	2061	;# 
   937     080E                     WDTPSL          equ	2062	;# 
   938     080F                     WDTPSH          equ	2063	;# 
   939     0810                     WDTTMR          equ	2064	;# 
   940     0811                     BORCON          equ	2065	;# 
   941     0812                     VREGCON         equ	2066	;# 
   942     0813                     PCON0           equ	2067	;# 
   943     0814                     CCDCON          equ	2068	;# 
   944     081A                     NVMADRL         equ	2074	;# 
   945     081B                     NVMADRH         equ	2075	;# 
   946     081C                     NVMDATL         equ	2076	;# 
   947     081D                     NVMDATH         equ	2077	;# 
   948     081E                     NVMCON1         equ	2078	;# 
   949     081F                     NVMCON2         equ	2079	;# 
   950     088C                     CPUDOZE         equ	2188	;# 
   951     088D                     OSCCON1         equ	2189	;# 
   952     088E                     OSCCON2         equ	2190	;# 
   953     088F                     OSCCON3         equ	2191	;# 
   954     0890                     OSCSTAT         equ	2192	;# 
   955     0891                     OSCEN           equ	2193	;# 
   956     0892                     OSCTUNE         equ	2194	;# 
   957     0893                     OSCFRQ          equ	2195	;# 
   958     0895                     CLKRCON         equ	2197	;# 
   959     0896                     CLKRCLK         equ	2198	;# 
   960     0897                     MDCON0          equ	2199	;# 
   961     0898                     MDCON1          equ	2200	;# 
   962     0899                     MDSRC           equ	2201	;# 
   963     089A                     MDCARL          equ	2202	;# 
   964     089B                     MDCARH          equ	2203	;# 
   965     090C                     FVRCON          equ	2316	;# 
   966     090E                     DAC1CON0        equ	2318	;# 
   967     090F                     DAC1CON1        equ	2319	;# 
   968     091F                     ZCD1CON         equ	2335	;# 
   969     091F                     ZCDCON          equ	2335	;# 
   970     098F                     CMOUT           equ	2447	;# 
   971     098F                     CMSTAT          equ	2447	;# 
   972     0990                     CM1CON0         equ	2448	;# 
   973     0991                     CM1CON1         equ	2449	;# 
   974     0992                     CM1NSEL         equ	2450	;# 
   975     0993                     CM1PSEL         equ	2451	;# 
   976     0994                     CM2CON0         equ	2452	;# 
   977     0995                     CM2CON1         equ	2453	;# 
   978     0996                     CM2NSEL         equ	2454	;# 
   979     0997                     CM2PSEL         equ	2455	;# 
   980     0E0F                     CLCDATA         equ	3599	;# 
   981     0E10                     CLC1CON         equ	3600	;# 
   982     0E11                     CLC1POL         equ	3601	;# 
   983     0E12                     CLC1SEL0        equ	3602	;# 
   984     0E13                     CLC1SEL1        equ	3603	;# 
   985     0E14                     CLC1SEL2        equ	3604	;# 
   986     0E15                     CLC1SEL3        equ	3605	;# 
   987     0E16                     CLC1GLS0        equ	3606	;# 
   988     0E17                     CLC1GLS1        equ	3607	;# 
   989     0E18                     CLC1GLS2        equ	3608	;# 
   990     0E19                     CLC1GLS3        equ	3609	;# 
   991     0E1A                     CLC2CON         equ	3610	;# 
   992     0E1B                     CLC2POL         equ	3611	;# 
   993     0E1C                     CLC2SEL0        equ	3612	;# 
   994     0E1D                     CLC2SEL1        equ	3613	;# 
   995     0E1E                     CLC2SEL2        equ	3614	;# 
   996     0E1F                     CLC2SEL3        equ	3615	;# 
   997     0E20                     CLC2GLS0        equ	3616	;# 
   998     0E21                     CLC2GLS1        equ	3617	;# 
   999     0E22                     CLC2GLS2        equ	3618	;# 
  1000     0E23                     CLC2GLS3        equ	3619	;# 
  1001     0E24                     CLC3CON         equ	3620	;# 
  1002     0E25                     CLC3POL         equ	3621	;# 
  1003     0E26                     CLC3SEL0        equ	3622	;# 
  1004     0E27                     CLC3SEL1        equ	3623	;# 
  1005     0E28                     CLC3SEL2        equ	3624	;# 
  1006     0E29                     CLC3SEL3        equ	3625	;# 
  1007     0E2A                     CLC3GLS0        equ	3626	;# 
  1008     0E2B                     CLC3GLS1        equ	3627	;# 
  1009     0E2C                     CLC3GLS2        equ	3628	;# 
  1010     0E2D                     CLC3GLS3        equ	3629	;# 
  1011     0E2E                     CLC4CON         equ	3630	;# 
  1012     0E2F                     CLC4POL         equ	3631	;# 
  1013     0E30                     CLC4SEL0        equ	3632	;# 
  1014     0E31                     CLC4SEL1        equ	3633	;# 
  1015     0E32                     CLC4SEL2        equ	3634	;# 
  1016     0E33                     CLC4SEL3        equ	3635	;# 
  1017     0E34                     CLC4GLS0        equ	3636	;# 
  1018     0E35                     CLC4GLS1        equ	3637	;# 
  1019     0E36                     CLC4GLS2        equ	3638	;# 
  1020     0E37                     CLC4GLS3        equ	3639	;# 
  1021     0E8F                     PPSLOCK         equ	3727	;# 
  1022     0E90                     INTPPS          equ	3728	;# 
  1023     0E91                     T0CKIPPS        equ	3729	;# 
  1024     0E92                     T1CKIPPS        equ	3730	;# 
  1025     0E93                     T1GPPS          equ	3731	;# 
  1026     0E94                     T3CKIPPS        equ	3732	;# 
  1027     0E95                     T3GPPS          equ	3733	;# 
  1028     0E96                     T5CKIPPS        equ	3734	;# 
  1029     0E97                     T5GPPS          equ	3735	;# 
  1030     0E9C                     T2AINPPS        equ	3740	;# 
  1031     0E9D                     T4AINPPS        equ	3741	;# 
  1032     0E9E                     T6AINPPS        equ	3742	;# 
  1033     0EA1                     CCP1PPS         equ	3745	;# 
  1034     0EA2                     CCP2PPS         equ	3746	;# 
  1035     0EA3                     CCP3PPS         equ	3747	;# 
  1036     0EA4                     CCP4PPS         equ	3748	;# 
  1037     0EA5                     CCP5PPS         equ	3749	;# 
  1038     0EA9                     SMT1WINPPS      equ	3753	;# 
  1039     0EAA                     SMT1SIGPPS      equ	3754	;# 
  1040     0EAB                     SMT2WINPPS      equ	3755	;# 
  1041     0EAC                     SMT2SIGPPS      equ	3756	;# 
  1042     0EB1                     CWG1PPS         equ	3761	;# 
  1043     0EB2                     CWG2PPS         equ	3762	;# 
  1044     0EB3                     CWG3PPS         equ	3763	;# 
  1045     0EB8                     MDCARLPPS       equ	3768	;# 
  1046     0EB9                     MDCARHPPS       equ	3769	;# 
  1047     0EBA                     MDSRCPPS        equ	3770	;# 
  1048     0EBB                     CLCIN0PPS       equ	3771	;# 
  1049     0EBC                     CLCIN1PPS       equ	3772	;# 
  1050     0EBD                     CLCIN2PPS       equ	3773	;# 
  1051     0EBE                     CLCIN3PPS       equ	3774	;# 
  1052     0EC3                     ADCACTPPS       equ	3779	;# 
  1053     0EC5                     SSP1CLKPPS      equ	3781	;# 
  1054     0EC6                     SSP1DATPPS      equ	3782	;# 
  1055     0EC7                     SSP1SSPPS       equ	3783	;# 
  1056     0EC8                     SSP2CLKPPS      equ	3784	;# 
  1057     0EC9                     SSP2DATPPS      equ	3785	;# 
  1058     0ECA                     SSP2SSPPS       equ	3786	;# 
  1059     0ECB                     RXPPS           equ	3787	;# 
  1060     0ECC                     TXPPS           equ	3788	;# 
  1061     0F10                     RA0PPS          equ	3856	;# 
  1062     0F11                     RA1PPS          equ	3857	;# 
  1063     0F12                     RA2PPS          equ	3858	;# 
  1064     0F13                     RA3PPS          equ	3859	;# 
  1065     0F14                     RA4PPS          equ	3860	;# 
  1066     0F15                     RA5PPS          equ	3861	;# 
  1067     0F16                     RA6PPS          equ	3862	;# 
  1068     0F17                     RA7PPS          equ	3863	;# 
  1069     0F18                     RB0PPS          equ	3864	;# 
  1070     0F19                     RB1PPS          equ	3865	;# 
  1071     0F1A                     RB2PPS          equ	3866	;# 
  1072     0F1B                     RB3PPS          equ	3867	;# 
  1073     0F1C                     RB4PPS          equ	3868	;# 
  1074     0F1D                     RB5PPS          equ	3869	;# 
  1075     0F1E                     RB6PPS          equ	3870	;# 
  1076     0F1F                     RB7PPS          equ	3871	;# 
  1077     0F20                     RC0PPS          equ	3872	;# 
  1078     0F21                     RC1PPS          equ	3873	;# 
  1079     0F22                     RC2PPS          equ	3874	;# 
  1080     0F23                     RC3PPS          equ	3875	;# 
  1081     0F24                     RC4PPS          equ	3876	;# 
  1082     0F25                     RC5PPS          equ	3877	;# 
  1083     0F26                     RC6PPS          equ	3878	;# 
  1084     0F27                     RC7PPS          equ	3879	;# 
  1085     0F38                     ANSELA          equ	3896	;# 
  1086     0F39                     WPUA            equ	3897	;# 
  1087     0F3A                     ODCONA          equ	3898	;# 
  1088     0F3B                     SLRCONA         equ	3899	;# 
  1089     0F3C                     INLVLA          equ	3900	;# 
  1090     0F3D                     IOCAP           equ	3901	;# 
  1091     0F3E                     IOCAN           equ	3902	;# 
  1092     0F3F                     IOCAF           equ	3903	;# 
  1093     0F40                     CCDNA           equ	3904	;# 
  1094     0F41                     CCDPA           equ	3905	;# 
  1095     0F43                     ANSELB          equ	3907	;# 
  1096     0F44                     WPUB            equ	3908	;# 
  1097     0F45                     ODCONB          equ	3909	;# 
  1098     0F46                     SLRCONB         equ	3910	;# 
  1099     0F47                     INLVLB          equ	3911	;# 
  1100     0F48                     IOCBP           equ	3912	;# 
  1101     0F49                     IOCBN           equ	3913	;# 
  1102     0F4A                     IOCBF           equ	3914	;# 
  1103     0F4B                     CCDNB           equ	3915	;# 
  1104     0F4C                     CCDPB           equ	3916	;# 
  1105     0F4E                     ANSELC          equ	3918	;# 
  1106     0F4F                     WPUC            equ	3919	;# 
  1107     0F50                     ODCONC          equ	3920	;# 
  1108     0F51                     SLRCONC         equ	3921	;# 
  1109     0F52                     INLVLC          equ	3922	;# 
  1110     0F53                     IOCCP           equ	3923	;# 
  1111     0F54                     IOCCN           equ	3924	;# 
  1112     0F55                     IOCCF           equ	3925	;# 
  1113     0F56                     CCDNC           equ	3926	;# 
  1114     0F57                     CCDPC           equ	3927	;# 
  1115     0F65                     WPUE            equ	3941	;# 
  1116     0F68                     INLVLE          equ	3944	;# 
  1117     0F69                     IOCEP           equ	3945	;# 
  1118     0F6A                     IOCEN           equ	3946	;# 
  1119     0F6B                     IOCEF           equ	3947	;# 
  1120     0FE4                     STATUS_SHAD     equ	4068	;# 
  1121     0FE5                     WREG_SHAD       equ	4069	;# 
  1122     0FE6                     BSR_SHAD        equ	4070	;# 
  1123     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1124     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1125     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1126     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1127     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1128     0FED                     STKPTR          equ	4077	;# 
  1129     0FEE                     TOSL            equ	4078	;# 
  1130     0FEF                     TOSH            equ	4079	;# 
  1131                           
  1132                           	psect	idataBANK0
  1133     0370                     __pidataBANK0:
  1134                           
  1135                           ;initializer for _Loading
  1136     0370  347C               	retlw	124
  1137     0371  342F               	retlw	47
  1138     0372  342D               	retlw	45
  1139     0373  345C               	retlw	92
  1140                           
  1141                           ;initializer for _FFT_Home1
  1142     0374  3446               	retlw	70
  1143     0375  3441               	retlw	65
  1144     0376  3453               	retlw	83
  1145     0377  3454               	retlw	84
  1146     0378  3420               	retlw	32
  1147     0379  3446               	retlw	70
  1148     037A  344F               	retlw	79
  1149     037B  3455               	retlw	85
  1150     037C  3452               	retlw	82
  1151     037D  3449               	retlw	73
  1152     037E  3445               	retlw	69
  1153     037F  3452               	retlw	82
  1154     0380  3420               	retlw	32
  1155     0381  3420               	retlw	32
  1156     0382  3420               	retlw	32
  1157     0383  3420               	retlw	32
  1158                           
  1159                           ;initializer for _Rover_Team
  1160     0384  343C               	retlw	60
  1161     0385  343C               	retlw	60
  1162     0386  3452               	retlw	82
  1163     0387  344F               	retlw	79
  1164     0388  3456               	retlw	86
  1165     0389  3445               	retlw	69
  1166     038A  3452               	retlw	82
  1167     038B  3420               	retlw	32
  1168     038C  3454               	retlw	84
  1169     038D  3445               	retlw	69
  1170     038E  3441               	retlw	65
  1171     038F  344D               	retlw	77
  1172     0390  3420               	retlw	32
  1173     0391  3435               	retlw	53
  1174     0392  343E               	retlw	62
  1175     0393  343E               	retlw	62
  1176                           
  1177                           	psect	idataBANK1
  1178     04BB                     __pidataBANK1:
  1179                           
  1180                           ;initializer for _FFT_Home2
  1181     04BB  3454               	retlw	84
  1182     04BC  3452               	retlw	82
  1183     04BD  3441               	retlw	65
  1184     04BE  344E               	retlw	78
  1185     04BF  3453               	retlw	83
  1186     04C0  3446               	retlw	70
  1187     04C1  344F               	retlw	79
  1188     04C2  3452               	retlw	82
  1189     04C3  344D               	retlw	77
  1190     04C4  3420               	retlw	32
  1191     04C5  3420               	retlw	32
  1192     04C6  3420               	retlw	32
  1193     04C7  3420               	retlw	32
  1194     04C8  3420               	retlw	32
  1195     04C9  3420               	retlw	32
  1196     04CA  3420               	retlw	32
  1197     000C                     _PORTAbits      set	12
  1198     0017                     _LATBbits       set	23
  1199     0012                     _TRISBbits      set	18
  1200     0013                     _TRISCbits      set	19
  1201     0011                     _TRISAbits      set	17
  1202     0016                     _LATAbits       set	22
  1203     000B                     _INTCONbits     set	11
  1204     0119                     _RC1REG         set	281
  1205     011E                     _TX1STAbits     set	286
  1206     011D                     _RC1STAbits     set	285
  1207     011B                     _SP1BRGL        set	283
  1208     011C                     _SP1BRGH        set	284
  1209     011F                     _BAUD1CONbits   set	287
  1210     08F2                     _BRGH           set	2290
  1211     08FB                     _BRG16          set	2299
  1212     0199                     _SSP2STATbits   set	409
  1213     0196                     _SSP2BUF        set	406
  1214     0197                     _SSP2ADDbits    set	407
  1215     019A                     _SSP2CON1bits   set	410
  1216     019B                     _SSP2CON2bits   set	411
  1217     070F                     _PIR3bits       set	1807
  1218     0719                     _PIE3bits       set	1817
  1219     088D                     _OSCCON1bits    set	2189
  1220     0890                     _OSCSTATbits    set	2192
  1221     0893                     _OSCFRQbits     set	2195
  1222     088F                     _OSCCON3bits    set	2191
  1223     0EC9                     _SSP2DATPPSbits set	3785
  1224     0EC8                     _SSP2CLKPPSbits set	3784
  1225     0E8F                     _PPSLOCKbits    set	3727
  1226     0F25                     _RC5PPS         set	3877
  1227     0F23                     _RC3PPS         set	3875
  1228     0F24                     _RC4PPS         set	3876
  1229     0F43                     _ANSELBbits     set	3907
  1230     0F4E                     _ANSELCbits     set	3918
  1231     0F38                     _ANSELAbits     set	3896
  1232                           
  1233                           	psect	cinit
  1234     003D                     start_initialization:	
  1235                           ; #config settings
  1236                           
  1237     003D                     __initialization:
  1238                           
  1239                           ; Initialize objects allocated to BANK0
  1240     003D  3070               	movlw	low __pidataBANK0
  1241     003E  0084               	movwf	4
  1242     003F  3083               	movlw	(high __pidataBANK0)| (0+128)
  1243     0040  0085               	movwf	5
  1244     0041  3020               	movlw	low __pdataBANK0
  1245     0042  0086               	movwf	6
  1246     0043  3000               	movlw	high __pdataBANK0
  1247     0044  0087               	movwf	7
  1248     0045  3024               	movlw	36
  1249     0046  3184  24F1  3180   	fcall	init_ram
  1250                           
  1251                           ; Initialize objects allocated to BANK1
  1252     0049  30BB               	movlw	low __pidataBANK1
  1253     004A  0084               	movwf	4
  1254     004B  3084               	movlw	(high __pidataBANK1)| (0+128)
  1255     004C  0085               	movwf	5
  1256     004D  30A0               	movlw	low __pdataBANK1
  1257     004E  0086               	movwf	6
  1258     004F  3000               	movlw	high __pdataBANK1
  1259     0050  0087               	movwf	7
  1260     0051  3010               	movlw	16
  1261     0052  3184  24F1  3180   	fcall	init_ram
  1262                           
  1263                           ; Clear objects allocated to COMMON
  1264     0055  01FA               	clrf	__pbssCOMMON& (0+127)
  1265                           
  1266                           ; Clear objects allocated to BANK0
  1267     0056  305A               	movlw	low __pbssBANK0
  1268     0057  0084               	movwf	4
  1269     0058  3000               	movlw	high __pbssBANK0
  1270     0059  0085               	movwf	5
  1271     005A  300F               	movlw	15
  1272     005B  3184  24F7  3180   	fcall	clear_ram0
  1273     005E                     end_of_initialization:	
  1274                           ;End of C runtime variable initialization code
  1275                           
  1276     005E                     __end_of__initialization:
  1277     005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1278     005F  0020               	movlb	0
  1279     0060  3183  2B49         	ljmp	_main	;jump to C main() function
  1280                           
  1281                           	psect	bssCOMMON
  1282     007A                     __pbssCOMMON:
  1283     007A                     _bf:
  1284     007A                     	ds	1
  1285                           
  1286                           	psect	bssBANK0
  1287     005A                     __pbssBANK0:
  1288     005A                     _LCD:
  1289     005A                     	ds	12
  1290     0066                     _frequency:
  1291     0066                     	ds	2
  1292     0068                     _UART_Not_Recieved:
  1293     0068                     	ds	1
  1294                           
  1295                           	psect	dataBANK0
  1296     0020                     __pdataBANK0:
  1297     0020                     _Loading:
  1298     0020                     	ds	4
  1299     0024                     _FFT_Home1:
  1300     0024                     	ds	16
  1301     0034                     _Rover_Team:
  1302     0034                     	ds	16
  1303                           
  1304                           	psect	dataBANK1
  1305     00A0                     __pdataBANK1:
  1306     00A0                     _FFT_Home2:
  1307     00A0                     	ds	16
  1308                           
  1309                           	psect	inittext
  1310     04F1                     init_ram:
  1311     04F1  00FE               	movwf	btemp
  1312     04F2                     initloop:
  1313     04F2  0012               	moviw fsr0++
  1314     04F3  001E               	movwi fsr1++
  1315     04F4  0BFE               	decfsz	btemp,f
  1316     04F5  2CF2               	goto	initloop
  1317     04F6  3400               	retlw	0
  1318                           
  1319                           	psect	clrtext
  1320     04F7                     clear_ram0:	
  1321                           ;	Called with FSR0 containing the base address, and
  1322                           ;	WREG with the size to clear
  1323                           
  1324     04F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1325     04F8                     clrloop0:
  1326     04F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1327     04F9  3101               	addfsr 0,1
  1328     04FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1329     04FB  2CF8               	goto	clrloop0	;have we reached the end yet?
  1330     04FC  3400               	retlw	0	;all done for this memory range, return
  1331                           
  1332                           	psect	cstackCOMMON
  1333     0070                     __pcstackCOMMON:
  1334     0070                     ?_configUART1:
  1335     0070                     ?_configISR:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338     0070                     ?_I2C_stop:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341     0070                     ?_configI2C:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344     0070                     ?_I2C_start:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347     0070                     ?_I2C_write:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350     0070                     ?_HAL_Pulse_Enable:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353     0070                     ?__write_byte:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356     0070                     ?_HAL_Write_Init_Nibble:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359     0070                     ?_HAL_Write_Command:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362     0070                     ?_HAL_Write_Data:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365     0070                     ?_HAL_Clear:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368     0070                     ?_HAL_Display_On:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371     0070                     ?_init_LCD:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374     0070                     ?_initinit:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377     0070                     ?_configPins:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380     0070                     ?_intToChar:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383     0070                     ?_alienFrequencyTask:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386     0070                     ?_initialize_all:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389     0070                     ?_main:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392     0070                     ?_ISR:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395     0070                     ??_ISR:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398                           
  1399                           ; 1 bytes @ 0x0
  1400     0070                     	ds	3
  1401     0073                     ?_HAL_LED_OFF:
  1402     0073                     ?___awdiv:	
  1403                           ; 1 bytes @ 0x3
  1404                           
  1405     0073                     ?___lwdiv:	
  1406                           ; 2 bytes @ 0x3
  1407                           
  1408     0073                     ?___lwmod:	
  1409                           ; 2 bytes @ 0x3
  1410                           
  1411     0073                     I2C_write@data:	
  1412                           ; 2 bytes @ 0x3
  1413                           
  1414     0073                     intToChar@integer:	
  1415                           ; 1 bytes @ 0x3
  1416                           
  1417     0073                     HAL_LED_OFF@LED:	
  1418                           ; 1 bytes @ 0x3
  1419                           
  1420     0073                     ___awdiv@divisor:	
  1421                           ; 2 bytes @ 0x3
  1422                           
  1423     0073                     ___lwdiv@divisor:	
  1424                           ; 2 bytes @ 0x3
  1425                           
  1426     0073                     ___lwmod@divisor:	
  1427                           ; 2 bytes @ 0x3
  1428                           
  1429     0073                     ??_configUART1:	
  1430                           ; 2 bytes @ 0x3
  1431                           
  1432     0073                     ??_configISR:	
  1433                           ; 1 bytes @ 0x3
  1434                           
  1435     0073                     ??_I2C_stop:	
  1436                           ; 1 bytes @ 0x3
  1437                           
  1438     0073                     ??_configI2C:	
  1439                           ; 1 bytes @ 0x3
  1440                           
  1441     0073                     ??_I2C_start:	
  1442                           ; 1 bytes @ 0x3
  1443                           
  1444     0073                     ??_I2C_write:	
  1445                           ; 1 bytes @ 0x3
  1446                           
  1447     0073                     ??_configPins:	
  1448                           ; 1 bytes @ 0x3
  1449                           
  1450     0073                     ??_intToChar:	
  1451                           ; 1 bytes @ 0x3
  1452                           
  1453                           
  1454                           ; 1 bytes @ 0x3
  1455     0073                     	ds	1
  1456     0074                     ?_HAL_I2C_Master_Transmit:
  1457     0074                     HAL_I2C_Master_Transmit@dataByte:	
  1458                           ; 1 bytes @ 0x4
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x4
  1462     0074                     	ds	1
  1463     0075                     HAL_I2C_Master_Transmit@numberOfDataBytes:
  1464     0075                     ___awdiv@dividend:	
  1465                           ; 1 bytes @ 0x5
  1466                           
  1467     0075                     ___lwdiv@dividend:	
  1468                           ; 2 bytes @ 0x5
  1469                           
  1470     0075                     ___lwmod@dividend:	
  1471                           ; 2 bytes @ 0x5
  1472                           
  1473     0075                     ??_HAL_LED_OFF:	
  1474                           ; 2 bytes @ 0x5
  1475                           
  1476                           
  1477                           ; 1 bytes @ 0x5
  1478     0075                     	ds	1
  1479     0076                     HAL_I2C_Master_Transmit@slaveAddress:
  1480     0076                     ??_HAL_I2C_Master_Transmit:	
  1481                           ; 1 bytes @ 0x6
  1482                           
  1483                           
  1484                           ; 1 bytes @ 0x6
  1485     0076                     	ds	1
  1486     0077                     HAL_Pulse_Enable@byte:
  1487     0077                     ___lwmod@counter:	
  1488                           ; 1 bytes @ 0x7
  1489                           
  1490     0077                     ___lwdiv@quotient:	
  1491                           ; 1 bytes @ 0x7
  1492                           
  1493     0077                     ??_HAL_Pulse_Enable:	
  1494                           ; 2 bytes @ 0x7
  1495                           
  1496     0077                     ??___awdiv:	
  1497                           ; 1 bytes @ 0x7
  1498                           
  1499     0077                     ??___lwdiv:	
  1500                           ; 1 bytes @ 0x7
  1501                           
  1502     0077                     ??___lwmod:	
  1503                           ; 1 bytes @ 0x7
  1504                           
  1505                           
  1506                           ; 1 bytes @ 0x7
  1507     0077                     	ds	1
  1508     0078                     __write_byte@byte:
  1509     0078                     ??__write_byte:	
  1510                           ; 1 bytes @ 0x8
  1511                           
  1512     0078                     ??_HAL_Write_Init_Nibble:	
  1513                           ; 1 bytes @ 0x8
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x8
  1517     0078                     	ds	1
  1518     0079                     ___lwdiv@counter:
  1519     0079                     ??_HAL_Write_Command:	
  1520                           ; 1 bytes @ 0x9
  1521                           
  1522     0079                     ??_HAL_Write_Data:	
  1523                           ; 1 bytes @ 0x9
  1524                           
  1525                           
  1526                           ; 1 bytes @ 0x9
  1527     0079                     	ds	1
  1528     007A                     ??_HAL_Display_On:
  1529     007A                     ??_HAL_Set_Entry_Mode:	
  1530                           ; 1 bytes @ 0xA
  1531                           
  1532     007A                     ??_HAL_Set_Cursor:	
  1533                           ; 1 bytes @ 0xA
  1534                           
  1535     007A                     ??_init_LCD:	
  1536                           ; 1 bytes @ 0xA
  1537                           
  1538     007A                     ??_initialize_all:	
  1539                           ; 1 bytes @ 0xA
  1540                           
  1541                           
  1542                           	psect	cstackBANK0
  1543     0044                     __pcstackBANK0:	
  1544                           ; 1 bytes @ 0xA
  1545                           
  1546     0044                     HAL_Write_Init_Nibble@nibble:
  1547     0044                     HAL_Write_Command@cmd:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550     0044                     HAL_Write_Data@data:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553     0044                     ___awdiv@counter:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556                           
  1557                           ; 1 bytes @ 0x0
  1558     0044                     	ds	1
  1559     0045                     ?_HAL_Set_Entry_Mode:
  1560     0045                     ?_HAL_Set_Cursor:	
  1561                           ; 1 bytes @ 0x1
  1562                           
  1563     0045                     ?_HAL_LCD_Print:	
  1564                           ; 1 bytes @ 0x1
  1565                           
  1566     0045                     HAL_Write_Init_Nibble@byte:	
  1567                           ; 1 bytes @ 0x1
  1568                           
  1569     0045                     HAL_LCD_Print@string:	
  1570                           ; 1 bytes @ 0x1
  1571                           
  1572     0045                     ___awdiv@sign:	
  1573                           ; 1 bytes @ 0x1
  1574                           
  1575     0045                     HAL_Set_Entry_Mode@inc:	
  1576                           ; 1 bytes @ 0x1
  1577                           
  1578     0045                     HAL_Set_Cursor@col:	
  1579                           ; 2 bytes @ 0x1
  1580                           
  1581     0045                     ??_HAL_Clear:	
  1582                           ; 2 bytes @ 0x1
  1583                           
  1584                           
  1585                           ; 1 bytes @ 0x1
  1586     0045                     	ds	1
  1587     0046                     HAL_LCD_Print@size:
  1588     0046                     ___awdiv@quotient:	
  1589                           ; 2 bytes @ 0x2
  1590                           
  1591                           
  1592                           ; 2 bytes @ 0x2
  1593     0046                     	ds	1
  1594     0047                     HAL_Set_Entry_Mode@shift:
  1595     0047                     HAL_Set_Cursor@line:	
  1596                           ; 2 bytes @ 0x3
  1597                           
  1598                           
  1599                           ; 2 bytes @ 0x3
  1600     0047                     	ds	1
  1601     0048                     ??_HAL_LCD_Print:
  1602                           
  1603                           ; 1 bytes @ 0x4
  1604     0048                     	ds	1
  1605     0049                     HAL_Set_Entry_Mode@entry_mode:
  1606     0049                     HAL_Set_Cursor@addr:	
  1607                           ; 2 bytes @ 0x5
  1608                           
  1609     0049                     HAL_LCD_Print@i:	
  1610                           ; 2 bytes @ 0x5
  1611                           
  1612                           
  1613                           ; 2 bytes @ 0x5
  1614     0049                     	ds	2
  1615     004B                     ??_initinit:
  1616     004B                     ??_alienFrequencyTask:	
  1617                           ; 1 bytes @ 0x7
  1618                           
  1619                           
  1620                           ; 1 bytes @ 0x7
  1621     004B                     	ds	2
  1622     004D                     alienFrequencyTask@freq_char:
  1623                           
  1624                           ; 4 bytes @ 0x9
  1625     004D                     	ds	4
  1626     0051                     alienFrequencyTask@freq_digit:
  1627                           
  1628                           ; 4 bytes @ 0xD
  1629     0051                     	ds	4
  1630     0055                     alienFrequencyTask@counter:
  1631                           
  1632                           ; 1 bytes @ 0x11
  1633     0055                     	ds	1
  1634     0056                     alienFrequencyTask@i:
  1635                           
  1636                           ; 2 bytes @ 0x12
  1637     0056                     	ds	2
  1638     0058                     ??_main:
  1639                           
  1640                           ; 1 bytes @ 0x14
  1641     0058                     	ds	2
  1642                           
  1643                           	psect	maintext
  1644     0349                     __pmaintext:	
  1645 ;;
  1646 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1647 ;;
  1648 ;; *************** function _main *****************
  1649 ;; Defined at:
  1650 ;;		line 573 in file "Rover_Main_Ver01.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : B1F/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;Total ram usage:        2 bytes
  1669 ;; Hardware stack levels required when called: 10
  1670 ;; This function calls:
  1671 ;;		_HAL_LCD_Print
  1672 ;;		_alienFrequencyTask
  1673 ;;		_initialize_all
  1674 ;; This function is called by:
  1675 ;;		Startup code after reset
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679     0349                     _main:	
  1680                           ;psect for function _main
  1681                           
  1682     0349                     l2090:	
  1683                           ;incstack = 0
  1684                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1685                           
  1686                           
  1687                           ;Rover_Main_Ver01.c: 574:     initialize_all();
  1688     0349  3181  21AC  3183   	fcall	_initialize_all
  1689     034C                     l2092:
  1690                           
  1691                           ;Rover_Main_Ver01.c: 575:     LATBbits.LATB4 = 1;
  1692     034C  0020               	movlb	0	; select bank0
  1693     034D  1617               	bsf	23,4	;volatile
  1694     034E                     l2094:
  1695                           
  1696                           ;Rover_Main_Ver01.c: 576:     _delay((unsigned long)((5000)*(32000000/4000.0)));
  1697     034E  30CB               	movlw	203
  1698     034F  0020               	movlb	0	; select bank0
  1699     0350  00D9               	movwf	??_main+1
  1700     0351  30EC               	movlw	236
  1701     0352  00D8               	movwf	??_main
  1702     0353  3084               	movlw	132
  1703     0354                     u1207:
  1704     0354  0B89               	decfsz	9,f
  1705     0355  2B54               	goto	u1207
  1706     0356  0BD8               	decfsz	??_main,f
  1707     0357  2B54               	goto	u1207
  1708     0358  0BD9               	decfsz	??_main+1,f
  1709     0359  2B54               	goto	u1207
  1710     035A  0000               	nop
  1711     035B                     l2096:
  1712                           
  1713                           ;Rover_Main_Ver01.c: 578:         HAL_LCD_Print(&Rover_Team[0], 16);
  1714     035B  3034               	movlw	(low (_Rover_Team| 0))& (0+255)
  1715     035C  0020               	movlb	0	; select bank0
  1716     035D  00C5               	movwf	HAL_LCD_Print@string
  1717     035E  3010               	movlw	16
  1718     035F  00C6               	movwf	HAL_LCD_Print@size
  1719     0360  3000               	movlw	0
  1720     0361  00C7               	movwf	HAL_LCD_Print@size+1
  1721     0362  3183  231C  3183   	fcall	_HAL_LCD_Print
  1722     0365                     l275:	
  1723                           ;Rover_Main_Ver01.c: 580:         }
  1724                           
  1725                           
  1726                           ;Rover_Main_Ver01.c: 579:         while(PORTAbits.RA5 == 1){
  1727     0365  0020               	movlb	0	; select bank0
  1728     0366  1A8C               	btfsc	12,5	;volatile
  1729     0367  2B69               	goto	u1191
  1730     0368  2B6A               	goto	u1190
  1731     0369                     u1191:
  1732     0369  2B65               	goto	l275
  1733     036A                     u1190:
  1734     036A                     l2098:
  1735                           
  1736                           ;Rover_Main_Ver01.c: 581:         alienFrequencyTask();
  1737     036A  3180  2062  3183   	fcall	_alienFrequencyTask
  1738     036D  2B5B               	goto	l2096
  1739     036E  3180  283B         	ljmp	start
  1740     0370                     __end_of_main:
  1741                           
  1742                           	psect	text1
  1743     01AC                     __ptext1:	
  1744 ;; *************** function _initialize_all *****************
  1745 ;; Defined at:
  1746 ;;		line 544 in file "Rover_Main_Ver01.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 9
  1767 ;; This function calls:
  1768 ;;		_HAL_LED_OFF
  1769 ;;		_configI2C
  1770 ;;		_configISR
  1771 ;;		_configPins
  1772 ;;		_configUART1
  1773 ;;		_init_LCD
  1774 ;;		_initinit
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780     01AC                     _initialize_all:	
  1781                           ;psect for function _initialize_all
  1782                           
  1783     01AC                     l2026:	
  1784                           ;incstack = 0
  1785                           ; Regs used in _initialize_all: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1786                           
  1787                           
  1788                           ;Rover_Main_Ver01.c: 545:     OSCCON3bits.CSWHOLD = 0;
  1789     01AC  0031               	movlb	17	; select bank17
  1790     01AD  138F               	bcf	15,7	;volatile
  1791     01AE                     l2028:
  1792                           
  1793                           ;Rover_Main_Ver01.c: 546:     OSCFRQbits.HFFRQ = 0b101;
  1794     01AE  0813               	movf	19,w	;volatile
  1795     01AF  39F8               	andlw	-8
  1796     01B0  3805               	iorlw	5
  1797     01B1  0093               	movwf	19	;volatile
  1798     01B2                     l2030:
  1799                           
  1800                           ;Rover_Main_Ver01.c: 547:     OSCSTATbits.HFOR = 1;
  1801     01B2  1710               	bsf	16,6	;volatile
  1802                           
  1803                           ;Rover_Main_Ver01.c: 548:     OSCCON1bits.NOSC = 001;
  1804     01B3  080D               	movf	13,w	;volatile
  1805     01B4  398F               	andlw	-113
  1806     01B5  3810               	iorlw	16
  1807     01B6  008D               	movwf	13	;volatile
  1808     01B7                     l2032:
  1809                           
  1810                           ;Rover_Main_Ver01.c: 552:     LCD._backlight = 0x8;
  1811     01B7  3008               	movlw	8
  1812     01B8  0020               	movlb	0	; select bank0
  1813     01B9  00E4               	movwf	_LCD+10
  1814     01BA  3000               	movlw	0
  1815     01BB  00E5               	movwf	_LCD+11
  1816     01BC                     l2034:
  1817                           
  1818                           ;Rover_Main_Ver01.c: 553:     LCD._current_state = 0x0;
  1819     01BC  01E2               	clrf	_LCD+8
  1820     01BD  01E3               	clrf	_LCD+9
  1821     01BE                     l2036:
  1822                           
  1823                           ;Rover_Main_Ver01.c: 554:     LCD.i2c = 1;
  1824     01BE  3001               	movlw	1
  1825     01BF  00DC               	movwf	_LCD+2
  1826     01C0  3000               	movlw	0
  1827     01C1  00DD               	movwf	_LCD+3
  1828     01C2                     l2038:
  1829                           
  1830                           ;Rover_Main_Ver01.c: 555:     LCD.i2c_addr = 39<<1;
  1831     01C2  304E               	movlw	78
  1832     01C3  00DA               	movwf	_LCD
  1833     01C4  3000               	movlw	0
  1834     01C5  00DB               	movwf	_LCD+1
  1835     01C6                     l2040:
  1836                           
  1837                           ;Rover_Main_Ver01.c: 556:     LCD.num_columns = 16;
  1838     01C6  3010               	movlw	16
  1839     01C7  00E0               	movwf	_LCD+6
  1840     01C8  3000               	movlw	0
  1841     01C9  00E1               	movwf	_LCD+7
  1842     01CA                     l2042:
  1843                           
  1844                           ;Rover_Main_Ver01.c: 557:     LCD.num_lines = 2;
  1845     01CA  3002               	movlw	2
  1846     01CB  00DE               	movwf	_LCD+4
  1847     01CC  3000               	movlw	0
  1848     01CD  00DF               	movwf	_LCD+5
  1849     01CE                     l2044:
  1850                           
  1851                           ;Rover_Main_Ver01.c: 558:     configPins();
  1852     01CE  3182  223E  3181   	fcall	_configPins
  1853     01D1                     l2046:
  1854                           
  1855                           ;Rover_Main_Ver01.c: 559:     configI2C();
  1856     01D1  3184  24D9  3181   	fcall	_configI2C
  1857     01D4                     l2048:
  1858                           
  1859                           ;Rover_Main_Ver01.c: 560:     configUART1();
  1860     01D4  3184  2485  3181   	fcall	_configUART1
  1861     01D7                     l2050:
  1862                           
  1863                           ;Rover_Main_Ver01.c: 561:     initinit();
  1864     01D7  3181  21FD  3181   	fcall	_initinit
  1865     01DA                     l2052:
  1866                           
  1867                           ;Rover_Main_Ver01.c: 562:     init_LCD();
  1868     01DA  3184  2473  3181   	fcall	_init_LCD
  1869     01DD                     l2054:
  1870                           
  1871                           ;Rover_Main_Ver01.c: 563:     configISR();
  1872     01DD  3185  2502  3181   	fcall	_configISR
  1873     01E0                     l2056:
  1874                           
  1875                           ;Rover_Main_Ver01.c: 565:     HAL_LED_OFF(1);
  1876     01E0  3001               	movlw	1
  1877     01E1  00F3               	movwf	HAL_LED_OFF@LED
  1878     01E2  3000               	movlw	0
  1879     01E3  00F4               	movwf	HAL_LED_OFF@LED+1
  1880     01E4  3183  23D8  3181   	fcall	_HAL_LED_OFF
  1881     01E7                     l2058:
  1882                           
  1883                           ;Rover_Main_Ver01.c: 566:     HAL_LED_OFF(2);
  1884     01E7  3002               	movlw	2
  1885     01E8  00F3               	movwf	HAL_LED_OFF@LED
  1886     01E9  3000               	movlw	0
  1887     01EA  00F4               	movwf	HAL_LED_OFF@LED+1
  1888     01EB  3183  23D8  3181   	fcall	_HAL_LED_OFF
  1889     01EE                     l2060:
  1890                           
  1891                           ;Rover_Main_Ver01.c: 567:     HAL_LED_OFF(3);
  1892     01EE  3003               	movlw	3
  1893     01EF  00F3               	movwf	HAL_LED_OFF@LED
  1894     01F0  3000               	movlw	0
  1895     01F1  00F4               	movwf	HAL_LED_OFF@LED+1
  1896     01F2  3183  23D8  3181   	fcall	_HAL_LED_OFF
  1897     01F5                     l2062:
  1898                           
  1899                           ;Rover_Main_Ver01.c: 568:     HAL_LED_OFF(4);
  1900     01F5  3004               	movlw	4
  1901     01F6  00F3               	movwf	HAL_LED_OFF@LED
  1902     01F7  3000               	movlw	0
  1903     01F8  00F4               	movwf	HAL_LED_OFF@LED+1
  1904     01F9  3183  23D8  3181   	fcall	_HAL_LED_OFF
  1905     01FC                     l269:
  1906     01FC  0008               	return
  1907     01FD                     __end_of_initialize_all:
  1908                           
  1909                           	psect	text2
  1910     01FD                     __ptext2:	
  1911 ;; *************** function _initinit *****************
  1912 ;; Defined at:
  1913 ;;		line 343 in file "Rover_Main_Ver01.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;Total ram usage:        1 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 8
  1934 ;; This function calls:
  1935 ;;		_HAL_Write_Init_Nibble
  1936 ;;		_init_LCD
  1937 ;; This function is called by:
  1938 ;;		_initialize_all
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942     01FD                     _initinit:	
  1943                           ;psect for function _initinit
  1944                           
  1945     01FD                     l1914:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _initinit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1948                           
  1949                           
  1950                           ;Rover_Main_Ver01.c: 344:  _delay((unsigned long)((20)*(32000000/4000.0)));
  1951     01FD  30D0               	movlw	208
  1952     01FE  0020               	movlb	0	; select bank0
  1953     01FF  00CB               	movwf	??_initinit
  1954     0200  30C9               	movlw	201
  1955     0201                     u1217:
  1956     0201  0B89               	decfsz	9,f
  1957     0202  2A01               	goto	u1217
  1958     0203  0BCB               	decfsz	??_initinit,f
  1959     0204  2A01               	goto	u1217
  1960     0205  3200               	nop2
  1961     0206                     l1916:
  1962                           
  1963                           ;Rover_Main_Ver01.c: 345:  HAL_Write_Init_Nibble(0x30);
  1964     0206  3030               	movlw	48
  1965     0207  3183  2394  3181   	fcall	_HAL_Write_Init_Nibble
  1966     020A                     l1918:
  1967                           
  1968                           ;Rover_Main_Ver01.c: 346:  _delay((unsigned long)((5)*(32000000/4000.0)));
  1969     020A  3034               	movlw	52
  1970     020B  0020               	movlb	0	; select bank0
  1971     020C  00CB               	movwf	??_initinit
  1972     020D  30F1               	movlw	241
  1973     020E                     u1227:
  1974     020E  0B89               	decfsz	9,f
  1975     020F  2A0E               	goto	u1227
  1976     0210  0BCB               	decfsz	??_initinit,f
  1977     0211  2A0E               	goto	u1227
  1978     0212  3200               	nop2
  1979                           
  1980                           ;Rover_Main_Ver01.c: 347:  HAL_Write_Init_Nibble(0x30);
  1981     0213  3030               	movlw	48
  1982     0214  3183  2394  3181   	fcall	_HAL_Write_Init_Nibble
  1983     0217                     l1920:
  1984                           
  1985                           ;Rover_Main_Ver01.c: 348:  _delay((unsigned long)((1)*(32000000/4000.0)));
  1986     0217  300B               	movlw	11
  1987     0218  0020               	movlb	0	; select bank0
  1988     0219  00CB               	movwf	??_initinit
  1989     021A  3062               	movlw	98
  1990     021B                     u1237:
  1991     021B  0B89               	decfsz	9,f
  1992     021C  2A1B               	goto	u1237
  1993     021D  0BCB               	decfsz	??_initinit,f
  1994     021E  2A1B               	goto	u1237
  1995     021F  0000               	nop
  1996     0220                     l1922:
  1997                           
  1998                           ;Rover_Main_Ver01.c: 349:  HAL_Write_Init_Nibble(0x30);
  1999     0220  3030               	movlw	48
  2000     0221  3183  2394  3181   	fcall	_HAL_Write_Init_Nibble
  2001                           
  2002                           ;Rover_Main_Ver01.c: 350:  _delay((unsigned long)((1)*(32000000/4000.0)));
  2003     0224  300B               	movlw	11
  2004     0225  0020               	movlb	0	; select bank0
  2005     0226  00CB               	movwf	??_initinit
  2006     0227  3062               	movlw	98
  2007     0228                     u1247:
  2008     0228  0B89               	decfsz	9,f
  2009     0229  2A28               	goto	u1247
  2010     022A  0BCB               	decfsz	??_initinit,f
  2011     022B  2A28               	goto	u1247
  2012     022C  0000               	nop
  2013     022D                     l1924:
  2014                           
  2015                           ;Rover_Main_Ver01.c: 351:  HAL_Write_Init_Nibble(0x20);
  2016     022D  3020               	movlw	32
  2017     022E  3183  2394  3181   	fcall	_HAL_Write_Init_Nibble
  2018     0231                     l1926:
  2019                           
  2020                           ;Rover_Main_Ver01.c: 352:  _delay((unsigned long)((1)*(32000000/4000.0)));
  2021     0231  300B               	movlw	11
  2022     0232  0020               	movlb	0	; select bank0
  2023     0233  00CB               	movwf	??_initinit
  2024     0234  3062               	movlw	98
  2025     0235                     u1257:
  2026     0235  0B89               	decfsz	9,f
  2027     0236  2A35               	goto	u1257
  2028     0237  0BCB               	decfsz	??_initinit,f
  2029     0238  2A35               	goto	u1257
  2030     0239  0000               	nop
  2031                           
  2032                           ;Rover_Main_Ver01.c: 353:  init_LCD();
  2033     023A  3184  2473  3181   	fcall	_init_LCD
  2034     023D                     l205:
  2035     023D  0008               	return
  2036     023E                     __end_of_initinit:
  2037                           
  2038                           	psect	text3
  2039     0473                     __ptext3:	
  2040 ;; *************** function _init_LCD *****************
  2041 ;; Defined at:
  2042 ;;		line 337 in file "Rover_Main_Ver01.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 7
  2063 ;; This function calls:
  2064 ;;		_HAL_Clear
  2065 ;;		_HAL_Display_On
  2066 ;;		_HAL_Set_Entry_Mode
  2067 ;; This function is called by:
  2068 ;;		_initinit
  2069 ;;		_initialize_all
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073     0473                     _init_LCD:	
  2074                           ;psect for function _init_LCD
  2075                           
  2076     0473                     l1888:	
  2077                           ;incstack = 0
  2078                           ; Regs used in _init_LCD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2079                           
  2080                           
  2081                           ;Rover_Main_Ver01.c: 338:  HAL_Display_On();
  2082     0473  3184  24FD  3184   	fcall	_HAL_Display_On
  2083                           
  2084                           ;Rover_Main_Ver01.c: 339:  HAL_Clear();
  2085     0476  3184  24CB  3184   	fcall	_HAL_Clear
  2086                           
  2087                           ;Rover_Main_Ver01.c: 340:  HAL_Set_Entry_Mode(1,0);
  2088     0479  3001               	movlw	1
  2089     047A  0020               	movlb	0	; select bank0
  2090     047B  00C5               	movwf	HAL_Set_Entry_Mode@inc
  2091     047C  3000               	movlw	0
  2092     047D  00C6               	movwf	HAL_Set_Entry_Mode@inc+1
  2093     047E  3000               	movlw	0
  2094     047F  00C7               	movwf	HAL_Set_Entry_Mode@shift
  2095     0480  00C8               	movwf	HAL_Set_Entry_Mode@shift+1
  2096     0481  3184  2432  3184   	fcall	_HAL_Set_Entry_Mode
  2097     0484                     l202:
  2098     0484  0008               	return
  2099     0485                     __end_of_init_LCD:
  2100                           
  2101                           	psect	text4
  2102     0432                     __ptext4:	
  2103 ;; *************** function _HAL_Set_Entry_Mode *****************
  2104 ;; Defined at:
  2105 ;;		line 302 in file "Rover_Main_Ver01.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  inc             2    1[BANK0 ] int 
  2108 ;;  shift           2    3[BANK0 ] int 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  entry_mode      2    5[BANK0 ] int 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2123 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;Total ram usage:        6 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 6
  2127 ;; This function calls:
  2128 ;;		_HAL_Write_Command
  2129 ;; This function is called by:
  2130 ;;		_init_LCD
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134     0432                     _HAL_Set_Entry_Mode:	
  2135                           ;psect for function _HAL_Set_Entry_Mode
  2136                           
  2137     0432                     l1868:	
  2138                           ;incstack = 0
  2139                           ; Regs used in _HAL_Set_Entry_Mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2140                           
  2141                           
  2142                           ;Rover_Main_Ver01.c: 303:  int entry_mode = 0x04;
  2143     0432  3004               	movlw	4
  2144     0433  0020               	movlb	0	; select bank0
  2145     0434  00C9               	movwf	HAL_Set_Entry_Mode@entry_mode
  2146     0435  3000               	movlw	0
  2147     0436  00CA               	movwf	HAL_Set_Entry_Mode@entry_mode+1
  2148     0437                     l1870:
  2149                           
  2150                           ;Rover_Main_Ver01.c: 304:  if (inc){
  2151     0437  0845               	movf	HAL_Set_Entry_Mode@inc,w
  2152     0438  0446               	iorwf	HAL_Set_Entry_Mode@inc+1,w
  2153     0439  1903               	btfsc	3,2
  2154     043A  2C3C               	goto	u961
  2155     043B  2C3D               	goto	u960
  2156     043C                     u961:
  2157     043C  2C3E               	goto	l1874
  2158     043D                     u960:
  2159     043D                     l1872:
  2160                           
  2161                           ;Rover_Main_Ver01.c: 305:   entry_mode |= 0x02;
  2162     043D  14C9               	bsf	HAL_Set_Entry_Mode@entry_mode,1
  2163     043E                     l1874:
  2164                           
  2165                           ;Rover_Main_Ver01.c: 307:  if (shift){
  2166     043E  0847               	movf	HAL_Set_Entry_Mode@shift,w
  2167     043F  0448               	iorwf	HAL_Set_Entry_Mode@shift+1,w
  2168     0440  1903               	btfsc	3,2
  2169     0441  2C43               	goto	u971
  2170     0442  2C44               	goto	u970
  2171     0443                     u971:
  2172     0443  2C45               	goto	l1878
  2173     0444                     u970:
  2174     0444                     l1876:
  2175                           
  2176                           ;Rover_Main_Ver01.c: 308:   entry_mode |= 0x01;
  2177     0444  1449               	bsf	HAL_Set_Entry_Mode@entry_mode,0
  2178     0445                     l1878:
  2179                           
  2180                           ;Rover_Main_Ver01.c: 310:  HAL_Write_Command(entry_mode);
  2181     0445  0849               	movf	HAL_Set_Entry_Mode@entry_mode,w
  2182     0446  3183  23B6  3184   	fcall	_HAL_Write_Command
  2183     0449                     l185:
  2184     0449  0008               	return
  2185     044A                     __end_of_HAL_Set_Entry_Mode:
  2186                           
  2187                           	psect	text5
  2188     04FD                     __ptext5:	
  2189 ;; *************** function _HAL_Display_On *****************
  2190 ;; Defined at:
  2191 ;;		line 294 in file "Rover_Main_Ver01.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 6
  2212 ;; This function calls:
  2213 ;;		_HAL_Write_Command
  2214 ;; This function is called by:
  2215 ;;		_init_LCD
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219     04FD                     _HAL_Display_On:	
  2220                           ;psect for function _HAL_Display_On
  2221                           
  2222     04FD                     l1866:	
  2223                           ;incstack = 0
  2224                           ; Regs used in _HAL_Display_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2225                           
  2226                           
  2227                           ;Rover_Main_Ver01.c: 295:  HAL_Write_Command(0x08 | 0x04);
  2228     04FD  300C               	movlw	12
  2229     04FE  3183  23B6  3184   	fcall	_HAL_Write_Command
  2230     0501                     l177:
  2231     0501  0008               	return
  2232     0502                     __end_of_HAL_Display_On:
  2233                           
  2234                           	psect	text6
  2235     0394                     __ptext6:	
  2236 ;; *************** function _HAL_Write_Init_Nibble *****************
  2237 ;; Defined at:
  2238 ;;		line 238 in file "Rover_Main_Ver01.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  nibble          1    wreg     unsigned char 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  nibble          1    0[BANK0 ] unsigned char 
  2243 ;;  byte            1    1[BANK0 ] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2256 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;Total ram usage:        4 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 4
  2260 ;; This function calls:
  2261 ;;		_HAL_I2C_Master_Transmit
  2262 ;;		_HAL_Pulse_Enable
  2263 ;; This function is called by:
  2264 ;;		_initinit
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268     0394                     _HAL_Write_Init_Nibble:	
  2269                           ;psect for function _HAL_Write_Init_Nibble
  2270                           
  2271                           
  2272                           ;incstack = 0
  2273                           ; Regs used in _HAL_Write_Init_Nibble: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2274                           ;HAL_Write_Init_Nibble@nibble stored from wreg
  2275     0394  0020               	movlb	0	; select bank0
  2276     0395  00C4               	movwf	HAL_Write_Init_Nibble@nibble
  2277     0396                     l1880:
  2278                           
  2279                           ;Rover_Main_Ver01.c: 239:  uint8_t byte = ((nibble >> 4) & 0x0F) << 4;
  2280     0396  0844               	movf	HAL_Write_Init_Nibble@nibble,w
  2281     0397  00F8               	movwf	??_HAL_Write_Init_Nibble
  2282     0398  3004               	movlw	4
  2283     0399                     u985:
  2284     0399  36F8               	lsrf	??_HAL_Write_Init_Nibble,f
  2285     039A  0B89               	decfsz	9,f
  2286     039B  2B99               	goto	u985
  2287     039C  0878               	movf	??_HAL_Write_Init_Nibble,w
  2288     039D  390F               	andlw	15
  2289     039E  00F9               	movwf	??_HAL_Write_Init_Nibble+1
  2290     039F  3004               	movlw	4
  2291     03A0                     u995:
  2292     03A0  35F9               	lslf	??_HAL_Write_Init_Nibble+1,f
  2293     03A1  0B89               	decfsz	9,f
  2294     03A2  2BA0               	goto	u995
  2295     03A3  0879               	movf	??_HAL_Write_Init_Nibble+1,w
  2296     03A4  00C5               	movwf	HAL_Write_Init_Nibble@byte
  2297                           
  2298                           ;Rover_Main_Ver01.c: 240:  byte = (byte | 0 | LCD._backlight);
  2299     03A5  0864               	movf	_LCD+10,w
  2300     03A6  0445               	iorwf	HAL_Write_Init_Nibble@byte,w
  2301     03A7  00C5               	movwf	HAL_Write_Init_Nibble@byte
  2302     03A8                     l1882:
  2303                           
  2304                           ;Rover_Main_Ver01.c: 241:  HAL_I2C_Master_Transmit(LCD.i2c_addr, &byte, 1);
  2305     03A8  3045               	movlw	(low (HAL_Write_Init_Nibble@byte| 0))& (0+255)
  2306     03A9  00F4               	movwf	HAL_I2C_Master_Transmit@dataByte
  2307     03AA  01F5               	clrf	HAL_I2C_Master_Transmit@numberOfDataBytes
  2308     03AB  0AF5               	incf	HAL_I2C_Master_Transmit@numberOfDataBytes,f
  2309     03AC  085A               	movf	_LCD,w
  2310     03AD  3184  2460  3183   	fcall	_HAL_I2C_Master_Transmit
  2311     03B0                     l1884:
  2312                           
  2313                           ;Rover_Main_Ver01.c: 242:  HAL_Pulse_Enable(byte);
  2314     03B0  0020               	movlb	0	; select bank0
  2315     03B1  0845               	movf	HAL_Write_Init_Nibble@byte,w
  2316     03B2  3184  2416  3183   	fcall	_HAL_Pulse_Enable
  2317     03B5                     l146:
  2318     03B5  0008               	return
  2319     03B6                     __end_of_HAL_Write_Init_Nibble:
  2320                           
  2321                           	psect	text7
  2322     0485                     __ptext7:	
  2323 ;; *************** function _configUART1 *****************
  2324 ;; Defined at:
  2325 ;;		line 117 in file "Rover_Main_Ver01.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		status,2
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 1
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_initialize_all
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353     0485                     _configUART1:	
  2354                           ;psect for function _configUART1
  2355                           
  2356     0485                     l1434:	
  2357                           ;incstack = 0
  2358                           ; Regs used in _configUART1: [status,2]
  2359                           
  2360                           
  2361                           ;Rover_Main_Ver01.c: 119:     BAUD1CONbits.RCIDL = 1;
  2362     0485  0022               	movlb	2	; select bank2
  2363     0486  171F               	bsf	31,6	;volatile
  2364                           
  2365                           ;Rover_Main_Ver01.c: 120:     BAUD1CONbits.SCKP = 0;
  2366     0487  121F               	bcf	31,4	;volatile
  2367                           
  2368                           ;Rover_Main_Ver01.c: 121:     BAUD1CONbits.WUE = 0;
  2369     0488  109F               	bcf	31,1	;volatile
  2370                           
  2371                           ;Rover_Main_Ver01.c: 122:     BAUD1CONbits.ABDEN = 0;
  2372     0489  101F               	bcf	31,0	;volatile
  2373                           
  2374                           ;Rover_Main_Ver01.c: 123:     BRG16 = 1;
  2375     048A  159F               	bsf	31,3	;volatile
  2376                           
  2377                           ;Rover_Main_Ver01.c: 124:     BRGH = 1;
  2378     048B  151E               	bsf	30,2	;volatile
  2379     048C                     l1436:
  2380                           
  2381                           ;Rover_Main_Ver01.c: 125:     SP1BRGH = 0b00000000;
  2382     048C  019C               	clrf	28	;volatile
  2383     048D                     l1438:
  2384                           
  2385                           ;Rover_Main_Ver01.c: 126:     SP1BRGL = 0b01000100;
  2386     048D  3044               	movlw	68
  2387     048E  009B               	movwf	27	;volatile
  2388     048F                     l1440:
  2389                           
  2390                           ;Rover_Main_Ver01.c: 127:     RC1STAbits.RX9 = 0;
  2391     048F  131D               	bcf	29,6	;volatile
  2392     0490                     l1442:
  2393                           
  2394                           ;Rover_Main_Ver01.c: 128:     TX1STAbits.SYNC = 0;
  2395     0490  121E               	bcf	30,4	;volatile
  2396     0491                     l1444:
  2397                           
  2398                           ;Rover_Main_Ver01.c: 129:     TX1STAbits.TXEN = 1;
  2399     0491  169E               	bsf	30,5	;volatile
  2400     0492                     l1446:
  2401                           
  2402                           ;Rover_Main_Ver01.c: 130:     RC1STAbits.SPEN = 1;
  2403     0492  179D               	bsf	29,7	;volatile
  2404     0493                     l1448:
  2405                           
  2406                           ;Rover_Main_Ver01.c: 131:     RC1STAbits.CREN = 1;
  2407     0493  161D               	bsf	29,4	;volatile
  2408     0494                     l1450:
  2409                           
  2410                           ;Rover_Main_Ver01.c: 132:     RC1STAbits.FERR = 0;
  2411     0494  111D               	bcf	29,2	;volatile
  2412     0495                     l1452:
  2413                           
  2414                           ;Rover_Main_Ver01.c: 133:     RC1STAbits.OERR = 0;
  2415     0495  109D               	bcf	29,1	;volatile
  2416     0496                     l89:
  2417     0496  0008               	return
  2418     0497                     __end_of_configUART1:
  2419                           
  2420                           	psect	text8
  2421     023E                     __ptext8:	
  2422 ;; *************** function _configPins *****************
  2423 ;; Defined at:
  2424 ;;		line 395 in file "Rover_Main_Ver01.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 1
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_initialize_all
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452     023E                     _configPins:	
  2453                           ;psect for function _configPins
  2454                           
  2455     023E                     l1510:	
  2456                           ;incstack = 0
  2457                           ; Regs used in _configPins: [wreg+status,2+status,0]
  2458                           
  2459                           
  2460                           ;Rover_Main_Ver01.c: 397:     TRISAbits.TRISA0 = 0;
  2461     023E  0020               	movlb	0	; select bank0
  2462     023F  1011               	bcf	17,0	;volatile
  2463                           
  2464                           ;Rover_Main_Ver01.c: 398:     ANSELAbits.ANSA0 = 0;
  2465     0240  003E               	movlb	30	; select bank30
  2466     0241  1038               	bcf	56,0	;volatile
  2467                           
  2468                           ;Rover_Main_Ver01.c: 400:     TRISAbits.TRISA1 = 0;
  2469     0242  0020               	movlb	0	; select bank0
  2470     0243  1091               	bcf	17,1	;volatile
  2471                           
  2472                           ;Rover_Main_Ver01.c: 401:     ANSELAbits.ANSA1 = 0;
  2473     0244  003E               	movlb	30	; select bank30
  2474     0245  10B8               	bcf	56,1	;volatile
  2475                           
  2476                           ;Rover_Main_Ver01.c: 403:     TRISAbits.TRISA2 = 0;
  2477     0246  0020               	movlb	0	; select bank0
  2478     0247  1111               	bcf	17,2	;volatile
  2479                           
  2480                           ;Rover_Main_Ver01.c: 404:     ANSELAbits.ANSA2 = 0;
  2481     0248  003E               	movlb	30	; select bank30
  2482     0249  1138               	bcf	56,2	;volatile
  2483                           
  2484                           ;Rover_Main_Ver01.c: 406:     TRISAbits.TRISA3 = 0;
  2485     024A  0020               	movlb	0	; select bank0
  2486     024B  1191               	bcf	17,3	;volatile
  2487                           
  2488                           ;Rover_Main_Ver01.c: 407:     ANSELAbits.ANSA4 = 0;
  2489     024C  003E               	movlb	30	; select bank30
  2490     024D  1238               	bcf	56,4	;volatile
  2491                           
  2492                           ;Rover_Main_Ver01.c: 412:     TRISCbits.TRISC7 = 1;
  2493     024E  0020               	movlb	0	; select bank0
  2494     024F  1793               	bsf	19,7	;volatile
  2495                           
  2496                           ;Rover_Main_Ver01.c: 413:     ANSELCbits.ANSC7 = 0;
  2497     0250  003E               	movlb	30	; select bank30
  2498     0251  13CE               	bcf	78,7	;volatile
  2499                           
  2500                           ;Rover_Main_Ver01.c: 416:     TRISCbits.TRISC3 = 1;
  2501     0252  0020               	movlb	0	; select bank0
  2502     0253  1593               	bsf	19,3	;volatile
  2503                           
  2504                           ;Rover_Main_Ver01.c: 417:     ANSELCbits.ANSC3 = 0;
  2505     0254  003E               	movlb	30	; select bank30
  2506     0255  11CE               	bcf	78,3	;volatile
  2507                           
  2508                           ;Rover_Main_Ver01.c: 420:     TRISCbits.TRISC4 = 1;
  2509     0256  0020               	movlb	0	; select bank0
  2510     0257  1613               	bsf	19,4	;volatile
  2511                           
  2512                           ;Rover_Main_Ver01.c: 421:     ANSELCbits.ANSC4 = 0;
  2513     0258  003E               	movlb	30	; select bank30
  2514     0259  124E               	bcf	78,4	;volatile
  2515                           
  2516                           ;Rover_Main_Ver01.c: 424:     TRISBbits.TRISB4 = 0;
  2517     025A  0020               	movlb	0	; select bank0
  2518     025B  1212               	bcf	18,4	;volatile
  2519                           
  2520                           ;Rover_Main_Ver01.c: 425:     ANSELBbits.ANSB4 = 0;
  2521     025C  003E               	movlb	30	; select bank30
  2522     025D  1243               	bcf	67,4	;volatile
  2523                           
  2524                           ;Rover_Main_Ver01.c: 428:     TRISAbits.TRISA5 = 1;
  2525     025E  0020               	movlb	0	; select bank0
  2526     025F  1691               	bsf	17,5	;volatile
  2527                           
  2528                           ;Rover_Main_Ver01.c: 429:     ANSELAbits.ANSA5 = 0;
  2529     0260  003E               	movlb	30	; select bank30
  2530     0261  12B8               	bcf	56,5	;volatile
  2531                           
  2532                           ;Rover_Main_Ver01.c: 432:     PPSLOCKbits.PPSLOCKED = 0;
  2533     0262  003D               	movlb	29	; select bank29
  2534     0263  100F               	bcf	15,0	;volsfr
  2535                           
  2536                           ;Rover_Main_Ver01.c: 434:     RC4PPS = 0x16;
  2537     0264  3016               	movlw	22
  2538     0265  003E               	movlb	30	; select bank30
  2539     0266  00A4               	movwf	36	;volatile
  2540     0267                     l1512:
  2541                           
  2542                           ;Rover_Main_Ver01.c: 435:     SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  2543     0267  003D               	movlb	29	; select bank29
  2544     0268  0848               	movf	72,w	;volatile
  2545     0269  39E0               	andlw	-32
  2546     026A  3814               	iorlw	20
  2547     026B  00C8               	movwf	72	;volatile
  2548                           
  2549                           ;Rover_Main_Ver01.c: 437:     SSP2DATPPSbits.SSP2DATPPS = 0x13;
  2550     026C  0849               	movf	73,w	;volatile
  2551     026D  39E0               	andlw	-32
  2552     026E  3813               	iorlw	19
  2553     026F  00C9               	movwf	73	;volatile
  2554     0270                     l1514:
  2555                           
  2556                           ;Rover_Main_Ver01.c: 438:     RC3PPS = 0x17;
  2557     0270  3017               	movlw	23
  2558     0271  003E               	movlb	30	; select bank30
  2559     0272  00A3               	movwf	35	;volatile
  2560     0273                     l1516:
  2561                           
  2562                           ;Rover_Main_Ver01.c: 440:     RC5PPS = 0x10;
  2563     0273  3010               	movlw	16
  2564     0274  00A5               	movwf	37	;volatile
  2565     0275                     l1518:
  2566                           
  2567                           ;Rover_Main_Ver01.c: 442:     PPSLOCKbits.PPSLOCKED = 1;
  2568     0275  003D               	movlb	29	; select bank29
  2569     0276  140F               	bsf	15,0	;volsfr
  2570     0277                     l226:
  2571     0277  0008               	return
  2572     0278                     __end_of_configPins:
  2573                           
  2574                           	psect	text9
  2575     0502                     __ptext9:	
  2576 ;; *************** function _configISR *****************
  2577 ;; Defined at:
  2578 ;;		line 139 in file "Rover_Main_Ver01.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		None
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2596 ;;Total ram usage:        0 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_initialize_all
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606     0502                     _configISR:	
  2607                           ;psect for function _configISR
  2608                           
  2609     0502                     l1454:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _configISR: []
  2612                           
  2613                           
  2614                           ;Rover_Main_Ver01.c: 141:     INTCONbits.GIE = 1;
  2615     0502  178B               	bsf	11,7	;volatile
  2616                           
  2617                           ;Rover_Main_Ver01.c: 142:     INTCONbits.PEIE = 1;
  2618     0503  170B               	bsf	11,6	;volatile
  2619                           
  2620                           ;Rover_Main_Ver01.c: 145:     PIE3bits.RCIE = 1;
  2621     0504  002E               	movlb	14	; select bank14
  2622     0505  1699               	bsf	25,5	;volatile
  2623     0506                     l95:
  2624     0506  0008               	return
  2625     0507                     __end_of_configISR:
  2626                           
  2627                           	psect	text10
  2628     04D9                     __ptext10:	
  2629 ;; *************** function _configI2C *****************
  2630 ;; Defined at:
  2631 ;;		line 156 in file "Rover_Main_Ver01.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;Total ram usage:        0 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_initialize_all
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659     04D9                     _configI2C:	
  2660                           ;psect for function _configI2C
  2661                           
  2662     04D9                     l1456:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _configI2C: [wreg+status,2+status,0]
  2665                           
  2666                           
  2667                           ;Rover_Main_Ver01.c: 158:     SSP2CON1bits.SSPEN = 0;
  2668     04D9  0023               	movlb	3	; select bank3
  2669     04DA  129A               	bcf	26,5	;volatile
  2670                           
  2671                           ;Rover_Main_Ver01.c: 161:     SSP2ADDbits.SSPADD = 19;
  2672     04DB  3013               	movlw	19
  2673     04DC  0097               	movwf	23	;volatile
  2674     04DD                     l1458:
  2675                           
  2676                           ;Rover_Main_Ver01.c: 164:     SSP2CON1bits.SSPM = 0b1000;
  2677     04DD  081A               	movf	26,w	;volatile
  2678     04DE  39F0               	andlw	-16
  2679     04DF  3808               	iorlw	8
  2680     04E0  009A               	movwf	26	;volatile
  2681     04E1                     l1460:
  2682                           
  2683                           ;Rover_Main_Ver01.c: 167:     SSP2CON1bits.SSPEN = 1;
  2684     04E1  169A               	bsf	26,5	;volatile
  2685     04E2                     l104:
  2686     04E2  0008               	return
  2687     04E3                     __end_of_configI2C:
  2688                           
  2689                           	psect	text11
  2690     03D8                     __ptext11:	
  2691 ;; *************** function _HAL_LED_OFF *****************
  2692 ;; Defined at:
  2693 ;;		line 376 in file "Rover_Main_Ver01.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  LED             2    3[COMMON] int 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_initialize_all
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721     03D8                     _HAL_LED_OFF:	
  2722                           ;psect for function _HAL_LED_OFF
  2723                           
  2724     03D8                     l1500:	
  2725                           ;incstack = 0
  2726                           ; Regs used in _HAL_LED_OFF: [wreg-fsr0h+status,2+status,0]
  2727                           
  2728                           
  2729                           ;Rover_Main_Ver01.c: 377:  switch(LED){
  2730     03D8  2BE5               	goto	l1504
  2731     03D9                     l218:	
  2732                           ;Rover_Main_Ver01.c: 378:   case 1:
  2733                           
  2734                           
  2735                           ;Rover_Main_Ver01.c: 379:             LATAbits.LATA0 = 0;
  2736     03D9  0020               	movlb	0	; select bank0
  2737     03DA  1016               	bcf	22,0	;volatile
  2738                           
  2739                           ;Rover_Main_Ver01.c: 380:    break;
  2740     03DB  2BF8               	goto	l223
  2741     03DC                     l220:	
  2742                           ;Rover_Main_Ver01.c: 381:   case 2:
  2743                           
  2744                           
  2745                           ;Rover_Main_Ver01.c: 382:             LATAbits.LATA1 = 0;
  2746     03DC  0020               	movlb	0	; select bank0
  2747     03DD  1096               	bcf	22,1	;volatile
  2748                           
  2749                           ;Rover_Main_Ver01.c: 383:    break;
  2750     03DE  2BF8               	goto	l223
  2751     03DF                     l221:	
  2752                           ;Rover_Main_Ver01.c: 384:   case 3:
  2753                           
  2754                           
  2755                           ;Rover_Main_Ver01.c: 385:             LATAbits.LATA2 = 0;
  2756     03DF  0020               	movlb	0	; select bank0
  2757     03E0  1116               	bcf	22,2	;volatile
  2758                           
  2759                           ;Rover_Main_Ver01.c: 386:    break;
  2760     03E1  2BF8               	goto	l223
  2761     03E2                     l222:	
  2762                           ;Rover_Main_Ver01.c: 387:         case 4:
  2763                           
  2764                           
  2765                           ;Rover_Main_Ver01.c: 388:             LATAbits.LATA3 = 0;
  2766     03E2  0020               	movlb	0	; select bank0
  2767     03E3  1196               	bcf	22,3	;volatile
  2768                           
  2769                           ;Rover_Main_Ver01.c: 389:             break;
  2770     03E4  2BF8               	goto	l223
  2771     03E5                     l1504:
  2772                           
  2773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2774                           ; Switch size 1, requested type "simple"
  2775                           ; Number of cases is 1, Range of values is 0 to 0
  2776                           ; switch strategies available:
  2777                           ; Name         Instructions Cycles
  2778                           ; simple_byte            4     3 (average)
  2779                           ; direct_byte            8     6 (fixed)
  2780                           ; jumptable            260     6 (fixed)
  2781                           ;	Chosen strategy is simple_byte
  2782     03E5  0874               	movf	HAL_LED_OFF@LED+1,w
  2783     03E6  3A00               	xorlw	0	; case 0
  2784     03E7  1903               	skipnz
  2785     03E8  2BEA               	goto	l2120
  2786     03E9  2BF8               	goto	l223
  2787     03EA                     l2120:
  2788                           
  2789                           ; Switch size 1, requested type "simple"
  2790                           ; Number of cases is 4, Range of values is 1 to 4
  2791                           ; switch strategies available:
  2792                           ; Name         Instructions Cycles
  2793                           ; simple_byte           13     7 (average)
  2794                           ; direct_byte           17     9 (fixed)
  2795                           ; jumptable            263     9 (fixed)
  2796                           ;	Chosen strategy is simple_byte
  2797     03EA  0873               	movf	HAL_LED_OFF@LED,w
  2798     03EB  3A01               	xorlw	1	; case 1
  2799     03EC  1903               	skipnz
  2800     03ED  2BD9               	goto	l218
  2801     03EE  3A03               	xorlw	3	; case 2
  2802     03EF  1903               	skipnz
  2803     03F0  2BDC               	goto	l220
  2804     03F1  3A01               	xorlw	1	; case 3
  2805     03F2  1903               	skipnz
  2806     03F3  2BDF               	goto	l221
  2807     03F4  3A07               	xorlw	7	; case 4
  2808     03F5  1903               	skipnz
  2809     03F6  2BE2               	goto	l222
  2810     03F7  2BF8               	goto	l223
  2811     03F8                     l223:
  2812     03F8  0008               	return
  2813     03F9                     __end_of_HAL_LED_OFF:
  2814                           
  2815                           	psect	text12
  2816     0062                     __ptext12:	
  2817 ;; *************** function _alienFrequencyTask *****************
  2818 ;; Defined at:
  2819 ;;		line 479 in file "Rover_Main_Ver01.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  freq_digit      4   13[BANK0 ] unsigned char [4]
  2824 ;;  freq_char       4    9[BANK0 ] unsigned char [4]
  2825 ;;  i               2   18[BANK0 ] int 
  2826 ;;  counter         1   17[BANK0 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;Total ram usage:       13 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 7
  2843 ;; This function calls:
  2844 ;;		_HAL_Clear
  2845 ;;		_HAL_LCD_Print
  2846 ;;		_HAL_Set_Cursor
  2847 ;;		___awdiv
  2848 ;;		___lwdiv
  2849 ;;		___lwmod
  2850 ;;		_intToChar
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856     0062                     _alienFrequencyTask:	
  2857                           ;psect for function _alienFrequencyTask
  2858                           
  2859     0062                     l1972:	
  2860                           ;incstack = 0
  2861                           ; Regs used in _alienFrequencyTask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2862                           
  2863                           
  2864                           ;Rover_Main_Ver01.c: 482:     HAL_Clear();
  2865     0062  3184  24CB  3180   	fcall	_HAL_Clear
  2866                           
  2867                           ;Rover_Main_Ver01.c: 483:     HAL_LCD_Print(&FFT_Home1[0], 16);
  2868     0065  3024               	movlw	(low (_FFT_Home1| 0))& (0+255)
  2869     0066  0020               	movlb	0	; select bank0
  2870     0067  00C5               	movwf	HAL_LCD_Print@string
  2871     0068  3010               	movlw	16
  2872     0069  00C6               	movwf	HAL_LCD_Print@size
  2873     006A  3000               	movlw	0
  2874     006B  00C7               	movwf	HAL_LCD_Print@size+1
  2875     006C  3183  231C  3180   	fcall	_HAL_LCD_Print
  2876                           
  2877                           ;Rover_Main_Ver01.c: 485:     HAL_Set_Cursor(0, 1);
  2878     006F  3000               	movlw	0
  2879     0070  0020               	movlb	0	; select bank0
  2880     0071  00C5               	movwf	HAL_Set_Cursor@col
  2881     0072  00C6               	movwf	HAL_Set_Cursor@col+1
  2882     0073  3001               	movlw	1
  2883     0074  00C7               	movwf	HAL_Set_Cursor@line
  2884     0075  3000               	movlw	0
  2885     0076  00C8               	movwf	HAL_Set_Cursor@line+1
  2886     0077  3183  23F9  3180   	fcall	_HAL_Set_Cursor
  2887                           
  2888                           ;Rover_Main_Ver01.c: 487:     HAL_LCD_Print(&FFT_Home2[0], 16);
  2889     007A  30A0               	movlw	(low (_FFT_Home2| 0))& (0+255)
  2890     007B  0020               	movlb	0	; select bank0
  2891     007C  00C5               	movwf	HAL_LCD_Print@string
  2892     007D  3010               	movlw	16
  2893     007E  00C6               	movwf	HAL_LCD_Print@size
  2894     007F  3000               	movlw	0
  2895     0080  00C7               	movwf	HAL_LCD_Print@size+1
  2896     0081  3183  231C  3180   	fcall	_HAL_LCD_Print
  2897     0084                     l1974:
  2898                           
  2899                           ;Rover_Main_Ver01.c: 488:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  2900     0084  3029               	movlw	41
  2901     0085  0020               	movlb	0	; select bank0
  2902     0086  00CC               	movwf	??_alienFrequencyTask+1
  2903     0087  3096               	movlw	150
  2904     0088  00CB               	movwf	??_alienFrequencyTask
  2905     0089  307F               	movlw	127
  2906     008A                     u1267:
  2907     008A  0B89               	decfsz	9,f
  2908     008B  288A               	goto	u1267
  2909     008C  0BCB               	decfsz	??_alienFrequencyTask,f
  2910     008D  288A               	goto	u1267
  2911     008E  0BCC               	decfsz	??_alienFrequencyTask+1,f
  2912     008F  288A               	goto	u1267
  2913     0090                     l1976:
  2914                           
  2915                           ;Rover_Main_Ver01.c: 489:     HAL_Clear();
  2916     0090  3184  24CB  3180   	fcall	_HAL_Clear
  2917     0093                     l1978:
  2918                           
  2919                           ;Rover_Main_Ver01.c: 492:     LATBbits.LATB4 = 0;
  2920     0093  0020               	movlb	0	; select bank0
  2921     0094  1217               	bcf	23,4	;volatile
  2922                           
  2923                           ;Rover_Main_Ver01.c: 493:     _delay((unsigned long)((1)*(32000000/4000.0)));
  2924     0095  300B               	movlw	11
  2925     0096  0020               	movlb	0	; select bank0
  2926     0097  00CB               	movwf	??_alienFrequencyTask
  2927     0098  3062               	movlw	98
  2928     0099                     u1277:
  2929     0099  0B89               	decfsz	9,f
  2930     009A  2899               	goto	u1277
  2931     009B  0BCB               	decfsz	??_alienFrequencyTask,f
  2932     009C  2899               	goto	u1277
  2933     009D  0000               	nop
  2934     009E                     l1980:
  2935                           
  2936                           ;Rover_Main_Ver01.c: 494:     LATBbits.LATB4 = 1;
  2937     009E  0020               	movlb	0	; select bank0
  2938     009F  1617               	bsf	23,4	;volatile
  2939     00A0                     l1982:
  2940                           
  2941                           ;Rover_Main_Ver01.c: 498:     UART_Not_Recieved = 2;
  2942     00A0  3002               	movlw	2
  2943     00A1  00E8               	movwf	_UART_Not_Recieved
  2944     00A2                     l1984:	
  2945                           ;Rover_Main_Ver01.c: 499:     while(UART_Not_Recieved != 0){
  2946                           
  2947                           
  2948                           ;Rover_Main_Ver01.c: 499:     while(UART_Not_Recieved != 0){
  2949     00A2  0868               	movf	_UART_Not_Recieved,w
  2950     00A3  1D03               	btfss	3,2
  2951     00A4  28A6               	goto	u1141
  2952     00A5  28A7               	goto	u1140
  2953     00A6                     u1141:
  2954     00A6  28A2               	goto	l1984
  2955     00A7                     u1140:
  2956     00A7                     l1986:
  2957                           
  2958                           ;Rover_Main_Ver01.c: 501:     char freq_char[4];;Rover_Main_Ver01.c: 502:     uint8_t fr
      +                          eq_digit[4];;Rover_Main_Ver01.c: 503:     uint8_t counter = 0;
  2959     00A7  01D5               	clrf	alienFrequencyTask@counter
  2960     00A8                     l1988:
  2961                           
  2962                           ;Rover_Main_Ver01.c: 504:     HAL_Clear();
  2963     00A8  3184  24CB  3180   	fcall	_HAL_Clear
  2964     00AB                     l1990:
  2965     00AB                     l1992:
  2966                           
  2967                           ;Rover_Main_Ver01.c: 506:     if(frequency < 10){
  2968     00AB  3000               	movlw	0
  2969     00AC  0020               	movlb	0	; select bank0
  2970     00AD  0267               	subwf	_frequency+1,w
  2971     00AE  300A               	movlw	10
  2972     00AF  1903               	skipnz
  2973     00B0  0266               	subwf	_frequency,w
  2974     00B1  1803               	skipnc
  2975     00B2  28B4               	goto	u1151
  2976     00B3  28B5               	goto	u1150
  2977     00B4                     u1151:
  2978     00B4  28BA               	goto	l1996
  2979     00B5                     u1150:
  2980     00B5                     l1994:
  2981                           
  2982                           ;Rover_Main_Ver01.c: 507:         i = 1;
  2983     00B5  3001               	movlw	1
  2984     00B6  00D6               	movwf	alienFrequencyTask@i
  2985     00B7  3000               	movlw	0
  2986     00B8  00D7               	movwf	alienFrequencyTask@i+1
  2987                           
  2988                           ;Rover_Main_Ver01.c: 508:     }
  2989     00B9  28DA               	goto	l253
  2990     00BA                     l1996:
  2991     00BA  3000               	movlw	0
  2992     00BB  0267               	subwf	_frequency+1,w
  2993     00BC  3064               	movlw	100
  2994     00BD  1903               	skipnz
  2995     00BE  0266               	subwf	_frequency,w
  2996     00BF  1803               	skipnc
  2997     00C0  28C2               	goto	u1161
  2998     00C1  28C3               	goto	u1160
  2999     00C2                     u1161:
  3000     00C2  28C8               	goto	l2000
  3001     00C3                     u1160:
  3002     00C3                     l1998:
  3003                           
  3004                           ;Rover_Main_Ver01.c: 510:         i = 10;
  3005     00C3  300A               	movlw	10
  3006     00C4  00D6               	movwf	alienFrequencyTask@i
  3007     00C5  3000               	movlw	0
  3008     00C6  00D7               	movwf	alienFrequencyTask@i+1
  3009                           
  3010                           ;Rover_Main_Ver01.c: 511:     }
  3011     00C7  28DA               	goto	l253
  3012     00C8                     l2000:
  3013     00C8  3003               	movlw	3
  3014     00C9  0267               	subwf	_frequency+1,w
  3015     00CA  30E8               	movlw	232
  3016     00CB  1903               	skipnz
  3017     00CC  0266               	subwf	_frequency,w
  3018     00CD  1803               	skipnc
  3019     00CE  28D0               	goto	u1171
  3020     00CF  28D1               	goto	u1170
  3021     00D0                     u1171:
  3022     00D0  28D6               	goto	l2004
  3023     00D1                     u1170:
  3024     00D1                     l2002:
  3025                           
  3026                           ;Rover_Main_Ver01.c: 513:         i = 100;
  3027     00D1  3064               	movlw	100
  3028     00D2  00D6               	movwf	alienFrequencyTask@i
  3029     00D3  3000               	movlw	0
  3030     00D4  00D7               	movwf	alienFrequencyTask@i+1
  3031                           
  3032                           ;Rover_Main_Ver01.c: 514:     }
  3033     00D5  28DA               	goto	l253
  3034     00D6                     l2004:
  3035                           
  3036                           ;Rover_Main_Ver01.c: 516:         i = 1000;
  3037     00D6  30E8               	movlw	232
  3038     00D7  00D6               	movwf	alienFrequencyTask@i
  3039     00D8  3003               	movlw	3
  3040     00D9  00D7               	movwf	alienFrequencyTask@i+1
  3041     00DA                     l253:
  3042     00DA  0857               	movf	alienFrequencyTask@i+1,w
  3043     00DB  3A80               	xorlw	128
  3044     00DC  00CB               	movwf	??_alienFrequencyTask
  3045     00DD  3080               	movlw	128
  3046     00DE  024B               	subwf	??_alienFrequencyTask,w
  3047     00DF  1D03               	skipz
  3048     00E0  28E3               	goto	u1185
  3049     00E1  3001               	movlw	1
  3050     00E2  0256               	subwf	alienFrequencyTask@i,w
  3051     00E3                     u1185:
  3052     00E3  1803               	skipnc
  3053     00E4  28E6               	goto	u1181
  3054     00E5  28E7               	goto	u1180
  3055     00E6                     u1181:
  3056     00E6  28E8               	goto	l2008
  3057     00E7                     u1180:
  3058     00E7  291E               	goto	l2018
  3059     00E8                     l2008:
  3060                           
  3061                           ;Rover_Main_Ver01.c: 519:         freq_digit[counter] = (frequency % i);
  3062     00E8  0020               	movlb	0	; select bank0
  3063     00E9  0855               	movf	alienFrequencyTask@counter,w
  3064     00EA  3E51               	addlw	(low (alienFrequencyTask@freq_digit| 0))& (0+255)
  3065     00EB  0086               	movwf	6
  3066     00EC  0187               	clrf	7
  3067     00ED  0857               	movf	alienFrequencyTask@i+1,w
  3068     00EE  00F4               	movwf	___lwmod@divisor+1
  3069     00EF  0856               	movf	alienFrequencyTask@i,w
  3070     00F0  00F3               	movwf	___lwmod@divisor
  3071     00F1  0867               	movf	_frequency+1,w
  3072     00F2  00F6               	movwf	___lwmod@dividend+1
  3073     00F3  0866               	movf	_frequency,w
  3074     00F4  00F5               	movwf	___lwmod@dividend
  3075     00F5  3182  22EA  3180   	fcall	___lwmod
  3076     00F8  0873               	movf	?___lwmod,w
  3077     00F9  0081               	movwf	1
  3078     00FA                     l2010:
  3079                           
  3080                           ;Rover_Main_Ver01.c: 520:         frequency = frequency / 10;
  3081     00FA  300A               	movlw	10
  3082     00FB  00F3               	movwf	___lwdiv@divisor
  3083     00FC  3000               	movlw	0
  3084     00FD  00F4               	movwf	___lwdiv@divisor+1
  3085     00FE  0020               	movlb	0	; select bank0
  3086     00FF  0867               	movf	_frequency+1,w
  3087     0100  00F6               	movwf	___lwdiv@dividend+1
  3088     0101  0866               	movf	_frequency,w
  3089     0102  00F5               	movwf	___lwdiv@dividend
  3090     0103  3182  2278  3180   	fcall	___lwdiv
  3091     0106  0874               	movf	?___lwdiv+1,w
  3092     0107  0020               	movlb	0	; select bank0
  3093     0108  00E7               	movwf	_frequency+1
  3094     0109  0873               	movf	?___lwdiv,w
  3095     010A  00E6               	movwf	_frequency
  3096     010B                     l2012:
  3097                           
  3098                           ;Rover_Main_Ver01.c: 521:         counter++;
  3099     010B  3001               	movlw	1
  3100     010C  07D5               	addwf	alienFrequencyTask@counter,f
  3101     010D                     l2014:
  3102                           
  3103                           ;Rover_Main_Ver01.c: 522:     }
  3104     010D  300A               	movlw	10
  3105     010E  00F3               	movwf	___awdiv@divisor
  3106     010F  3000               	movlw	0
  3107     0110  00F4               	movwf	___awdiv@divisor+1
  3108     0111  0857               	movf	alienFrequencyTask@i+1,w
  3109     0112  00F6               	movwf	___awdiv@dividend+1
  3110     0113  0856               	movf	alienFrequencyTask@i,w
  3111     0114  00F5               	movwf	___awdiv@dividend
  3112     0115  3181  2150  3180   	fcall	___awdiv
  3113     0118  0874               	movf	?___awdiv+1,w
  3114     0119  0020               	movlb	0	; select bank0
  3115     011A  00D7               	movwf	alienFrequencyTask@i+1
  3116     011B  0873               	movf	?___awdiv,w
  3117     011C  00D6               	movwf	alienFrequencyTask@i
  3118     011D  28DA               	goto	l253
  3119     011E                     l2018:
  3120                           
  3121                           ;Rover_Main_Ver01.c: 523:     freq_char[0] = intToChar(freq_digit[0]);
  3122     011E  0020               	movlb	0	; select bank0
  3123     011F  0851               	movf	alienFrequencyTask@freq_digit,w
  3124     0120  3182  22B2  3180   	fcall	_intToChar
  3125     0123  0020               	movlb	0	; select bank0
  3126     0124  00CD               	movwf	alienFrequencyTask@freq_char
  3127                           
  3128                           ;Rover_Main_Ver01.c: 524:     freq_char[1] = intToChar(freq_digit[1]);
  3129     0125  0852               	movf	alienFrequencyTask@freq_digit+1,w
  3130     0126  3182  22B2  3180   	fcall	_intToChar
  3131     0129  0020               	movlb	0	; select bank0
  3132     012A  00CE               	movwf	alienFrequencyTask@freq_char+1
  3133                           
  3134                           ;Rover_Main_Ver01.c: 525:     freq_char[2] = intToChar(freq_digit[2]);
  3135     012B  0853               	movf	alienFrequencyTask@freq_digit+2,w
  3136     012C  3182  22B2  3180   	fcall	_intToChar
  3137     012F  0020               	movlb	0	; select bank0
  3138     0130  00CF               	movwf	alienFrequencyTask@freq_char+2
  3139                           
  3140                           ;Rover_Main_Ver01.c: 526:     freq_char[3] = intToChar(freq_digit[3]);
  3141     0131  0854               	movf	alienFrequencyTask@freq_digit+3,w
  3142     0132  3182  22B2  3180   	fcall	_intToChar
  3143     0135  0020               	movlb	0	; select bank0
  3144     0136  00D0               	movwf	alienFrequencyTask@freq_char+3
  3145     0137                     l2020:
  3146                           
  3147                           ;Rover_Main_Ver01.c: 527:     HAL_LCD_Print(&freq_char[0], 4);
  3148     0137  304D               	movlw	(low (alienFrequencyTask@freq_char| 0))& (0+255)
  3149     0138  00C5               	movwf	HAL_LCD_Print@string
  3150     0139  3004               	movlw	4
  3151     013A  00C6               	movwf	HAL_LCD_Print@size
  3152     013B  3000               	movlw	0
  3153     013C  00C7               	movwf	HAL_LCD_Print@size+1
  3154     013D  3183  231C  3180   	fcall	_HAL_LCD_Print
  3155     0140                     l2022:
  3156                           
  3157                           ;Rover_Main_Ver01.c: 530:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  3158     0140  3029               	movlw	41
  3159     0141  0020               	movlb	0	; select bank0
  3160     0142  00CC               	movwf	??_alienFrequencyTask+1
  3161     0143  3096               	movlw	150
  3162     0144  00CB               	movwf	??_alienFrequencyTask
  3163     0145  307F               	movlw	127
  3164     0146                     u1287:
  3165     0146  0B89               	decfsz	9,f
  3166     0147  2946               	goto	u1287
  3167     0148  0BCB               	decfsz	??_alienFrequencyTask,f
  3168     0149  2946               	goto	u1287
  3169     014A  0BCC               	decfsz	??_alienFrequencyTask+1,f
  3170     014B  2946               	goto	u1287
  3171     014C                     l2024:
  3172                           
  3173                           ;Rover_Main_Ver01.c: 531:     HAL_Clear();
  3174     014C  3184  24CB  3180   	fcall	_HAL_Clear
  3175     014F                     l260:
  3176     014F  0008               	return
  3177     0150                     __end_of_alienFrequencyTask:
  3178                           
  3179                           	psect	text13
  3180     02B2                     __ptext13:	
  3181 ;; *************** function _intToChar *****************
  3182 ;; Defined at:
  3183 ;;		line 446 in file "Rover_Main_Ver01.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  integer         1    wreg     unsigned char 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  integer         1    3[COMMON] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      unsigned char 
  3190 ;; Registers used:
  3191 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;Total ram usage:        1 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_alienFrequencyTask
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211     02B2                     _intToChar:	
  3212                           ;psect for function _intToChar
  3213                           
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _intToChar: [wreg-fsr0h+status,2+status,0]
  3217                           ;intToChar@integer stored from wreg
  3218     02B2  00F3               	movwf	intToChar@integer
  3219     02B3                     l1520:
  3220                           
  3221                           ;Rover_Main_Ver01.c: 447:     switch(integer){
  3222     02B3  2AC8               	goto	l1564
  3223     02B4                     l1522:
  3224                           
  3225                           ;Rover_Main_Ver01.c: 449:             return('0');
  3226     02B4  3030               	movlw	48
  3227     02B5  2AE9               	goto	l231
  3228     02B6                     l1526:
  3229                           
  3230                           ;Rover_Main_Ver01.c: 451:             return('1');
  3231     02B6  3031               	movlw	49
  3232     02B7  2AE9               	goto	l231
  3233     02B8                     l1530:
  3234                           
  3235                           ;Rover_Main_Ver01.c: 453:             return('2');
  3236     02B8  3032               	movlw	50
  3237     02B9  2AE9               	goto	l231
  3238     02BA                     l1534:
  3239                           
  3240                           ;Rover_Main_Ver01.c: 455:             return('3');
  3241     02BA  3033               	movlw	51
  3242     02BB  2AE9               	goto	l231
  3243     02BC                     l1538:
  3244                           
  3245                           ;Rover_Main_Ver01.c: 457:             return('4');
  3246     02BC  3034               	movlw	52
  3247     02BD  2AE9               	goto	l231
  3248     02BE                     l1542:
  3249                           
  3250                           ;Rover_Main_Ver01.c: 459:             return('5');
  3251     02BE  3035               	movlw	53
  3252     02BF  2AE9               	goto	l231
  3253     02C0                     l1546:
  3254                           
  3255                           ;Rover_Main_Ver01.c: 461:             return('6');
  3256     02C0  3036               	movlw	54
  3257     02C1  2AE9               	goto	l231
  3258     02C2                     l1550:
  3259                           
  3260                           ;Rover_Main_Ver01.c: 463:             return('7');
  3261     02C2  3037               	movlw	55
  3262     02C3  2AE9               	goto	l231
  3263     02C4                     l1554:
  3264                           
  3265                           ;Rover_Main_Ver01.c: 465:             return('8');
  3266     02C4  3038               	movlw	56
  3267     02C5  2AE9               	goto	l231
  3268     02C6                     l1558:
  3269                           
  3270                           ;Rover_Main_Ver01.c: 467:             return('9');
  3271     02C6  3039               	movlw	57
  3272     02C7  2AE9               	goto	l231
  3273     02C8                     l1564:
  3274     02C8  0873               	movf	intToChar@integer,w
  3275                           
  3276                           ; Switch size 1, requested type "simple"
  3277                           ; Number of cases is 10, Range of values is 0 to 9
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; direct_byte           26     6 (fixed)
  3281                           ; simple_byte           31    16 (average)
  3282                           ; jumptable            260     6 (fixed)
  3283                           ;	Chosen strategy is simple_byte
  3284     02C9  3A00               	xorlw	0	; case 0
  3285     02CA  1903               	skipnz
  3286     02CB  2AB4               	goto	l1522
  3287     02CC  3A01               	xorlw	1	; case 1
  3288     02CD  1903               	skipnz
  3289     02CE  2AB6               	goto	l1526
  3290     02CF  3A03               	xorlw	3	; case 2
  3291     02D0  1903               	skipnz
  3292     02D1  2AB8               	goto	l1530
  3293     02D2  3A01               	xorlw	1	; case 3
  3294     02D3  1903               	skipnz
  3295     02D4  2ABA               	goto	l1534
  3296     02D5  3A07               	xorlw	7	; case 4
  3297     02D6  1903               	skipnz
  3298     02D7  2ABC               	goto	l1538
  3299     02D8  3A01               	xorlw	1	; case 5
  3300     02D9  1903               	skipnz
  3301     02DA  2ABE               	goto	l1542
  3302     02DB  3A03               	xorlw	3	; case 6
  3303     02DC  1903               	skipnz
  3304     02DD  2AC0               	goto	l1546
  3305     02DE  3A01               	xorlw	1	; case 7
  3306     02DF  1903               	skipnz
  3307     02E0  2AC2               	goto	l1550
  3308     02E1  3A0F               	xorlw	15	; case 8
  3309     02E2  1903               	skipnz
  3310     02E3  2AC4               	goto	l1554
  3311     02E4  3A01               	xorlw	1	; case 9
  3312     02E5  1903               	skipnz
  3313     02E6  2AC6               	goto	l1558
  3314     02E7  2AE8               	goto	l1566
  3315     02E8                     l1566:
  3316                           
  3317                           ;Rover_Main_Ver01.c: 469:     return('_');
  3318     02E8  305F               	movlw	95
  3319     02E9                     l231:
  3320     02E9  0008               	return
  3321     02EA                     __end_of_intToChar:
  3322                           
  3323                           	psect	text14
  3324     02EA                     __ptext14:	
  3325 ;; *************** function ___lwmod *****************
  3326 ;; Defined at:
  3327 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  divisor         2    3[COMMON] unsigned int 
  3330 ;;  dividend        2    5[COMMON] unsigned int 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  counter         1    7[COMMON] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2    3[COMMON] unsigned int 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;Total ram usage:        5 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_alienFrequencyTask
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356     02EA                     ___lwmod:	
  3357                           ;psect for function ___lwmod
  3358                           
  3359     02EA                     l1640:	
  3360                           ;incstack = 0
  3361                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3362                           
  3363     02EA  0873               	movf	___lwmod@divisor,w
  3364     02EB  0474               	iorwf	___lwmod@divisor+1,w
  3365     02EC  1903               	btfsc	3,2
  3366     02ED  2AEF               	goto	u761
  3367     02EE  2AF0               	goto	u760
  3368     02EF                     u761:
  3369     02EF  2B17               	goto	l1658
  3370     02F0                     u760:
  3371     02F0                     l1642:
  3372     02F0  3001               	movlw	1
  3373     02F1  00F7               	movwf	___lwmod@counter
  3374     02F2  2AFA               	goto	l1648
  3375     02F3                     l1644:
  3376     02F3  3001               	movlw	1
  3377     02F4                     u775:
  3378     02F4  35F3               	lslf	___lwmod@divisor,f
  3379     02F5  0DF4               	rlf	___lwmod@divisor+1,f
  3380     02F6  0B89               	decfsz	9,f
  3381     02F7  2AF4               	goto	u775
  3382     02F8                     l1646:
  3383     02F8  3001               	movlw	1
  3384     02F9  07F7               	addwf	___lwmod@counter,f
  3385     02FA                     l1648:
  3386     02FA  1FF4               	btfss	___lwmod@divisor+1,7
  3387     02FB  2AFD               	goto	u781
  3388     02FC  2AFE               	goto	u780
  3389     02FD                     u781:
  3390     02FD  2AF3               	goto	l1644
  3391     02FE                     u780:
  3392     02FE                     l1650:
  3393     02FE  0874               	movf	___lwmod@divisor+1,w
  3394     02FF  0276               	subwf	___lwmod@dividend+1,w
  3395     0300  1D03               	skipz
  3396     0301  2B04               	goto	u795
  3397     0302  0873               	movf	___lwmod@divisor,w
  3398     0303  0275               	subwf	___lwmod@dividend,w
  3399     0304                     u795:
  3400     0304  1C03               	skipc
  3401     0305  2B07               	goto	u791
  3402     0306  2B08               	goto	u790
  3403     0307                     u791:
  3404     0307  2B0C               	goto	l1654
  3405     0308                     u790:
  3406     0308                     l1652:
  3407     0308  0873               	movf	___lwmod@divisor,w
  3408     0309  02F5               	subwf	___lwmod@dividend,f
  3409     030A  0874               	movf	___lwmod@divisor+1,w
  3410     030B  3BF6               	subwfb	___lwmod@dividend+1,f
  3411     030C                     l1654:
  3412     030C  3001               	movlw	1
  3413     030D                     u805:
  3414     030D  36F4               	lsrf	___lwmod@divisor+1,f
  3415     030E  0CF3               	rrf	___lwmod@divisor,f
  3416     030F  0B89               	decfsz	9,f
  3417     0310  2B0D               	goto	u805
  3418     0311                     l1656:
  3419     0311  3001               	movlw	1
  3420     0312  02F7               	subwf	___lwmod@counter,f
  3421     0313  1D03               	btfss	3,2
  3422     0314  2B16               	goto	u811
  3423     0315  2B17               	goto	u810
  3424     0316                     u811:
  3425     0316  2AFE               	goto	l1650
  3426     0317                     u810:
  3427     0317                     l1658:
  3428     0317  0876               	movf	___lwmod@dividend+1,w
  3429     0318  00F4               	movwf	?___lwmod+1
  3430     0319  0875               	movf	___lwmod@dividend,w
  3431     031A  00F3               	movwf	?___lwmod
  3432     031B                     l732:
  3433     031B  0008               	return
  3434     031C                     __end_of___lwmod:
  3435                           
  3436                           	psect	text15
  3437     0278                     __ptext15:	
  3438 ;; *************** function ___lwdiv *****************
  3439 ;; Defined at:
  3440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  divisor         2    3[COMMON] unsigned int 
  3443 ;;  dividend        2    5[COMMON] unsigned int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  quotient        2    7[COMMON] unsigned int 
  3446 ;;  counter         1    9[COMMON] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2    3[COMMON] unsigned int 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;Total ram usage:        7 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_alienFrequencyTask
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470     0278                     ___lwdiv:	
  3471                           ;psect for function ___lwdiv
  3472                           
  3473     0278                     l1614:	
  3474                           ;incstack = 0
  3475                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3476                           
  3477     0278  01F7               	clrf	___lwdiv@quotient
  3478     0279  01F8               	clrf	___lwdiv@quotient+1
  3479     027A                     l1616:
  3480     027A  0873               	movf	___lwdiv@divisor,w
  3481     027B  0474               	iorwf	___lwdiv@divisor+1,w
  3482     027C  1903               	btfsc	3,2
  3483     027D  2A7F               	goto	u691
  3484     027E  2A80               	goto	u690
  3485     027F                     u691:
  3486     027F  2AAD               	goto	l1636
  3487     0280                     u690:
  3488     0280                     l1618:
  3489     0280  3001               	movlw	1
  3490     0281  00F9               	movwf	___lwdiv@counter
  3491     0282  2A8A               	goto	l1624
  3492     0283                     l1620:
  3493     0283  3001               	movlw	1
  3494     0284                     u705:
  3495     0284  35F3               	lslf	___lwdiv@divisor,f
  3496     0285  0DF4               	rlf	___lwdiv@divisor+1,f
  3497     0286  0B89               	decfsz	9,f
  3498     0287  2A84               	goto	u705
  3499     0288                     l1622:
  3500     0288  3001               	movlw	1
  3501     0289  07F9               	addwf	___lwdiv@counter,f
  3502     028A                     l1624:
  3503     028A  1FF4               	btfss	___lwdiv@divisor+1,7
  3504     028B  2A8D               	goto	u711
  3505     028C  2A8E               	goto	u710
  3506     028D                     u711:
  3507     028D  2A83               	goto	l1620
  3508     028E                     u710:
  3509     028E                     l1626:
  3510     028E  3001               	movlw	1
  3511     028F                     u725:
  3512     028F  35F7               	lslf	___lwdiv@quotient,f
  3513     0290  0DF8               	rlf	___lwdiv@quotient+1,f
  3514     0291  0B89               	decfsz	9,f
  3515     0292  2A8F               	goto	u725
  3516     0293  0874               	movf	___lwdiv@divisor+1,w
  3517     0294  0276               	subwf	___lwdiv@dividend+1,w
  3518     0295  1D03               	skipz
  3519     0296  2A99               	goto	u735
  3520     0297  0873               	movf	___lwdiv@divisor,w
  3521     0298  0275               	subwf	___lwdiv@dividend,w
  3522     0299                     u735:
  3523     0299  1C03               	skipc
  3524     029A  2A9C               	goto	u731
  3525     029B  2A9D               	goto	u730
  3526     029C                     u731:
  3527     029C  2AA2               	goto	l1632
  3528     029D                     u730:
  3529     029D                     l1628:
  3530     029D  0873               	movf	___lwdiv@divisor,w
  3531     029E  02F5               	subwf	___lwdiv@dividend,f
  3532     029F  0874               	movf	___lwdiv@divisor+1,w
  3533     02A0  3BF6               	subwfb	___lwdiv@dividend+1,f
  3534     02A1                     l1630:
  3535     02A1  1477               	bsf	___lwdiv@quotient,0
  3536     02A2                     l1632:
  3537     02A2  3001               	movlw	1
  3538     02A3                     u745:
  3539     02A3  36F4               	lsrf	___lwdiv@divisor+1,f
  3540     02A4  0CF3               	rrf	___lwdiv@divisor,f
  3541     02A5  0B89               	decfsz	9,f
  3542     02A6  2AA3               	goto	u745
  3543     02A7                     l1634:
  3544     02A7  3001               	movlw	1
  3545     02A8  02F9               	subwf	___lwdiv@counter,f
  3546     02A9  1D03               	btfss	3,2
  3547     02AA  2AAC               	goto	u751
  3548     02AB  2AAD               	goto	u750
  3549     02AC                     u751:
  3550     02AC  2A8E               	goto	l1626
  3551     02AD                     u750:
  3552     02AD                     l1636:
  3553     02AD  0878               	movf	___lwdiv@quotient+1,w
  3554     02AE  00F4               	movwf	?___lwdiv+1
  3555     02AF  0877               	movf	___lwdiv@quotient,w
  3556     02B0  00F3               	movwf	?___lwdiv
  3557     02B1                     l722:
  3558     02B1  0008               	return
  3559     02B2                     __end_of___lwdiv:
  3560                           
  3561                           	psect	text16
  3562     0150                     __ptext16:	
  3563 ;; *************** function ___awdiv *****************
  3564 ;; Defined at:
  3565 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  divisor         2    3[COMMON] int 
  3568 ;;  dividend        2    5[COMMON] int 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  quotient        2    2[BANK0 ] int 
  3571 ;;  sign            1    1[BANK0 ] unsigned char 
  3572 ;;  counter         1    0[BANK0 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  2    3[COMMON] int 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;Total ram usage:        8 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 1
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_alienFrequencyTask
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596     0150                     ___awdiv:	
  3597                           ;psect for function ___awdiv
  3598                           
  3599     0150                     l1928:	
  3600                           ;incstack = 0
  3601                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3602                           
  3603     0150  0020               	movlb	0	; select bank0
  3604     0151  01C5               	clrf	___awdiv@sign
  3605     0152                     l1930:
  3606     0152  1FF4               	btfss	___awdiv@divisor+1,7
  3607     0153  2955               	goto	u1041
  3608     0154  2956               	goto	u1040
  3609     0155                     u1041:
  3610     0155  295D               	goto	l1936
  3611     0156                     u1040:
  3612     0156                     l1932:
  3613     0156  09F3               	comf	___awdiv@divisor,f
  3614     0157  09F4               	comf	___awdiv@divisor+1,f
  3615     0158  0AF3               	incf	___awdiv@divisor,f
  3616     0159  1903               	skipnz
  3617     015A  0AF4               	incf	___awdiv@divisor+1,f
  3618     015B                     l1934:
  3619     015B  3001               	movlw	1
  3620     015C  00C5               	movwf	___awdiv@sign
  3621     015D                     l1936:
  3622     015D  1FF6               	btfss	___awdiv@dividend+1,7
  3623     015E  2960               	goto	u1051
  3624     015F  2961               	goto	u1050
  3625     0160                     u1051:
  3626     0160  2968               	goto	l1942
  3627     0161                     u1050:
  3628     0161                     l1938:
  3629     0161  09F5               	comf	___awdiv@dividend,f
  3630     0162  09F6               	comf	___awdiv@dividend+1,f
  3631     0163  0AF5               	incf	___awdiv@dividend,f
  3632     0164  1903               	skipnz
  3633     0165  0AF6               	incf	___awdiv@dividend+1,f
  3634     0166                     l1940:
  3635     0166  3001               	movlw	1
  3636     0167  06C5               	xorwf	___awdiv@sign,f
  3637     0168                     l1942:
  3638     0168  01C6               	clrf	___awdiv@quotient
  3639     0169  01C7               	clrf	___awdiv@quotient+1
  3640     016A                     l1944:
  3641     016A  0873               	movf	___awdiv@divisor,w
  3642     016B  0474               	iorwf	___awdiv@divisor+1,w
  3643     016C  1903               	btfsc	3,2
  3644     016D  296F               	goto	u1061
  3645     016E  2970               	goto	u1060
  3646     016F                     u1061:
  3647     016F  299D               	goto	l1964
  3648     0170                     u1060:
  3649     0170                     l1946:
  3650     0170  3001               	movlw	1
  3651     0171  00C4               	movwf	___awdiv@counter
  3652     0172  297A               	goto	l1952
  3653     0173                     l1948:
  3654     0173  3001               	movlw	1
  3655     0174                     u1075:
  3656     0174  35F3               	lslf	___awdiv@divisor,f
  3657     0175  0DF4               	rlf	___awdiv@divisor+1,f
  3658     0176  0B89               	decfsz	9,f
  3659     0177  2974               	goto	u1075
  3660     0178                     l1950:
  3661     0178  3001               	movlw	1
  3662     0179  07C4               	addwf	___awdiv@counter,f
  3663     017A                     l1952:
  3664     017A  1FF4               	btfss	___awdiv@divisor+1,7
  3665     017B  297D               	goto	u1081
  3666     017C  297E               	goto	u1080
  3667     017D                     u1081:
  3668     017D  2973               	goto	l1948
  3669     017E                     u1080:
  3670     017E                     l1954:
  3671     017E  3001               	movlw	1
  3672     017F                     u1095:
  3673     017F  35C6               	lslf	___awdiv@quotient,f
  3674     0180  0DC7               	rlf	___awdiv@quotient+1,f
  3675     0181  0B89               	decfsz	9,f
  3676     0182  297F               	goto	u1095
  3677     0183  0874               	movf	___awdiv@divisor+1,w
  3678     0184  0276               	subwf	___awdiv@dividend+1,w
  3679     0185  1D03               	skipz
  3680     0186  2989               	goto	u1105
  3681     0187  0873               	movf	___awdiv@divisor,w
  3682     0188  0275               	subwf	___awdiv@dividend,w
  3683     0189                     u1105:
  3684     0189  1C03               	skipc
  3685     018A  298C               	goto	u1101
  3686     018B  298D               	goto	u1100
  3687     018C                     u1101:
  3688     018C  2992               	goto	l1960
  3689     018D                     u1100:
  3690     018D                     l1956:
  3691     018D  0873               	movf	___awdiv@divisor,w
  3692     018E  02F5               	subwf	___awdiv@dividend,f
  3693     018F  0874               	movf	___awdiv@divisor+1,w
  3694     0190  3BF6               	subwfb	___awdiv@dividend+1,f
  3695     0191                     l1958:
  3696     0191  1446               	bsf	___awdiv@quotient,0
  3697     0192                     l1960:
  3698     0192  3001               	movlw	1
  3699     0193                     u1115:
  3700     0193  36F4               	lsrf	___awdiv@divisor+1,f
  3701     0194  0CF3               	rrf	___awdiv@divisor,f
  3702     0195  0B89               	decfsz	9,f
  3703     0196  2993               	goto	u1115
  3704     0197                     l1962:
  3705     0197  3001               	movlw	1
  3706     0198  02C4               	subwf	___awdiv@counter,f
  3707     0199  1D03               	btfss	3,2
  3708     019A  299C               	goto	u1121
  3709     019B  299D               	goto	u1120
  3710     019C                     u1121:
  3711     019C  297E               	goto	l1954
  3712     019D                     u1120:
  3713     019D                     l1964:
  3714     019D  0845               	movf	___awdiv@sign,w
  3715     019E  1903               	btfsc	3,2
  3716     019F  29A1               	goto	u1131
  3717     01A0  29A2               	goto	u1130
  3718     01A1                     u1131:
  3719     01A1  29A7               	goto	l1968
  3720     01A2                     u1130:
  3721     01A2                     l1966:
  3722     01A2  09C6               	comf	___awdiv@quotient,f
  3723     01A3  09C7               	comf	___awdiv@quotient+1,f
  3724     01A4  0AC6               	incf	___awdiv@quotient,f
  3725     01A5  1903               	skipnz
  3726     01A6  0AC7               	incf	___awdiv@quotient+1,f
  3727     01A7                     l1968:
  3728     01A7  0847               	movf	___awdiv@quotient+1,w
  3729     01A8  00F4               	movwf	?___awdiv+1
  3730     01A9  0846               	movf	___awdiv@quotient,w
  3731     01AA  00F3               	movwf	?___awdiv
  3732     01AB                     l595:
  3733     01AB  0008               	return
  3734     01AC                     __end_of___awdiv:
  3735                           
  3736                           	psect	text17
  3737     03F9                     __ptext17:	
  3738 ;; *************** function _HAL_Set_Cursor *****************
  3739 ;; Defined at:
  3740 ;;		line 318 in file "Rover_Main_Ver01.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  col             2    1[BANK0 ] int 
  3743 ;;  line            2    3[BANK0 ] int 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  addr            2    5[BANK0 ] int 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3758 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;Total ram usage:        6 bytes
  3760 ;; Hardware stack levels used: 1
  3761 ;; Hardware stack levels required when called: 6
  3762 ;; This function calls:
  3763 ;;		_HAL_Write_Command
  3764 ;; This function is called by:
  3765 ;;		_alienFrequencyTask
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769     03F9                     _HAL_Set_Cursor:	
  3770                           ;psect for function _HAL_Set_Cursor
  3771                           
  3772     03F9                     l1890:	
  3773                           ;incstack = 0
  3774                           ; Regs used in _HAL_Set_Cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3775                           
  3776                           
  3777                           ;Rover_Main_Ver01.c: 319:  int addr = col & 0x3F;
  3778     03F9  303F               	movlw	63
  3779     03FA  0020               	movlb	0	; select bank0
  3780     03FB  0545               	andwf	HAL_Set_Cursor@col,w
  3781     03FC  00C9               	movwf	HAL_Set_Cursor@addr
  3782     03FD  3000               	movlw	0
  3783     03FE  0546               	andwf	HAL_Set_Cursor@col+1,w
  3784     03FF  00CA               	movwf	HAL_Set_Cursor@addr+1
  3785     0400                     l1892:
  3786                           
  3787                           ;Rover_Main_Ver01.c: 320:  if (line & 1){
  3788     0400  1C47               	btfss	HAL_Set_Cursor@line,0
  3789     0401  2C03               	goto	u1011
  3790     0402  2C04               	goto	u1010
  3791     0403                     u1011:
  3792     0403  2C08               	goto	l1896
  3793     0404                     u1010:
  3794     0404                     l1894:
  3795                           
  3796                           ;Rover_Main_Ver01.c: 321:   addr += 0x40;
  3797     0404  3040               	movlw	64
  3798     0405  07C9               	addwf	HAL_Set_Cursor@addr,f
  3799     0406  3000               	movlw	0
  3800     0407  3DCA               	addwfc	HAL_Set_Cursor@addr+1,f
  3801     0408                     l1896:
  3802                           
  3803                           ;Rover_Main_Ver01.c: 323:  if(line & 2){
  3804     0408  1CC7               	btfss	HAL_Set_Cursor@line,1
  3805     0409  2C0B               	goto	u1021
  3806     040A  2C0C               	goto	u1020
  3807     040B                     u1021:
  3808     040B  2C10               	goto	l1900
  3809     040C                     u1020:
  3810     040C                     l1898:
  3811                           
  3812                           ;Rover_Main_Ver01.c: 324:   addr += 0x14;
  3813     040C  3014               	movlw	20
  3814     040D  07C9               	addwf	HAL_Set_Cursor@addr,f
  3815     040E  3000               	movlw	0
  3816     040F  3DCA               	addwfc	HAL_Set_Cursor@addr+1,f
  3817     0410                     l1900:
  3818                           
  3819                           ;Rover_Main_Ver01.c: 326:  HAL_Write_Command(0x80 | addr);
  3820     0410  0849               	movf	HAL_Set_Cursor@addr,w
  3821     0411  3880               	iorlw	128
  3822     0412  3183  23B6  3183   	fcall	_HAL_Write_Command
  3823     0415                     l193:
  3824     0415  0008               	return
  3825     0416                     __end_of_HAL_Set_Cursor:
  3826                           
  3827                           	psect	text18
  3828     031C                     __ptext18:	
  3829 ;; *************** function _HAL_LCD_Print *****************
  3830 ;; Defined at:
  3831 ;;		line 329 in file "Rover_Main_Ver01.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  string          1    1[BANK0 ] PTR unsigned char 
  3834 ;;		 -> Rover_Team(16), alienFrequencyTask@freq_char(4), FFT_Home2(16), FFT_Home1(16), 
  3835 ;;  size            2    2[BANK0 ] int 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  i               2    5[BANK0 ] int 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3847 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;Total ram usage:        6 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 6
  3854 ;; This function calls:
  3855 ;;		_HAL_Write_Data
  3856 ;; This function is called by:
  3857 ;;		_alienFrequencyTask
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862     031C                     _HAL_LCD_Print:	
  3863                           ;psect for function _HAL_LCD_Print
  3864                           
  3865     031C                     l1902:	
  3866                           ;incstack = 0
  3867                           ; Regs used in _HAL_LCD_Print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3868                           
  3869                           
  3870                           ;Rover_Main_Ver01.c: 330:  for(int i=0;i<size;i++){
  3871     031C  0020               	movlb	0	; select bank0
  3872     031D  01C9               	clrf	HAL_LCD_Print@i
  3873     031E  01CA               	clrf	HAL_LCD_Print@i+1
  3874     031F  2B3A               	goto	l1912
  3875     0320                     l1904:
  3876                           
  3877                           ;Rover_Main_Ver01.c: 331:   HAL_Write_Data(*string);
  3878     0320  0020               	movlb	0	; select bank0
  3879     0321  0845               	movf	HAL_LCD_Print@string,w
  3880     0322  0086               	movwf	6
  3881     0323  0187               	clrf	7
  3882     0324  0801               	movf	1,w
  3883     0325  3184  244A  3183   	fcall	_HAL_Write_Data
  3884     0328                     l1906:
  3885                           
  3886                           ;Rover_Main_Ver01.c: 332:   string = string + 1;
  3887     0328  0020               	movlb	0	; select bank0
  3888     0329  0845               	movf	HAL_LCD_Print@string,w
  3889     032A  3E01               	addlw	1
  3890     032B  00C5               	movwf	HAL_LCD_Print@string
  3891     032C                     l1908:
  3892                           
  3893                           ;Rover_Main_Ver01.c: 333:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3894     032C  3034               	movlw	52
  3895     032D  0020               	movlb	0	; select bank0
  3896     032E  00C8               	movwf	??_HAL_LCD_Print
  3897     032F  30F1               	movlw	241
  3898     0330                     u1297:
  3899     0330  0B89               	decfsz	9,f
  3900     0331  2B30               	goto	u1297
  3901     0332  0BC8               	decfsz	??_HAL_LCD_Print,f
  3902     0333  2B30               	goto	u1297
  3903     0334  3200               	nop2
  3904     0335                     l1910:
  3905                           
  3906                           ;Rover_Main_Ver01.c: 334:  }
  3907     0335  3001               	movlw	1
  3908     0336  0020               	movlb	0	; select bank0
  3909     0337  07C9               	addwf	HAL_LCD_Print@i,f
  3910     0338  3000               	movlw	0
  3911     0339  3DCA               	addwfc	HAL_LCD_Print@i+1,f
  3912     033A                     l1912:
  3913     033A  084A               	movf	HAL_LCD_Print@i+1,w
  3914     033B  3A80               	xorlw	128
  3915     033C  00C8               	movwf	??_HAL_LCD_Print
  3916     033D  0847               	movf	HAL_LCD_Print@size+1,w
  3917     033E  3A80               	xorlw	128
  3918     033F  0248               	subwf	??_HAL_LCD_Print,w
  3919     0340  1D03               	skipz
  3920     0341  2B44               	goto	u1035
  3921     0342  0846               	movf	HAL_LCD_Print@size,w
  3922     0343  0249               	subwf	HAL_LCD_Print@i,w
  3923     0344                     u1035:
  3924     0344  1C03               	skipc
  3925     0345  2B47               	goto	u1031
  3926     0346  2B48               	goto	u1030
  3927     0347                     u1031:
  3928     0347  2B20               	goto	l1904
  3929     0348                     u1030:
  3930     0348                     l199:
  3931     0348  0008               	return
  3932     0349                     __end_of_HAL_LCD_Print:
  3933                           
  3934                           	psect	text19
  3935     044A                     __ptext19:	
  3936 ;; *************** function _HAL_Write_Data *****************
  3937 ;; Defined at:
  3938 ;;		line 267 in file "Rover_Main_Ver01.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  data            1    wreg     unsigned char 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  data            1    0[BANK0 ] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;Total ram usage:        2 bytes
  3957 ;; Hardware stack levels used: 1
  3958 ;; Hardware stack levels required when called: 5
  3959 ;; This function calls:
  3960 ;;		__write_byte
  3961 ;; This function is called by:
  3962 ;;		_HAL_LCD_Print
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966     044A                     _HAL_Write_Data:	
  3967                           ;psect for function _HAL_Write_Data
  3968                           
  3969                           
  3970                           ;incstack = 0
  3971                           ; Regs used in _HAL_Write_Data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3972                           ;HAL_Write_Data@data stored from wreg
  3973     044A  0020               	movlb	0	; select bank0
  3974     044B  00C4               	movwf	HAL_Write_Data@data
  3975     044C                     l1886:
  3976                           
  3977                           ;Rover_Main_Ver01.c: 268:  _write_byte((data & 0xF0)| 1);
  3978     044C  0844               	movf	HAL_Write_Data@data,w
  3979     044D  39F0               	andlw	240
  3980     044E  3801               	iorlw	1
  3981     044F  3184  2497  3184   	fcall	__write_byte
  3982                           
  3983                           ;Rover_Main_Ver01.c: 269:  _write_byte(((data << 4) & 0xF0) | 1);
  3984     0452  0020               	movlb	0	; select bank0
  3985     0453  0844               	movf	HAL_Write_Data@data,w
  3986     0454  00F9               	movwf	??_HAL_Write_Data
  3987     0455  3004               	movlw	4
  3988     0456                     u1005:
  3989     0456  35F9               	lslf	??_HAL_Write_Data,f
  3990     0457  0B89               	decfsz	9,f
  3991     0458  2C56               	goto	u1005
  3992     0459  0879               	movf	??_HAL_Write_Data,w
  3993     045A  39F0               	andlw	240
  3994     045B  3801               	iorlw	1
  3995     045C  3184  2497  3184   	fcall	__write_byte
  3996     045F                     l159:
  3997     045F  0008               	return
  3998     0460                     __end_of_HAL_Write_Data:
  3999                           
  4000                           	psect	text20
  4001     04CB                     __ptext20:	
  4002 ;; *************** function _HAL_Clear *****************
  4003 ;; Defined at:
  4004 ;;		line 273 in file "Rover_Main_Ver01.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;Total ram usage:        1 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 6
  4025 ;; This function calls:
  4026 ;;		_HAL_Write_Command
  4027 ;; This function is called by:
  4028 ;;		_init_LCD
  4029 ;;		_alienFrequencyTask
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033     04CB                     _HAL_Clear:	
  4034                           ;psect for function _HAL_Clear
  4035                           
  4036     04CB                     l1862:	
  4037                           ;incstack = 0
  4038                           ; Regs used in _HAL_Clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4039                           
  4040                           
  4041                           ;Rover_Main_Ver01.c: 274:  HAL_Write_Command(0x01);
  4042     04CB  3001               	movlw	1
  4043     04CC  3183  23B6  3184   	fcall	_HAL_Write_Command
  4044     04CF                     l1864:
  4045                           
  4046                           ;Rover_Main_Ver01.c: 275:  _delay((unsigned long)((3)*(32000000/4000.0)));
  4047     04CF  3020               	movlw	32
  4048     04D0  0020               	movlb	0	; select bank0
  4049     04D1  00C5               	movwf	??_HAL_Clear
  4050     04D2  3029               	movlw	41
  4051     04D3                     u1307:
  4052     04D3  0B89               	decfsz	9,f
  4053     04D4  2CD3               	goto	u1307
  4054     04D5  0BC5               	decfsz	??_HAL_Clear,f
  4055     04D6  2CD3               	goto	u1307
  4056     04D7  3200               	nop2
  4057     04D8                     l162:
  4058     04D8  0008               	return
  4059     04D9                     __end_of_HAL_Clear:
  4060                           
  4061                           	psect	text21
  4062     03B6                     __ptext21:	
  4063 ;; *************** function _HAL_Write_Command *****************
  4064 ;; Defined at:
  4065 ;;		line 245 in file "Rover_Main_Ver01.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  cmd             1    wreg     unsigned char 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  cmd             1    0[BANK0 ] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;Total ram usage:        2 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: 5
  4086 ;; This function calls:
  4087 ;;		__write_byte
  4088 ;; This function is called by:
  4089 ;;		_HAL_Clear
  4090 ;;		_HAL_Display_On
  4091 ;;		_HAL_Set_Entry_Mode
  4092 ;;		_HAL_Set_Cursor
  4093 ;;		_HAL_Show_Cursor
  4094 ;;		_HAL_Hide_Cursor
  4095 ;;		_HAL_Blink_Cursor_On
  4096 ;;		_HAL_Blink_Cursor_Off
  4097 ;;		_HAL_Display_Off
  4098 ;;		_HAL_Home
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102     03B6                     _HAL_Write_Command:	
  4103                           ;psect for function _HAL_Write_Command
  4104                           
  4105                           
  4106                           ;incstack = 0
  4107                           ; Regs used in _HAL_Write_Command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4108                           ;HAL_Write_Command@cmd stored from wreg
  4109     03B6  0020               	movlb	0	; select bank0
  4110     03B7  00C4               	movwf	HAL_Write_Command@cmd
  4111     03B8                     l1856:
  4112                           
  4113                           ;Rover_Main_Ver01.c: 246:  _write_byte((cmd & 0xF0) | 0);
  4114     03B8  0844               	movf	HAL_Write_Command@cmd,w
  4115     03B9  39F0               	andlw	240
  4116     03BA  3184  2497  3183   	fcall	__write_byte
  4117                           
  4118                           ;Rover_Main_Ver01.c: 247:  _write_byte(((cmd<<4) & 0xF0) | 0);
  4119     03BD  0020               	movlb	0	; select bank0
  4120     03BE  0844               	movf	HAL_Write_Command@cmd,w
  4121     03BF  00F9               	movwf	??_HAL_Write_Command
  4122     03C0  3004               	movlw	4
  4123     03C1                     u945:
  4124     03C1  35F9               	lslf	??_HAL_Write_Command,f
  4125     03C2  0B89               	decfsz	9,f
  4126     03C3  2BC1               	goto	u945
  4127     03C4  0879               	movf	??_HAL_Write_Command,w
  4128     03C5  39F0               	andlw	240
  4129     03C6  3184  2497  3183   	fcall	__write_byte
  4130     03C9                     l1858:
  4131                           
  4132                           ;Rover_Main_Ver01.c: 248:  if (cmd <= 3){
  4133     03C9  3004               	movlw	4
  4134     03CA  0020               	movlb	0	; select bank0
  4135     03CB  0244               	subwf	HAL_Write_Command@cmd,w
  4136     03CC  1803               	skipnc
  4137     03CD  2BCF               	goto	u951
  4138     03CE  2BD0               	goto	u950
  4139     03CF                     u951:
  4140     03CF  2BD7               	goto	l150
  4141     03D0                     u950:
  4142     03D0                     l1860:
  4143                           
  4144                           ;Rover_Main_Ver01.c: 249:   _delay((unsigned long)((5)*(32000000/4000.0)));
  4145     03D0  3034               	movlw	52
  4146     03D1  00F9               	movwf	??_HAL_Write_Command
  4147     03D2  30F2               	movlw	242
  4148     03D3                     u1317:
  4149     03D3  0B89               	decfsz	9,f
  4150     03D4  2BD3               	goto	u1317
  4151     03D5  0BF9               	decfsz	??_HAL_Write_Command,f
  4152     03D6  2BD3               	goto	u1317
  4153     03D7                     l150:
  4154     03D7  0008               	return
  4155     03D8                     __end_of_HAL_Write_Command:
  4156                           
  4157                           	psect	text22
  4158     0497                     __ptext22:	
  4159 ;; *************** function __write_byte *****************
  4160 ;; Defined at:
  4161 ;;		line 232 in file "Rover_Main_Ver01.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  byte            1    wreg     unsigned char 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  byte            1    8[COMMON] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;Total ram usage:        1 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 4
  4182 ;; This function calls:
  4183 ;;		_HAL_I2C_Master_Transmit
  4184 ;;		_HAL_Pulse_Enable
  4185 ;; This function is called by:
  4186 ;;		_HAL_Write_Command
  4187 ;;		_HAL_Write_Data
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191     0497                     __write_byte:	
  4192                           ;psect for function __write_byte
  4193                           
  4194                           
  4195                           ;incstack = 0
  4196                           ; Regs used in __write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4197                           ;__write_byte@byte stored from wreg
  4198     0497  00F8               	movwf	__write_byte@byte
  4199     0498                     l1850:
  4200                           
  4201                           ;Rover_Main_Ver01.c: 233:  byte = (byte | LCD._backlight);
  4202     0498  0020               	movlb	0	; select bank0
  4203     0499  0864               	movf	_LCD+10,w
  4204     049A  0478               	iorwf	__write_byte@byte,w
  4205     049B  00F8               	movwf	__write_byte@byte
  4206     049C                     l1852:
  4207                           
  4208                           ;Rover_Main_Ver01.c: 234:     HAL_I2C_Master_Transmit(LCD.i2c_addr, &byte,1);
  4209     049C  3078               	movlw	(low (__write_byte@byte| 0))& (0+255)
  4210     049D  00F4               	movwf	HAL_I2C_Master_Transmit@dataByte
  4211     049E  01F5               	clrf	HAL_I2C_Master_Transmit@numberOfDataBytes
  4212     049F  0AF5               	incf	HAL_I2C_Master_Transmit@numberOfDataBytes,f
  4213     04A0  085A               	movf	_LCD,w
  4214     04A1  3184  2460  3184   	fcall	_HAL_I2C_Master_Transmit
  4215     04A4                     l1854:
  4216                           
  4217                           ;Rover_Main_Ver01.c: 235:     HAL_Pulse_Enable(byte);
  4218     04A4  0878               	movf	__write_byte@byte,w
  4219     04A5  3184  2416  3184   	fcall	_HAL_Pulse_Enable
  4220     04A8                     l143:
  4221     04A8  0008               	return
  4222     04A9                     __end_of__write_byte:
  4223                           
  4224                           	psect	text23
  4225     0416                     __ptext23:	
  4226 ;; *************** function _HAL_Pulse_Enable *****************
  4227 ;; Defined at:
  4228 ;;		line 225 in file "Rover_Main_Ver01.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  byte            1    wreg     unsigned char 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  byte            1    7[COMMON] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;Total ram usage:        1 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; Hardware stack levels required when called: 3
  4249 ;; This function calls:
  4250 ;;		_HAL_I2C_Master_Transmit
  4251 ;; This function is called by:
  4252 ;;		__write_byte
  4253 ;;		_HAL_Write_Init_Nibble
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257     0416                     _HAL_Pulse_Enable:	
  4258                           ;psect for function _HAL_Pulse_Enable
  4259                           
  4260                           
  4261                           ;incstack = 0
  4262                           ; Regs used in _HAL_Pulse_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4263                           ;HAL_Pulse_Enable@byte stored from wreg
  4264     0416  00F7               	movwf	HAL_Pulse_Enable@byte
  4265     0417                     l1844:
  4266                           
  4267                           ;Rover_Main_Ver01.c: 226:  byte = (byte | 0x04 | LCD._backlight);
  4268     0417  0020               	movlb	0	; select bank0
  4269     0418  0864               	movf	_LCD+10,w
  4270     0419  0477               	iorwf	HAL_Pulse_Enable@byte,w
  4271     041A  3804               	iorlw	4
  4272     041B  00F7               	movwf	HAL_Pulse_Enable@byte
  4273     041C                     l1846:
  4274                           
  4275                           ;Rover_Main_Ver01.c: 227:  HAL_I2C_Master_Transmit(LCD.i2c_addr, &byte, 1);
  4276     041C  3077               	movlw	(low (HAL_Pulse_Enable@byte| 0))& (0+255)
  4277     041D  00F4               	movwf	HAL_I2C_Master_Transmit@dataByte
  4278     041E  01F5               	clrf	HAL_I2C_Master_Transmit@numberOfDataBytes
  4279     041F  0AF5               	incf	HAL_I2C_Master_Transmit@numberOfDataBytes,f
  4280     0420  085A               	movf	_LCD,w
  4281     0421  3184  2460  3184   	fcall	_HAL_I2C_Master_Transmit
  4282     0424                     l1848:
  4283                           
  4284                           ;Rover_Main_Ver01.c: 228:  byte = ((byte & ~0x04) | LCD._backlight);
  4285     0424  0877               	movf	HAL_Pulse_Enable@byte,w
  4286     0425  39FB               	andlw	251
  4287     0426  0020               	movlb	0	; select bank0
  4288     0427  0464               	iorwf	_LCD+10,w
  4289     0428  00F7               	movwf	HAL_Pulse_Enable@byte
  4290                           
  4291                           ;Rover_Main_Ver01.c: 229:  HAL_I2C_Master_Transmit(LCD.i2c_addr, &byte, 1);
  4292     0429  3077               	movlw	(low (HAL_Pulse_Enable@byte| 0))& (0+255)
  4293     042A  00F4               	movwf	HAL_I2C_Master_Transmit@dataByte
  4294     042B  01F5               	clrf	HAL_I2C_Master_Transmit@numberOfDataBytes
  4295     042C  0AF5               	incf	HAL_I2C_Master_Transmit@numberOfDataBytes,f
  4296     042D  085A               	movf	_LCD,w
  4297     042E  3184  2460  3184   	fcall	_HAL_I2C_Master_Transmit
  4298     0431                     l140:
  4299     0431  0008               	return
  4300     0432                     __end_of_HAL_Pulse_Enable:
  4301                           
  4302                           	psect	text24
  4303     0460                     __ptext24:	
  4304 ;; *************** function _HAL_I2C_Master_Transmit *****************
  4305 ;; Defined at:
  4306 ;;		line 196 in file "Rover_Main_Ver01.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  slaveAddress    1    wreg     unsigned char 
  4309 ;;  dataByte        1    4[COMMON] PTR unsigned char 
  4310 ;;		 -> HAL_Backlight_Off@byte(1), HAL_Backlight_On@byte(1), HAL_Write_Init_Nibble@byte(1), _write_byte@byte(1), 
  4311 ;;		 -> HAL_Pulse_Enable@byte(1), 
  4312 ;;  numberOfData    1    5[COMMON] unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  slaveAddress    1    6[COMMON] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;Total ram usage:        3 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 2
  4331 ;; This function calls:
  4332 ;;		_I2C_start
  4333 ;;		_I2C_stop
  4334 ;;		_I2C_write
  4335 ;; This function is called by:
  4336 ;;		_HAL_Pulse_Enable
  4337 ;;		__write_byte
  4338 ;;		_HAL_Write_Init_Nibble
  4339 ;;		_HAL_Backlight_On
  4340 ;;		_HAL_Backlight_Off
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344     0460                     _HAL_I2C_Master_Transmit:	
  4345                           ;psect for function _HAL_I2C_Master_Transmit
  4346                           
  4347                           
  4348                           ;incstack = 0
  4349                           ; Regs used in _HAL_I2C_Master_Transmit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4350                           ;HAL_I2C_Master_Transmit@slaveAddress stored from wreg
  4351     0460  00F6               	movwf	HAL_I2C_Master_Transmit@slaveAddress
  4352     0461                     l1836:
  4353                           
  4354                           ;Rover_Main_Ver01.c: 197:     I2C_start();
  4355     0461  3184  24EA  3184   	fcall	_I2C_start
  4356     0464                     l1838:
  4357                           
  4358                           ;Rover_Main_Ver01.c: 199:     I2C_write(slaveAddress);
  4359     0464  0876               	movf	HAL_I2C_Master_Transmit@slaveAddress,w
  4360     0465  3184  24A9  3184   	fcall	_I2C_write
  4361     0468                     l1840:
  4362                           
  4363                           ;Rover_Main_Ver01.c: 202:     I2C_write(*dataByte);
  4364     0468  0874               	movf	HAL_I2C_Master_Transmit@dataByte,w
  4365     0469  0086               	movwf	6
  4366     046A  0187               	clrf	7
  4367     046B  0801               	movf	1,w
  4368     046C  3184  24A9  3184   	fcall	_I2C_write
  4369     046F                     l1842:
  4370                           
  4371                           ;Rover_Main_Ver01.c: 205:     I2C_stop();
  4372     046F  3184  24E3  3184   	fcall	_I2C_stop
  4373     0472                     l125:
  4374     0472  0008               	return
  4375     0473                     __end_of_HAL_I2C_Master_Transmit:
  4376                           
  4377                           	psect	text25
  4378     04A9                     __ptext25:	
  4379 ;; *************** function _I2C_write *****************
  4380 ;; Defined at:
  4381 ;;		line 179 in file "Rover_Main_Ver01.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  data            1    wreg     unsigned char 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  data            1    3[COMMON] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;Total ram usage:        1 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_HAL_I2C_Master_Transmit
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409     04A9                     _I2C_write:	
  4410                           ;psect for function _I2C_write
  4411                           
  4412                           
  4413                           ;incstack = 0
  4414                           ; Regs used in _I2C_write: [wreg+status,2+status,0]
  4415                           ;I2C_write@data stored from wreg
  4416     04A9  00F3               	movwf	I2C_write@data
  4417     04AA                     l1830:
  4418                           
  4419                           ;Rover_Main_Ver01.c: 180:     SSP2BUF = data;
  4420     04AA  0873               	movf	I2C_write@data,w
  4421     04AB  0023               	movlb	3	; select bank3
  4422     04AC  0096               	movwf	22	;volatile
  4423     04AD                     l1832:
  4424                           
  4425                           ;Rover_Main_Ver01.c: 181:     bf = SSP2STATbits.BF;
  4426     04AD  0819               	movf	25,w	;volatile
  4427     04AE  3901               	andlw	1
  4428     04AF  00FA               	movwf	_bf
  4429                           
  4430                           ;Rover_Main_Ver01.c: 182:     while(SSP2STATbits.BF == 1){
  4431     04B0  2CB2               	goto	l115
  4432     04B1                     l116:
  4433                           
  4434                           ;Rover_Main_Ver01.c: 183:         __nop();
  4435     04B1  0000               	nop
  4436     04B2                     l115:	
  4437                           ;Rover_Main_Ver01.c: 184:     }
  4438                           
  4439                           
  4440                           ;Rover_Main_Ver01.c: 182:     while(SSP2STATbits.BF == 1){
  4441     04B2  0023               	movlb	3	; select bank3
  4442     04B3  1819               	btfsc	25,0	;volatile
  4443     04B4  2CB6               	goto	u931
  4444     04B5  2CB7               	goto	u930
  4445     04B6                     u931:
  4446     04B6  2CB1               	goto	l116
  4447     04B7                     u930:
  4448     04B7                     l1834:
  4449                           
  4450                           ;Rover_Main_Ver01.c: 185:     bf = SSP2STATbits.BF;
  4451     04B7  0819               	movf	25,w	;volatile
  4452     04B8  3901               	andlw	1
  4453     04B9  00FA               	movwf	_bf
  4454     04BA                     l118:
  4455     04BA  0008               	return
  4456     04BB                     __end_of_I2C_write:
  4457                           
  4458                           	psect	text26
  4459     04E3                     __ptext26:	
  4460 ;; *************** function _I2C_stop *****************
  4461 ;; Defined at:
  4462 ;;		line 149 in file "Rover_Main_Ver01.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		None
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_HAL_I2C_Master_Transmit
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490     04E3                     _I2C_stop:	
  4491                           ;psect for function _I2C_stop
  4492                           
  4493     04E3                     l1826:	
  4494                           ;incstack = 0
  4495                           ; Regs used in _I2C_stop: []
  4496                           
  4497                           
  4498                           ;Rover_Main_Ver01.c: 150:     SSP2CON2bits.PEN = 1;
  4499     04E3  0023               	movlb	3	; select bank3
  4500     04E4  151B               	bsf	27,2	;volatile
  4501     04E5                     l98:	
  4502                           ;Rover_Main_Ver01.c: 153:     }
  4503                           
  4504                           
  4505                           ;Rover_Main_Ver01.c: 151:     while(SSP2CON2bits.PEN == 1){
  4506     04E5  191B               	btfsc	27,2	;volatile
  4507     04E6  2CE8               	goto	u911
  4508     04E7  2CE9               	goto	u910
  4509     04E8                     u911:
  4510     04E8  2CE5               	goto	l98
  4511     04E9                     u910:
  4512     04E9                     l101:
  4513     04E9  0008               	return
  4514     04EA                     __end_of_I2C_stop:
  4515                           
  4516                           	psect	text27
  4517     04EA                     __ptext27:	
  4518 ;; *************** function _I2C_start *****************
  4519 ;; Defined at:
  4520 ;;		line 170 in file "Rover_Main_Ver01.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		None
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_HAL_I2C_Master_Transmit
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548     04EA                     _I2C_start:	
  4549                           ;psect for function _I2C_start
  4550                           
  4551     04EA                     l1828:	
  4552                           ;incstack = 0
  4553                           ; Regs used in _I2C_start: []
  4554                           
  4555                           
  4556                           ;Rover_Main_Ver01.c: 172:     SSP2CON2bits.SEN = 1;
  4557     04EA  0023               	movlb	3	; select bank3
  4558     04EB  141B               	bsf	27,0	;volatile
  4559     04EC                     l107:	
  4560                           ;Rover_Main_Ver01.c: 176:     }
  4561                           
  4562                           
  4563                           ;Rover_Main_Ver01.c: 174:     while(SSP2CON2bits.SEN == 1){
  4564     04EC  181B               	btfsc	27,0	;volatile
  4565     04ED  2CEF               	goto	u921
  4566     04EE  2CF0               	goto	u920
  4567     04EF                     u921:
  4568     04EF  2CEC               	goto	l107
  4569     04F0                     u920:
  4570     04F0                     l110:
  4571     04F0  0008               	return
  4572     04F1                     __end_of_I2C_start:
  4573                           
  4574                           	psect	intentry
  4575     0004                     __pintentry:	
  4576 ;; *************** function _ISR *****************
  4577 ;; Defined at:
  4578 ;;		line 586 in file "Rover_Main_Ver01.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;Total ram usage:        3 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		Interrupt level 1
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605     0004                     _ISR:
  4606                           
  4607                           ;incstack = 0
  4608     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4609                           
  4610                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4611     0005  3180               	pagesel	$
  4612     0006                     i1l1790:
  4613                           
  4614                           ;Rover_Main_Ver01.c: 588:     if(PIR3bits.RCIF == 1){
  4615     0006  002E               	movlb	14	; select bank14
  4616     0007  1E8F               	btfss	15,5	;volatile
  4617     0008  280A               	goto	u88_21
  4618     0009  280B               	goto	u88_20
  4619     000A                     u88_21:
  4620     000A  2838               	goto	i1l1804
  4621     000B                     u88_20:
  4622     000B                     i1l1792:
  4623                           
  4624                           ;Rover_Main_Ver01.c: 589:         if(UART_Not_Recieved == 2){
  4625     000B  3002               	movlw	2
  4626     000C  0020               	movlb	0	; select bank0
  4627     000D  0668               	xorwf	_UART_Not_Recieved,w
  4628     000E  1D03               	btfss	3,2
  4629     000F  2811               	goto	u89_21
  4630     0010  2812               	goto	u89_20
  4631     0011                     u89_21:
  4632     0011  281F               	goto	i1l1796
  4633     0012                     u89_20:
  4634     0012                     i1l1794:
  4635                           
  4636                           ;Rover_Main_Ver01.c: 590:             frequency = RC1REG << 8;
  4637     0012  0022               	movlb	2	; select bank2
  4638     0013  0819               	movf	25,w	;volatile
  4639     0014  00F0               	movwf	??_ISR
  4640     0015  01F1               	clrf	??_ISR+1
  4641     0016  0870               	movf	??_ISR,w
  4642     0017  00F1               	movwf	??_ISR+1
  4643     0018  01F0               	clrf	??_ISR
  4644     0019  0870               	movf	??_ISR,w
  4645     001A  0020               	movlb	0	; select bank0
  4646     001B  00E6               	movwf	_frequency
  4647     001C  0871               	movf	??_ISR+1,w
  4648     001D  00E7               	movwf	_frequency+1
  4649                           
  4650                           ;Rover_Main_Ver01.c: 591:         }
  4651     001E  2833               	goto	i1l1800
  4652     001F                     i1l1796:
  4653     001F  0368               	decf	_UART_Not_Recieved,w
  4654     0020  1D03               	btfss	3,2
  4655     0021  2823               	goto	u90_21
  4656     0022  2824               	goto	u90_20
  4657     0023                     u90_21:
  4658     0023  2832               	goto	i1l288
  4659     0024                     u90_20:
  4660     0024                     i1l1798:
  4661                           
  4662                           ;Rover_Main_Ver01.c: 593:             frequency = frequency + RC1REG;
  4663     0024  0022               	movlb	2	; select bank2
  4664     0025  0819               	movf	25,w	;volatile
  4665     0026  0020               	movlb	0	; select bank0
  4666     0027  0766               	addwf	_frequency,w
  4667     0028  00F0               	movwf	??_ISR
  4668     0029  0867               	movf	_frequency+1,w
  4669     002A  1803               	skipnc
  4670     002B  0A67               	incf	_frequency+1,w
  4671     002C  00F1               	movwf	??_ISR+1
  4672     002D  0870               	movf	??_ISR,w
  4673     002E  00E6               	movwf	_frequency
  4674     002F  0871               	movf	??_ISR+1,w
  4675     0030  00E7               	movwf	_frequency+1
  4676                           
  4677                           ;Rover_Main_Ver01.c: 594:         }
  4678     0031  2833               	goto	i1l1800
  4679     0032                     i1l288:	
  4680                           ;Rover_Main_Ver01.c: 595:         else{
  4681                           
  4682                           
  4683                           ;Rover_Main_Ver01.c: 596:             __nop();
  4684     0032  0000               	nop
  4685     0033                     i1l1800:
  4686                           
  4687                           ;Rover_Main_Ver01.c: 598:         UART_Not_Recieved--;
  4688     0033  3001               	movlw	1
  4689     0034  0020               	movlb	0	; select bank0
  4690     0035  02E8               	subwf	_UART_Not_Recieved,f
  4691     0036                     i1l1802:
  4692                           
  4693                           ;Rover_Main_Ver01.c: 599:         PIR3bits.RCIF = 0;
  4694     0036  002E               	movlb	14	; select bank14
  4695     0037  128F               	bcf	15,5	;volatile
  4696     0038                     i1l1804:
  4697                           
  4698                           ;Rover_Main_Ver01.c: 601:     PIR3bits.TXIF = 0;
  4699     0038  120F               	bcf	15,4	;volatile
  4700     0039                     i1l290:
  4701     0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4702     003A  0009               	retfie
  4703     003B                     __end_of_ISR:
  4704     0002                     ___latbits      equ	2
  4705     007E                     btemp           set	126	;btemp
  4706     007E                     int$flags       set	126
  4707     007E                     wtemp0          set	126
  4708                           
  4709                           	psect	config
  4710                           
  4711                           ;Config register CONFIG1 @ 0x8007
  4712                           ;	External Oscillator mode selection bits
  4713                           ;	FEXTOSC = OFF, Oscillator not enabled
  4714                           ;	Power-up default value for COSC bits
  4715                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  4716                           ;	Clock Out Enable bit
  4717                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  4718                           ;	Clock Switch Enable bit
  4719                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4720                           ;	Fail-Safe Clock Monitor Enable bit
  4721                           ;	FCMEN = ON, FSCM timer enabled
  4722     8007                     	org	32775
  4723     8007  3F8C               	dw	16268
  4724                           
  4725                           ;Config register CONFIG2 @ 0x8008
  4726                           ;	Master Clear Enable bit
  4727                           ;	MCLRE = ON, MCLR pin is Master Clear function
  4728                           ;	Power-up Timer Enable bit
  4729                           ;	PWRTE = OFF, PWRT disabled
  4730                           ;	Low-Power BOR enable bit
  4731                           ;	LPBOREN = OFF, ULPBOR disabled
  4732                           ;	Brown-out reset enable bits
  4733                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4734                           ;	Brown-out Reset Voltage Selection
  4735                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  4736                           ;	Zero-cross detect disable
  4737                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  4738                           ;	Peripheral Pin Select one-way control
  4739                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  4740                           ;	Stack Overflow/Underflow Reset Enable bit
  4741                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4742                           ;	Background Debugger
  4743                           ;	DEBUG = 0x1, unprogrammed default
  4744     8008                     	org	32776
  4745     8008  3FFF               	dw	16383
  4746                           
  4747                           ;Config register CONFIG3 @ 0x8009
  4748                           ;	WDT Period Select bits
  4749                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4750                           ;	WDT operating mode
  4751                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  4752                           ;	WDT Window Select bits
  4753                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4754                           ;	WDT input clock selector
  4755                           ;	WDTCCS = SC, Software Control
  4756     8009                     	org	32777
  4757     8009  3F9F               	dw	16287
  4758                           
  4759                           ;Config register CONFIG4 @ 0x800A
  4760                           ;	UserNVM self-write protection bits
  4761                           ;	WRT = OFF, Write protection off
  4762                           ;	Scanner Enable bit
  4763                           ;	SCANE = available, Scanner module is available for use
  4764                           ;	Low Voltage Programming Enable bit
  4765                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  4766     800A                     	org	32778
  4767     800A  3FFF               	dw	16383
  4768                           
  4769                           ;Config register CONFIG5 @ 0x800B
  4770                           ;	UserNVM Program memory code protection bit
  4771                           ;	CP = OFF, Program Memory code protection disabled
  4772                           ;	DataNVM code protection bit
  4773                           ;	CPD = OFF, Data EEPROM code protection disabled
  4774     800B                     	org	32779
  4775     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         16
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     22      73
    BANK1            80      0      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    HAL_I2C_Master_Transmit@dataByte	PTR unsigned char  size(1) Largest target is 1
		 -> HAL_Backlight_Off@byte(COMMON[1]), HAL_Backlight_On@byte(COMMON[1]), HAL_Pulse_Enable@byte(COMMON[1]), HAL_Write_Init_Nibble@byte(BANK0[1]), 
		 -> _write_byte@byte(COMMON[1]), 

    HAL_LCD_Print@string	PTR unsigned char  size(1) Largest target is 16
		 -> alienFrequencyTask@freq_char(BANK0[4]), FFT_Home1(BANK0[16]), FFT_Home2(BANK1[16]), Rover_Team(BANK0[16]), 


Critical Paths under _main in COMMON

    _initinit->_HAL_Write_Init_Nibble
    _HAL_Set_Entry_Mode->_HAL_Write_Command
    _HAL_Display_On->_HAL_Write_Command
    _HAL_Write_Init_Nibble->_HAL_Pulse_Enable
    _alienFrequencyTask->___lwdiv
    _HAL_Set_Cursor->_HAL_Write_Command
    _HAL_LCD_Print->_HAL_Write_Data
    _HAL_Write_Data->__write_byte
    _HAL_Clear->_HAL_Write_Command
    _HAL_Write_Command->__write_byte
    __write_byte->_HAL_Pulse_Enable
    _HAL_Pulse_Enable->_HAL_I2C_Master_Transmit
    _HAL_I2C_Master_Transmit->_I2C_write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_alienFrequencyTask
    _initialize_all->_initinit
    _init_LCD->_HAL_Set_Entry_Mode
    _HAL_Set_Entry_Mode->_HAL_Write_Command
    _HAL_Display_On->_HAL_Write_Command
    _alienFrequencyTask->_HAL_LCD_Print
    _alienFrequencyTask->_HAL_Set_Cursor
    _HAL_Set_Cursor->_HAL_Write_Command
    _HAL_LCD_Print->_HAL_Write_Data
    _HAL_Clear->_HAL_Write_Command

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10800
                                             20 BANK0      2     2      0
                      _HAL_LCD_Print
                 _alienFrequencyTask
                     _initialize_all
 ---------------------------------------------------------------------------------
 (1) _initialize_all                                       0     0      0    5851
                        _HAL_LED_OFF
                          _configI2C
                          _configISR
                         _configPins
                        _configUART1
                           _init_LCD
                           _initinit
 ---------------------------------------------------------------------------------
 (2) _initinit                                             1     1      0    3251
                                              7 BANK0      1     1      0
              _HAL_Write_Init_Nibble
                           _init_LCD
 ---------------------------------------------------------------------------------
 (3) _init_LCD                                             0     0      0    2574
                          _HAL_Clear
                     _HAL_Display_On
                 _HAL_Set_Entry_Mode
 ---------------------------------------------------------------------------------
 (4) _HAL_Set_Entry_Mode                                   6     2      4     930
                                              1 BANK0      6     2      4
                  _HAL_Write_Command
 ---------------------------------------------------------------------------------
 (4) _HAL_Display_On                                       0     0      0     822
                  _HAL_Write_Command
 ---------------------------------------------------------------------------------
 (3) _HAL_Write_Init_Nibble                                4     4      0     677
                                              8 COMMON     2     2      0
                                              0 BANK0      2     2      0
            _HAL_I2C_Master_Transmit
                   _HAL_Pulse_Enable
 ---------------------------------------------------------------------------------
 (2) _configUART1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configPins                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HAL_LED_OFF                                          2     0      2      26
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _alienFrequencyTask                                  13    13      0    4017
                                              7 BANK0     13    13      0
                          _HAL_Clear
                      _HAL_LCD_Print
                     _HAL_Set_Cursor
                            ___awdiv
                            ___lwdiv
                            ___lwmod
                          _intToChar
 ---------------------------------------------------------------------------------
 (2) _intToChar                                            1     1      0      29
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     161
                                              3 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     164
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     451
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _HAL_Set_Cursor                                       6     2      4     961
                                              1 BANK0      6     2      4
                  _HAL_Write_Command
 ---------------------------------------------------------------------------------
 (2) _HAL_LCD_Print                                        6     3      3     932
                                              1 BANK0      6     3      3
                     _HAL_Write_Data
 ---------------------------------------------------------------------------------
 (3) _HAL_Write_Data                                       2     2      0     775
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                        __write_byte
 ---------------------------------------------------------------------------------
 (4) _HAL_Clear                                            1     1      0     822
                                              1 BANK0      1     1      0
                  _HAL_Write_Command
 ---------------------------------------------------------------------------------
 (5) _HAL_Write_Command                                    2     2      0     822
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                        __write_byte
 ---------------------------------------------------------------------------------
 (6) __write_byte                                          1     1      0     681
                                              8 COMMON     1     1      0
            _HAL_I2C_Master_Transmit
                   _HAL_Pulse_Enable
 ---------------------------------------------------------------------------------
 (7) _HAL_Pulse_Enable                                     1     1      0     367
                                              7 COMMON     1     1      0
            _HAL_I2C_Master_Transmit
 ---------------------------------------------------------------------------------
 (8) _HAL_I2C_Master_Transmit                              3     1      2     161
                                              4 COMMON     3     1      2
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (9) _I2C_write                                            1     1      0      47
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HAL_LCD_Print
     _HAL_Write_Data
       __write_byte
         _HAL_I2C_Master_Transmit
           _I2C_start
           _I2C_stop
           _I2C_write
         _HAL_Pulse_Enable
           _HAL_I2C_Master_Transmit
   _alienFrequencyTask
     _HAL_Clear
       _HAL_Write_Command
         __write_byte
     _HAL_LCD_Print
     _HAL_Set_Cursor
       _HAL_Write_Command
     ___awdiv
     ___lwdiv
     ___lwmod
     _intToChar
   _initialize_all
     _HAL_LED_OFF
     _configI2C
     _configISR
     _configPins
     _configUART1
     _init_LCD
       _HAL_Clear
       _HAL_Display_On
         _HAL_Write_Command
       _HAL_Set_Entry_Mode
         _HAL_Write_Command
     _initinit
       _HAL_Write_Init_Nibble
         _HAL_I2C_Master_Transmit
         _HAL_Pulse_Enable
       _init_LCD

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     10      11     78.6%
BANK0               80     22      73     91.2%
BANK1               80      0      16     20.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     100      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Mar 22 04:13:06 2025

                                      l95 0506                                        l89 0496  
                                      l98 04E5                              ___awdiv@sign 0045  
                        ??_HAL_Set_Cursor 007A                                        _bf 007A  
                     alienFrequencyTask@i 0056                                       l101 04E9  
                                     l110 04F0                                       l104 04E2  
                                     l202 0484                                       l107 04EC  
                                     l115 04B2                                       l116 04B1  
                                     l140 0431                                       l220 03DC  
                                     l125 0472                                       l221 03DF  
                                     l205 023D                                       l118 04BA  
                                     l150 03D7                                       l222 03E2  
                                     l143 04A8                                       l231 02E9  
                                     l223 03F8                                       l162 04D8  
                                     l218 03D9                                       l226 0277  
                                     l146 03B5                                       l260 014F  
                                     l253 00DA                                       l159 045F  
                                     l193 0415                                       l177 0501  
                                     l185 0449                                       l275 0365  
                                     l269 01FC                                       l199 0348  
                                     l722 02B1                                       l732 031B  
                                     l595 01AB                                       _LCD 005A  
                                     _ISR 0004                                       u710 028E  
                                     u711 028D                                       u705 0284  
                                     u730 029D                                       u810 0317  
                                     u731 029C                                       u811 0316  
                                     u725 028F                                       u805 030D  
                                     u910 04E9                                       u750 02AD  
                                     u911 04E8                                       u751 02AC  
                                     u735 0299                                       u920 04F0  
                                     u760 02F0                                       u921 04EF  
                                     u745 02A3                                       u761 02EF  
                                     u930 04B7                                       u690 0280  
                                     u931 04B6                                       u691 027F  
                                     u780 02FE                                       u781 02FD  
                                     u950 03D0                                       u790 0308  
                                     u951 03CF                                       u791 0307  
                                     u775 02F4                                       u960 043D  
                                     u945 03C1                                       u961 043C  
                                     u970 0444                                       u795 0304  
                                     u971 0443                                       u985 0399  
                                     u995 03A0                                       wreg 0009  
               ??_HAL_I2C_Master_Transmit 0076                              ?__write_byte 0070  
                            _BAUD1CONbits 011F                                      ?_ISR 0070  
                                    l2000 00C8                                      l2010 00FA  
                                    l2002 00D1                                      l2020 0137  
                                    l2012 010B                                      l2004 00D6  
                                    l2022 0140                                      l2014 010D  
                                    l2030 01B2                                      l2024 014C  
                                    l2008 00E8                                      l2120 03EA  
                                    l2040 01C6                                      l2032 01B7  
                                    l2018 011E                                      l2050 01D7  
                                    l2042 01CA                                      l2034 01BC  
                                    l2026 01AC                                      l1500 03D8  
                                    l2060 01EE                                      l2052 01DA  
                                    l2044 01CE                                      l2036 01BE  
                                    l2028 01AE                                      l1510 023E  
                                    l2062 01F5                                      l2054 01DD  
                                    l2046 01D1                                      l2038 01C2  
                                    l1520 02B3                                      l1504 03E5  
                                    l1512 0267                                      l1440 048F  
                                    l2056 01E0                                      l2048 01D4  
                                    l1530 02B8                                      l1522 02B4  
                                    l1514 0270                                      l1450 0494  
                                    l1442 0490                                      l1434 0485  
                                    l2058 01E7                                      l2090 0349  
                                    l1620 0283                                      l1460 04E1  
                                    l1516 0273                                      l1452 0495  
                                    l1444 0491                                      l1436 048C  
                                    l2092 034C                                      l1630 02A1  
                                    l1622 0288                                      l1614 0278  
                                    l1550 02C2                                      l1542 02BE  
                                    l1534 02BA                                      l1526 02B6  
                                    l1454 0502                                      l1518 0275  
                                    l1446 0492                                      l1438 048D  
                                    l2094 034E                                      l1632 02A2  
                                    l1624 028A                                      l1616 027A  
                                    l1640 02EA                                      l1456 04D9  
                                    l1448 0493                                      l2096 035B  
                                    l1634 02A7                                      l1626 028E  
                                    l1618 0280                                      l1650 02FE  
                                    l1642 02F0                                      l1554 02C4  
                                    l1546 02C0                                      l1538 02BC  
                                    l1458 04DD                                      l2098 036A  
                                    l1900 0410                                      l1628 029D  
                                    l1636 02AD                                      l1652 0308  
                                    l1644 02F3                                      l1564 02C8  
                                    l1830 04AA                                      l1910 0335  
                                    l1902 031C                                      l1654 030C  
                                    l1646 02F8                                      l1566 02E8  
                                    l1558 02C6                                      l1832 04AD  
                                    l1840 0468                                      l1904 0320  
                                    l1912 033A                                      l1656 0311  
                                    l1648 02FA                                      l1920 0217  
                                    l1826 04E3                                      l1834 04B7  
                                    l1842 046F                                      l1850 0498  
                                    l1906 0328                                      l1930 0152  
                                    l1658 0317                                      l1922 0220  
                                    l1914 01FD                                      l1828 04EA  
                                    l1836 0461                                      l1844 0417  
                                    l1852 049C                                      l1860 03D0  
                                    l1908 032C                                      l1940 0166  
                                    l1932 0156                                      l1924 022D  
                                    l1916 0206                                      l1838 0464  
                                    l1846 041C                                      l1854 04A4  
                                    l1862 04CB                                      l1950 0178  
                                    l1942 0168                                      l1934 015B  
                                    l1870 0437                                      l1926 0231  
                                    l1918 020A                                      l1848 0424  
                                    l1856 03B8                                      l1864 04CF  
                                    l1960 0192                                      l1952 017A  
                                    l1944 016A                                      l1936 015D  
                                    l1928 0150                                      l1880 0396  
                                    l1872 043D                                      l1858 03C9  
                                    l1890 03F9                                      l1962 0197  
                                    l1954 017E                                      l1946 0170  
                                    l1938 0161                                      l1882 03A8  
                                    l1866 04FD                                      l1874 043E  
                                    l1892 0400                                      l1956 018D  
                                    l1948 0173                                      l1964 019D  
                                    l1980 009E                                      l1972 0062  
                                    l1884 03B0                                      l1876 0444  
                                    l1868 0432                                      l1886 044C  
                                    l1894 0404                                      l1966 01A2  
                                    l1958 0191                                      l1990 00AB  
                                    l1982 00A0                                      l1974 0084  
                                    l1878 0445                                      l1896 0408  
                                    l1968 01A7                                      l1992 00AB  
                                    l1984 00A2                                      l1976 0090  
                                    l1888 0473                                      l1898 040C  
                                    l1994 00B5                                      l1986 00A7  
                                    l1978 0093                                      l1996 00BA  
                                    l1988 00A8                                      l1998 00C3  
                                    _BRGH 08F2                                      u1010 0404  
                                    u1011 0403                                      u1020 040C  
                                    u1100 018D                                      u1005 0456  
                                    u1021 040B                                      u1101 018C  
                                    u1030 0348                                      u1031 0347  
                                    u1120 019D                                      u1040 0156  
                                    u1121 019C                                      u1105 0189  
                                    u1041 0155                                      u1130 01A2  
                                    u1050 0161                                      u1035 0344  
                                    u1131 01A1                                      u1115 0193  
                                    u1051 0160                                      u1060 0170  
                                    u1140 00A7                                      u1061 016F  
                                    u1141 00A6                                      u1150 00B5  
                                    u1151 00B4                                      u1207 0354  
                                    u1080 017E                                      u1160 00C3  
                                    u1081 017D                                      u1161 00C2  
                                    u1217 0201                                      u1170 00D1  
                                    u1307 04D3                                      u1075 0174  
                                    u1171 00D0                                      u1227 020E  
                                    u1180 00E7                                      u1317 03D3  
                                    u1181 00E6                                      u1237 021B  
                                    u1190 036A                                      u1095 017F  
                                    u1247 0228                                      u1191 0369  
                                    u1185 00E3                                      u1257 0235  
                                    u1267 008A                                      u1277 0099  
                                    u1287 0146                                      u1297 0330  
                        ??_initialize_all 007A                                      _main 0349  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 003B  
                        __end_of_I2C_stop 04EA                 HAL_Write_Init_Nibble@byte 0045  
                                   ??_ISR 0070                             I2C_write@data 0073  
                                   ?_main 0070                           __end_of___awdiv 01AC  
                                   _BRG16 08FB                           ___awdiv@divisor 0073  
         HAL_I2C_Master_Transmit@dataByte 0074                           __end_of___lwdiv 02B2  
                         __end_of___lwmod 031C                                     i1l290 0039  
                                   i1l288 0032                           ___awdiv@counter 0044  
                                   u90_20 0024                                     u90_21 0023  
                                   u88_20 000B                                     u88_21 000A  
                                   u89_20 0012                                     u89_21 0011  
                        ??_HAL_Write_Data 0079                                     status 0003  
                       __end_of_I2C_start 04F1                                     wtemp0 007E  
                       __end_of_I2C_write 04BB                           __initialization 003D  
                            __end_of_main 0370                        _HAL_Set_Entry_Mode 0432  
                       __end_of_HAL_Clear 04D9               alienFrequencyTask@freq_char 004D  
                                  ??_main 0058                       ?_HAL_Set_Entry_Mode 0045  
                        ___awdiv@dividend 0075                                    _RC1REG 0119  
                                  _RC3PPS 0F23                                    _RC4PPS 0F24  
                                  _RC5PPS 0F25                                    i1l1800 0033  
                                  i1l1802 0036                                    i1l1804 0038  
                                  i1l1790 0006                                    i1l1792 000B  
                                  i1l1794 0012                                    i1l1796 001F  
                                  i1l1798 0024                            HAL_LED_OFF@LED 0073  
                      _alienFrequencyTask 0062                      ??_HAL_Set_Entry_Mode 007A  
                   __end_of_HAL_LCD_Print 0349                       ?_alienFrequencyTask 0070  
                               ??___awdiv 0077                            HAL_LCD_Print@i 0049  
                               ??___lwdiv 0077                          __end_of_init_LCD 0485  
                               ??___lwmod 0077                          __end_of_initinit 023E  
                        ___awdiv@quotient 0046                      ??_alienFrequencyTask 004B  
                               ?_I2C_stop 0070                                _Rover_Team 0034  
                       ?_HAL_Pulse_Enable 0070                   __end_of__initialization 005E  
                   _HAL_Write_Init_Nibble 0394                        ??_HAL_Pulse_Enable 0077  
                          __pcstackCOMMON 0070                              __pidataBANK0 0370  
                            __pidataBANK1 04BB               HAL_Write_Init_Nibble@nibble 0044  
                              ??_I2C_stop 0073              alienFrequencyTask@freq_digit 0051  
                              __pbssBANK0 005A                                __pmaintext 0349  
                        intToChar@integer 0073                                __pintentry 0004  
                          _SSP2DATPPSbits 0EC9                                   _SP1BRGH 011C  
                                 _SP1BRGL 011B                                _configPins 023E  
                          _SSP2CLKPPSbits 0EC8                                   _SSP2BUF 0196  
                               ?_init_LCD 0070                    ?_HAL_Write_Init_Nibble 0070  
                               ?_initinit 0070                                   _Loading 0020  
                       __end_of_configI2C 04E3                                 _I2C_start 04EA  
                               _I2C_write 04A9                         __end_of_configISR 0507  
                                 ___awdiv 0150                                   ___lwdiv 0278  
                                 ___lwmod 02EA                  ?_HAL_I2C_Master_Transmit 0074  
                   HAL_Set_Entry_Mode@inc 0045                                   __ptext1 01AC  
                                 __ptext2 01FD                                   __ptext3 0473  
                                 __ptext4 0432                                   __ptext5 04FD  
                                 __ptext6 0394                                   __ptext7 0485  
                                 __ptext8 023E                                   __ptext9 0502  
                       __end_of_intToChar 02EA                                 _HAL_Clear 04CB  
                    HAL_Pulse_Enable@byte 0077                                 _FFT_Home1 0024  
                               _FFT_Home2 00A0                                   clrloop0 04F8  
                       _UART_Not_Recieved 0068                      end_of_initialization 005E  
                              ??_init_LCD 007A                                   init_ram 04F1  
                                 initloop 04F2                                ??_initinit 004B  
                           ??_HAL_LED_OFF 0075                                ?_I2C_start 0070  
                              ?_I2C_write 0070                         HAL_Set_Cursor@col 0045  
                               _PORTAbits 000C                                ?_HAL_Clear 0070  
                        __write_byte@byte 0078                 alienFrequencyTask@counter 0055  
                             ?_configPins 0070                                 _TRISAbits 0011  
                               _TRISBbits 0012                                 _TRISCbits 0013  
                           ??_configUART1 0073           __end_of_HAL_I2C_Master_Transmit 0473  
                     __end_of_HAL_LED_OFF 03F9                            _HAL_Display_On 04FD  
                           ??__write_byte 0078                       start_initialization 003D  
                             __end_of_ISR 003B                               ??_I2C_start 0073  
                             ??_I2C_write 0073                       __end_of_configUART1 0497  
                             __pdataBANK0 0020                               __pdataBANK1 00A0  
                  __end_of_HAL_Display_On 0502                               ??_HAL_Clear 0045  
                             __pbssCOMMON 007A                                 ___latbits 0002  
                           __pcstackBANK0 0044                            _HAL_Set_Cursor 03F9  
                 ??_HAL_Write_Init_Nibble 0078                       __end_of__write_byte 04A9  
                        ___lwdiv@dividend 0075                               _HAL_LED_OFF 03D8  
                     HAL_LCD_Print@string 0045                         HAL_LCD_Print@size 0046  
                           _HAL_LCD_Print 031C                            _initialize_all 01AC  
                                ?___awdiv 0073                   HAL_Set_Entry_Mode@shift 0047  
                                ?___lwdiv 0073                                  ?___lwmod 0073  
                               _configI2C 04D9                                 _configISR 0502  
                         ?_HAL_Display_On 0070                    __end_of_HAL_Set_Cursor 0416  
                                _I2C_stop 04E3                                 _intToChar 02B2  
                               _frequency 0066                          ___lwdiv@quotient 0077  
                             _configUART1 0485                                  _LATAbits 0016  
                                _LATBbits 0017                                 clear_ram0 04F7  
                                _PIE3bits 0719                            _HAL_Write_Data 044A  
                  __end_of_initialize_all 01FD                            ?_HAL_LCD_Print 0045  
                                _PIR3bits 070F                                ?_configI2C 0070  
                        _HAL_Pulse_Enable 0416                                ?_configISR 0070  
                    HAL_Write_Command@cmd 0044                           ?_HAL_Set_Cursor 0045  
                            ??_configPins 0073                               __write_byte 0497  
                              ?_intToChar 0070                    __end_of_HAL_Write_Data 0460  
                         ?_initialize_all 0070                        __end_of_configPins 0278  
                              _ANSELAbits 0F38                                _ANSELBbits 0F43  
                              _ANSELCbits 0F4E                         _HAL_Write_Command 03B6  
                      ?_HAL_Write_Command 0070                           ___lwdiv@divisor 0073  
                         ___lwdiv@counter 0079                                  __ptext10 04D9  
                                __ptext11 03D8                                  __ptext20 04CB  
                                __ptext12 0062                                  __ptext21 03B6  
                                __ptext13 02B2                                  __ptext22 0497  
                                __ptext14 02EA                                  __ptext23 0416  
                                __ptext15 0278                                  __ptext24 0460  
                                __ptext16 0150                                  __ptext25 04A9  
                                __ptext17 03F9                                  __ptext26 04E3  
                                __ptext18 031C                                  __ptext27 04EA  
                                __ptext19 044A                              _SSP2CON1bits 019A  
                            _SSP2CON2bits 019B                               _OSCCON1bits 088D  
                             _OSCCON3bits 088F                       ??_HAL_Write_Command 0079  
                                _init_LCD 0473                __end_of_HAL_Set_Entry_Mode 044A  
                         ?_HAL_Write_Data 0070                                  _initinit 01FD  
                         ??_HAL_LCD_Print 0048                                _RC1STAbits 011D  
                                int$flags 007E                               ??_configI2C 0073  
                             ??_configISR 0073                 __end_of_HAL_Write_Command 03D8  
                            _SSP2STATbits 0199                               _OSCSTATbits 0890  
              __end_of_alienFrequencyTask 0150              HAL_Set_Entry_Mode@entry_mode 0049  
HAL_I2C_Master_Transmit@numberOfDataBytes 0075                                _INTCONbits 000B  
                             ??_intToChar 0073                        HAL_Write_Data@data 0044  
                 _HAL_I2C_Master_Transmit 0460                                  intlevel1 0000  
           __end_of_HAL_Write_Init_Nibble 03B6                               _SSP2ADDbits 0197  
                        ___lwmod@dividend 0075       HAL_I2C_Master_Transmit@slaveAddress 0076  
                             _PPSLOCKbits 0E8F                              ?_HAL_LED_OFF 0073  
                        ??_HAL_Display_On 007A                                _OSCFRQbits 0893  
                      HAL_Set_Cursor@addr 0049                        HAL_Set_Cursor@line 0047  
                         ___lwmod@divisor 0073                           ___lwmod@counter 0077  
                              _TX1STAbits 011E                  __end_of_HAL_Pulse_Enable 0432  
                            ?_configUART1 0070  
