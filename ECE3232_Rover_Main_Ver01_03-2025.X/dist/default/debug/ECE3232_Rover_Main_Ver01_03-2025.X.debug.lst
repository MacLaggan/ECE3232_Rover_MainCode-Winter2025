

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Mar 22 02:57:47 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	clrtext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,space=0,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Generated 11/01/2024 GMT
    48                           ; 
    49                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F18855 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0008                     bsr             equ	8
    82     0005                     fsr0h           equ	5
    83     0004                     fsr0l           equ	4
    84     0007                     fsr1h           equ	7
    85     0006                     fsr1l           equ	6
    86     0000                     indf            equ	0
    87     0000                     indf0           equ	0
    88     0001                     indf1           equ	1
    89     000B                     intcon          equ	11
    90     0002                     pc              equ	2
    91     0002                     pcl             equ	2
    92     000A                     pclath          equ	10
    93     0003                     status          equ	3
    94     0009                     wreg            equ	9
    95     0000                     INDF0           equ	0	;# 
    96     0001                     INDF1           equ	1	;# 
    97     0002                     PCL             equ	2	;# 
    98     0003                     STATUS          equ	3	;# 
    99     0004                     FSR0L           equ	4	;# 
   100     0005                     FSR0H           equ	5	;# 
   101     0006                     FSR1L           equ	6	;# 
   102     0007                     FSR1H           equ	7	;# 
   103     0008                     BSR             equ	8	;# 
   104     0009                     WREG            equ	9	;# 
   105     000A                     PCLATH          equ	10	;# 
   106     000B                     INTCON          equ	11	;# 
   107     000C                     PORTA           equ	12	;# 
   108     000D                     PORTB           equ	13	;# 
   109     000E                     PORTC           equ	14	;# 
   110     0010                     PORTE           equ	16	;# 
   111     0011                     TRISA           equ	17	;# 
   112     0012                     TRISB           equ	18	;# 
   113     0013                     TRISC           equ	19	;# 
   114     0016                     LATA            equ	22	;# 
   115     0017                     LATB            equ	23	;# 
   116     0018                     LATC            equ	24	;# 
   117     001C                     TMR0L           equ	28	;# 
   118     001C                     TMR0            equ	28	;# 
   119     001D                     TMR0H           equ	29	;# 
   120     001D                     PR0             equ	29	;# 
   121     001E                     T0CON0          equ	30	;# 
   122     001F                     T0CON1          equ	31	;# 
   123     008C                     ADRES           equ	140	;# 
   124     008C                     ADRESL          equ	140	;# 
   125     008D                     ADRESH          equ	141	;# 
   126     008E                     ADPREV          equ	142	;# 
   127     008E                     ADPREVL         equ	142	;# 
   128     008F                     ADPREVH         equ	143	;# 
   129     0090                     ADACC           equ	144	;# 
   130     0090                     ADACCL          equ	144	;# 
   131     0091                     ADACCH          equ	145	;# 
   132     0093                     ADCON0          equ	147	;# 
   133     0094                     ADCON1          equ	148	;# 
   134     0095                     ADCON2          equ	149	;# 
   135     0096                     ADCON3          equ	150	;# 
   136     0097                     ADSTAT          equ	151	;# 
   137     0098                     ADCLK           equ	152	;# 
   138     0099                     ADACT           equ	153	;# 
   139     009A                     ADREF           equ	154	;# 
   140     009B                     ADCAP           equ	155	;# 
   141     009C                     ADPRE           equ	156	;# 
   142     009D                     ADACQ           equ	157	;# 
   143     009E                     ADPCH           equ	158	;# 
   144     010C                     ADCNT           equ	268	;# 
   145     010D                     ADRPT           equ	269	;# 
   146     010E                     ADLTH           equ	270	;# 
   147     010E                     ADLTHL          equ	270	;# 
   148     010F                     ADLTHH          equ	271	;# 
   149     0110                     ADUTH           equ	272	;# 
   150     0110                     ADUTHL          equ	272	;# 
   151     0111                     ADUTHH          equ	273	;# 
   152     0112                     ADSTPT          equ	274	;# 
   153     0112                     ADSTPTL         equ	274	;# 
   154     0113                     ADSTPTH         equ	275	;# 
   155     0114                     ADFLTR          equ	276	;# 
   156     0114                     ADFLTRL         equ	276	;# 
   157     0115                     ADFLTRH         equ	277	;# 
   158     0116                     ADERR           equ	278	;# 
   159     0116                     ADERRL          equ	278	;# 
   160     0117                     ADERRH          equ	279	;# 
   161     0119                     RC1REG          equ	281	;# 
   162     0119                     RCREG           equ	281	;# 
   163     0119                     RCREG1          equ	281	;# 
   164     011A                     TX1REG          equ	282	;# 
   165     011A                     TXREG1          equ	282	;# 
   166     011A                     TXREG           equ	282	;# 
   167     011B                     SP1BRG          equ	283	;# 
   168     011B                     SPBRG           equ	283	;# 
   169     011B                     SP1BRGL         equ	283	;# 
   170     011B                     SPBRG1          equ	283	;# 
   171     011B                     SPBRGL          equ	283	;# 
   172     011C                     SP1BRGH         equ	284	;# 
   173     011C                     SPBRGH          equ	284	;# 
   174     011C                     SPBRGH1         equ	284	;# 
   175     011D                     RC1STA          equ	285	;# 
   176     011D                     RCSTA1          equ	285	;# 
   177     011D                     RCSTA           equ	285	;# 
   178     011E                     TX1STA          equ	286	;# 
   179     011E                     TXSTA1          equ	286	;# 
   180     011E                     TXSTA           equ	286	;# 
   181     011F                     BAUD1CON        equ	287	;# 
   182     011F                     BAUDCON1        equ	287	;# 
   183     011F                     BAUDCTL1        equ	287	;# 
   184     011F                     BAUDCON         equ	287	;# 
   185     011F                     BAUDCTL         equ	287	;# 
   186     018C                     SSP1BUF         equ	396	;# 
   187     018D                     SSP1ADD         equ	397	;# 
   188     018E                     SSP1MSK         equ	398	;# 
   189     018F                     SSP1STAT        equ	399	;# 
   190     0190                     SSP1CON1        equ	400	;# 
   191     0191                     SSP1CON2        equ	401	;# 
   192     0192                     SSP1CON3        equ	402	;# 
   193     0196                     SSP2BUF         equ	406	;# 
   194     0197                     SSP2ADD         equ	407	;# 
   195     0198                     SSP2MSK         equ	408	;# 
   196     0199                     SSP2STAT        equ	409	;# 
   197     019A                     SSP2CON1        equ	410	;# 
   198     019B                     SSP2CON2        equ	411	;# 
   199     019C                     SSP2CON3        equ	412	;# 
   200     020C                     TMR1            equ	524	;# 
   201     020C                     TMR1L           equ	524	;# 
   202     020D                     TMR1H           equ	525	;# 
   203     020E                     T1CON           equ	526	;# 
   204     020F                     T1GCON          equ	527	;# 
   205     020F                     PR1             equ	527	;# 
   206     0210                     T1GATE          equ	528	;# 
   207     0210                     TMR1GATE        equ	528	;# 
   208     0211                     T1CLK           equ	529	;# 
   209     0211                     TMR1CLK         equ	529	;# 
   210     0212                     TMR3            equ	530	;# 
   211     0212                     TMR3L           equ	530	;# 
   212     0213                     TMR3H           equ	531	;# 
   213     0214                     T3CON           equ	532	;# 
   214     0215                     T3GCON          equ	533	;# 
   215     0215                     PR3             equ	533	;# 
   216     0216                     T3GATE          equ	534	;# 
   217     0216                     TMR3GATE        equ	534	;# 
   218     0217                     T3CLK           equ	535	;# 
   219     0217                     TMR3CLK         equ	535	;# 
   220     0218                     TMR5            equ	536	;# 
   221     0218                     TMR5L           equ	536	;# 
   222     0219                     TMR5H           equ	537	;# 
   223     021A                     T5CON           equ	538	;# 
   224     021B                     T5GCON          equ	539	;# 
   225     021B                     PR5             equ	539	;# 
   226     021C                     T5GATE          equ	540	;# 
   227     021C                     TMR5GATE        equ	540	;# 
   228     021D                     T5CLK           equ	541	;# 
   229     021D                     TMR5CLK         equ	541	;# 
   230     021E                     CCPTMRS0        equ	542	;# 
   231     021F                     CCPTMRS1        equ	543	;# 
   232     028C                     T2TMR           equ	652	;# 
   233     028C                     TMR2            equ	652	;# 
   234     028D                     T2PR            equ	653	;# 
   235     028D                     PR2             equ	653	;# 
   236     028E                     T2CON           equ	654	;# 
   237     028F                     T2HLT           equ	655	;# 
   238     0290                     T2CLKCON        equ	656	;# 
   239     0290                     T2CLK           equ	656	;# 
   240     0291                     T2RST           equ	657	;# 
   241     0292                     T4TMR           equ	658	;# 
   242     0292                     TMR4            equ	658	;# 
   243     0293                     T4PR            equ	659	;# 
   244     0293                     PR4             equ	659	;# 
   245     0294                     T4CON           equ	660	;# 
   246     0295                     T4HLT           equ	661	;# 
   247     0296                     T4CLKCON        equ	662	;# 
   248     0296                     T4CLK           equ	662	;# 
   249     0297                     T4RST           equ	663	;# 
   250     0298                     T6TMR           equ	664	;# 
   251     0298                     TMR6            equ	664	;# 
   252     0299                     T6PR            equ	665	;# 
   253     0299                     PR6             equ	665	;# 
   254     029A                     T6CON           equ	666	;# 
   255     029B                     T6HLT           equ	667	;# 
   256     029C                     T6CLKCON        equ	668	;# 
   257     029C                     T6CLK           equ	668	;# 
   258     029D                     T6RST           equ	669	;# 
   259     030C                     CCPR1           equ	780	;# 
   260     030C                     CCPR1L          equ	780	;# 
   261     030D                     CCPR1H          equ	781	;# 
   262     030E                     CCP1CON         equ	782	;# 
   263     030F                     CCP1CAP         equ	783	;# 
   264     0310                     CCPR2           equ	784	;# 
   265     0310                     CCPR2L          equ	784	;# 
   266     0311                     CCPR2H          equ	785	;# 
   267     0312                     CCP2CON         equ	786	;# 
   268     0313                     CCP2CAP         equ	787	;# 
   269     0314                     CCPR3           equ	788	;# 
   270     0314                     CCPR3L          equ	788	;# 
   271     0315                     CCPR3H          equ	789	;# 
   272     0316                     CCP3CON         equ	790	;# 
   273     0317                     CCP3CAP         equ	791	;# 
   274     0318                     CCPR4           equ	792	;# 
   275     0318                     CCPR4L          equ	792	;# 
   276     0319                     CCPR4H          equ	793	;# 
   277     031A                     CCP4CON         equ	794	;# 
   278     031B                     CCP4CAP         equ	795	;# 
   279     031C                     CCPR5           equ	796	;# 
   280     031C                     CCPR5L          equ	796	;# 
   281     031D                     CCPR5H          equ	797	;# 
   282     031E                     CCP5CON         equ	798	;# 
   283     031F                     CCP5CAP         equ	799	;# 
   284     038C                     PWM6DC          equ	908	;# 
   285     038C                     PWM6DCL         equ	908	;# 
   286     038D                     PWM6DCH         equ	909	;# 
   287     038E                     PWM6CON         equ	910	;# 
   288     0390                     PWM7DC          equ	912	;# 
   289     0390                     PWM7DCL         equ	912	;# 
   290     0391                     PWM7DCH         equ	913	;# 
   291     0392                     PWM7CON         equ	914	;# 
   292     040C                     SCANLADRL       equ	1036	;# 
   293     040D                     SCANLADRH       equ	1037	;# 
   294     040E                     SCANHADRL       equ	1038	;# 
   295     040F                     SCANHADRH       equ	1039	;# 
   296     0410                     SCANCON0        equ	1040	;# 
   297     0411                     SCANTRIG        equ	1041	;# 
   298     0416                     CRCDATA         equ	1046	;# 
   299     0416                     CRCDATL         equ	1046	;# 
   300     0417                     CRCDATH         equ	1047	;# 
   301     0418                     CRCACC          equ	1048	;# 
   302     0418                     CRCACCL         equ	1048	;# 
   303     0419                     CRCACCH         equ	1049	;# 
   304     041A                     CRCSHFT         equ	1050	;# 
   305     041A                     CRCSHIFTL       equ	1050	;# 
   306     041B                     CRCSHIFTH       equ	1051	;# 
   307     041C                     CRCXOR          equ	1052	;# 
   308     041C                     CRCXORL         equ	1052	;# 
   309     041D                     CRCXORH         equ	1053	;# 
   310     041E                     CRCCON0         equ	1054	;# 
   311     041F                     CRCCON1         equ	1055	;# 
   312     048C                     SMT1TMR         equ	1164	;# 
   313     048C                     SMT1TMRL        equ	1164	;# 
   314     048D                     SMT1TMRH        equ	1165	;# 
   315     048E                     SMT1TMRU        equ	1166	;# 
   316     048F                     SMT1CPR         equ	1167	;# 
   317     048F                     SMT1CPRL        equ	1167	;# 
   318     0490                     SMT1CPRH        equ	1168	;# 
   319     0491                     SMT1CPRU        equ	1169	;# 
   320     0492                     SMT1CPW         equ	1170	;# 
   321     0492                     SMT1CPWL        equ	1170	;# 
   322     0493                     SMT1CPWH        equ	1171	;# 
   323     0494                     SMT1CPWU        equ	1172	;# 
   324     0495                     SMT1PR          equ	1173	;# 
   325     0495                     SMT1PRL         equ	1173	;# 
   326     0496                     SMT1PRH         equ	1174	;# 
   327     0497                     SMT1PRU         equ	1175	;# 
   328     0498                     SMT1CON0        equ	1176	;# 
   329     0499                     SMT1CON1        equ	1177	;# 
   330     049A                     SMT1STAT        equ	1178	;# 
   331     049B                     SMT1CLK         equ	1179	;# 
   332     049C                     SMT1SIG         equ	1180	;# 
   333     049D                     SMT1WIN         equ	1181	;# 
   334     050C                     SMT2TMR         equ	1292	;# 
   335     050C                     SMT2TMRL        equ	1292	;# 
   336     050D                     SMT2TMRH        equ	1293	;# 
   337     050E                     SMT2TMRU        equ	1294	;# 
   338     050F                     SMT2CPR         equ	1295	;# 
   339     050F                     SMT2CPRL        equ	1295	;# 
   340     0510                     SMT2CPRH        equ	1296	;# 
   341     0511                     SMT2CPRU        equ	1297	;# 
   342     0512                     SMT2CPW         equ	1298	;# 
   343     0512                     SMT2CPWL        equ	1298	;# 
   344     0513                     SMT2CPWH        equ	1299	;# 
   345     0514                     SMT2CPWU        equ	1300	;# 
   346     0515                     SMT2PR          equ	1301	;# 
   347     0515                     SMT2PRL         equ	1301	;# 
   348     0516                     SMT2PRH         equ	1302	;# 
   349     0517                     SMT2PRU         equ	1303	;# 
   350     0518                     SMT2CON0        equ	1304	;# 
   351     0519                     SMT2CON1        equ	1305	;# 
   352     051A                     SMT2STAT        equ	1306	;# 
   353     051B                     SMT2CLK         equ	1307	;# 
   354     051C                     SMT2SIG         equ	1308	;# 
   355     051D                     SMT2WIN         equ	1309	;# 
   356     058C                     NCO1ACC         equ	1420	;# 
   357     058C                     NCO1ACCL        equ	1420	;# 
   358     058D                     NCO1ACCH        equ	1421	;# 
   359     058E                     NCO1ACCU        equ	1422	;# 
   360     058F                     NCO1INC         equ	1423	;# 
   361     058F                     NCO1INCL        equ	1423	;# 
   362     0590                     NCO1INCH        equ	1424	;# 
   363     0591                     NCO1INCU        equ	1425	;# 
   364     0592                     NCO1CON         equ	1426	;# 
   365     0593                     NCO1CLK         equ	1427	;# 
   366     060C                     CWG1CLKCON      equ	1548	;# 
   367     060D                     CWG1ISM         equ	1549	;# 
   368     060E                     CWG1DBR         equ	1550	;# 
   369     060F                     CWG1DBF         equ	1551	;# 
   370     0610                     CWG1CON0        equ	1552	;# 
   371     0611                     CWG1CON1        equ	1553	;# 
   372     0612                     CWG1AS0         equ	1554	;# 
   373     0613                     CWG1AS1         equ	1555	;# 
   374     0614                     CWG1STR         equ	1556	;# 
   375     0616                     CWG2CLKCON      equ	1558	;# 
   376     0617                     CWG2ISM         equ	1559	;# 
   377     0618                     CWG2DBR         equ	1560	;# 
   378     0619                     CWG2DBF         equ	1561	;# 
   379     061A                     CWG2CON0        equ	1562	;# 
   380     061B                     CWG2CON1        equ	1563	;# 
   381     061C                     CWG2AS0         equ	1564	;# 
   382     061D                     CWG2AS1         equ	1565	;# 
   383     061E                     CWG2STR         equ	1566	;# 
   384     068C                     CWG3CLKCON      equ	1676	;# 
   385     068D                     CWG3ISM         equ	1677	;# 
   386     068E                     CWG3DBR         equ	1678	;# 
   387     068F                     CWG3DBF         equ	1679	;# 
   388     0690                     CWG3CON0        equ	1680	;# 
   389     0691                     CWG3CON1        equ	1681	;# 
   390     0692                     CWG3AS0         equ	1682	;# 
   391     0693                     CWG3AS1         equ	1683	;# 
   392     0694                     CWG3STR         equ	1684	;# 
   393     070C                     PIR0            equ	1804	;# 
   394     070D                     PIR1            equ	1805	;# 
   395     070E                     PIR2            equ	1806	;# 
   396     070F                     PIR3            equ	1807	;# 
   397     0710                     PIR4            equ	1808	;# 
   398     0711                     PIR5            equ	1809	;# 
   399     0712                     PIR6            equ	1810	;# 
   400     0713                     PIR7            equ	1811	;# 
   401     0714                     PIR8            equ	1812	;# 
   402     0716                     PIE0            equ	1814	;# 
   403     0717                     PIE1            equ	1815	;# 
   404     0718                     PIE2            equ	1816	;# 
   405     0719                     PIE3            equ	1817	;# 
   406     071A                     PIE4            equ	1818	;# 
   407     071B                     PIE5            equ	1819	;# 
   408     071C                     PIE6            equ	1820	;# 
   409     071D                     PIE7            equ	1821	;# 
   410     071E                     PIE8            equ	1822	;# 
   411     0796                     PMD0            equ	1942	;# 
   412     0797                     PMD1            equ	1943	;# 
   413     0798                     PMD2            equ	1944	;# 
   414     0799                     PMD3            equ	1945	;# 
   415     079A                     PMD4            equ	1946	;# 
   416     079B                     PMD5            equ	1947	;# 
   417     080C                     WDTCON0         equ	2060	;# 
   418     080D                     WDTCON1         equ	2061	;# 
   419     080E                     WDTPSL          equ	2062	;# 
   420     080F                     WDTPSH          equ	2063	;# 
   421     0810                     WDTTMR          equ	2064	;# 
   422     0811                     BORCON          equ	2065	;# 
   423     0812                     VREGCON         equ	2066	;# 
   424     0813                     PCON0           equ	2067	;# 
   425     0814                     CCDCON          equ	2068	;# 
   426     081A                     NVMADRL         equ	2074	;# 
   427     081B                     NVMADRH         equ	2075	;# 
   428     081C                     NVMDATL         equ	2076	;# 
   429     081D                     NVMDATH         equ	2077	;# 
   430     081E                     NVMCON1         equ	2078	;# 
   431     081F                     NVMCON2         equ	2079	;# 
   432     088C                     CPUDOZE         equ	2188	;# 
   433     088D                     OSCCON1         equ	2189	;# 
   434     088E                     OSCCON2         equ	2190	;# 
   435     088F                     OSCCON3         equ	2191	;# 
   436     0890                     OSCSTAT         equ	2192	;# 
   437     0891                     OSCEN           equ	2193	;# 
   438     0892                     OSCTUNE         equ	2194	;# 
   439     0893                     OSCFRQ          equ	2195	;# 
   440     0895                     CLKRCON         equ	2197	;# 
   441     0896                     CLKRCLK         equ	2198	;# 
   442     0897                     MDCON0          equ	2199	;# 
   443     0898                     MDCON1          equ	2200	;# 
   444     0899                     MDSRC           equ	2201	;# 
   445     089A                     MDCARL          equ	2202	;# 
   446     089B                     MDCARH          equ	2203	;# 
   447     090C                     FVRCON          equ	2316	;# 
   448     090E                     DAC1CON0        equ	2318	;# 
   449     090F                     DAC1CON1        equ	2319	;# 
   450     091F                     ZCD1CON         equ	2335	;# 
   451     091F                     ZCDCON          equ	2335	;# 
   452     098F                     CMOUT           equ	2447	;# 
   453     098F                     CMSTAT          equ	2447	;# 
   454     0990                     CM1CON0         equ	2448	;# 
   455     0991                     CM1CON1         equ	2449	;# 
   456     0992                     CM1NSEL         equ	2450	;# 
   457     0993                     CM1PSEL         equ	2451	;# 
   458     0994                     CM2CON0         equ	2452	;# 
   459     0995                     CM2CON1         equ	2453	;# 
   460     0996                     CM2NSEL         equ	2454	;# 
   461     0997                     CM2PSEL         equ	2455	;# 
   462     0E0F                     CLCDATA         equ	3599	;# 
   463     0E10                     CLC1CON         equ	3600	;# 
   464     0E11                     CLC1POL         equ	3601	;# 
   465     0E12                     CLC1SEL0        equ	3602	;# 
   466     0E13                     CLC1SEL1        equ	3603	;# 
   467     0E14                     CLC1SEL2        equ	3604	;# 
   468     0E15                     CLC1SEL3        equ	3605	;# 
   469     0E16                     CLC1GLS0        equ	3606	;# 
   470     0E17                     CLC1GLS1        equ	3607	;# 
   471     0E18                     CLC1GLS2        equ	3608	;# 
   472     0E19                     CLC1GLS3        equ	3609	;# 
   473     0E1A                     CLC2CON         equ	3610	;# 
   474     0E1B                     CLC2POL         equ	3611	;# 
   475     0E1C                     CLC2SEL0        equ	3612	;# 
   476     0E1D                     CLC2SEL1        equ	3613	;# 
   477     0E1E                     CLC2SEL2        equ	3614	;# 
   478     0E1F                     CLC2SEL3        equ	3615	;# 
   479     0E20                     CLC2GLS0        equ	3616	;# 
   480     0E21                     CLC2GLS1        equ	3617	;# 
   481     0E22                     CLC2GLS2        equ	3618	;# 
   482     0E23                     CLC2GLS3        equ	3619	;# 
   483     0E24                     CLC3CON         equ	3620	;# 
   484     0E25                     CLC3POL         equ	3621	;# 
   485     0E26                     CLC3SEL0        equ	3622	;# 
   486     0E27                     CLC3SEL1        equ	3623	;# 
   487     0E28                     CLC3SEL2        equ	3624	;# 
   488     0E29                     CLC3SEL3        equ	3625	;# 
   489     0E2A                     CLC3GLS0        equ	3626	;# 
   490     0E2B                     CLC3GLS1        equ	3627	;# 
   491     0E2C                     CLC3GLS2        equ	3628	;# 
   492     0E2D                     CLC3GLS3        equ	3629	;# 
   493     0E2E                     CLC4CON         equ	3630	;# 
   494     0E2F                     CLC4POL         equ	3631	;# 
   495     0E30                     CLC4SEL0        equ	3632	;# 
   496     0E31                     CLC4SEL1        equ	3633	;# 
   497     0E32                     CLC4SEL2        equ	3634	;# 
   498     0E33                     CLC4SEL3        equ	3635	;# 
   499     0E34                     CLC4GLS0        equ	3636	;# 
   500     0E35                     CLC4GLS1        equ	3637	;# 
   501     0E36                     CLC4GLS2        equ	3638	;# 
   502     0E37                     CLC4GLS3        equ	3639	;# 
   503     0E8F                     PPSLOCK         equ	3727	;# 
   504     0E90                     INTPPS          equ	3728	;# 
   505     0E91                     T0CKIPPS        equ	3729	;# 
   506     0E92                     T1CKIPPS        equ	3730	;# 
   507     0E93                     T1GPPS          equ	3731	;# 
   508     0E94                     T3CKIPPS        equ	3732	;# 
   509     0E95                     T3GPPS          equ	3733	;# 
   510     0E96                     T5CKIPPS        equ	3734	;# 
   511     0E97                     T5GPPS          equ	3735	;# 
   512     0E9C                     T2AINPPS        equ	3740	;# 
   513     0E9D                     T4AINPPS        equ	3741	;# 
   514     0E9E                     T6AINPPS        equ	3742	;# 
   515     0EA1                     CCP1PPS         equ	3745	;# 
   516     0EA2                     CCP2PPS         equ	3746	;# 
   517     0EA3                     CCP3PPS         equ	3747	;# 
   518     0EA4                     CCP4PPS         equ	3748	;# 
   519     0EA5                     CCP5PPS         equ	3749	;# 
   520     0EA9                     SMT1WINPPS      equ	3753	;# 
   521     0EAA                     SMT1SIGPPS      equ	3754	;# 
   522     0EAB                     SMT2WINPPS      equ	3755	;# 
   523     0EAC                     SMT2SIGPPS      equ	3756	;# 
   524     0EB1                     CWG1PPS         equ	3761	;# 
   525     0EB2                     CWG2PPS         equ	3762	;# 
   526     0EB3                     CWG3PPS         equ	3763	;# 
   527     0EB8                     MDCARLPPS       equ	3768	;# 
   528     0EB9                     MDCARHPPS       equ	3769	;# 
   529     0EBA                     MDSRCPPS        equ	3770	;# 
   530     0EBB                     CLCIN0PPS       equ	3771	;# 
   531     0EBC                     CLCIN1PPS       equ	3772	;# 
   532     0EBD                     CLCIN2PPS       equ	3773	;# 
   533     0EBE                     CLCIN3PPS       equ	3774	;# 
   534     0EC3                     ADCACTPPS       equ	3779	;# 
   535     0EC5                     SSP1CLKPPS      equ	3781	;# 
   536     0EC6                     SSP1DATPPS      equ	3782	;# 
   537     0EC7                     SSP1SSPPS       equ	3783	;# 
   538     0EC8                     SSP2CLKPPS      equ	3784	;# 
   539     0EC9                     SSP2DATPPS      equ	3785	;# 
   540     0ECA                     SSP2SSPPS       equ	3786	;# 
   541     0ECB                     RXPPS           equ	3787	;# 
   542     0ECC                     TXPPS           equ	3788	;# 
   543     0F10                     RA0PPS          equ	3856	;# 
   544     0F11                     RA1PPS          equ	3857	;# 
   545     0F12                     RA2PPS          equ	3858	;# 
   546     0F13                     RA3PPS          equ	3859	;# 
   547     0F14                     RA4PPS          equ	3860	;# 
   548     0F15                     RA5PPS          equ	3861	;# 
   549     0F16                     RA6PPS          equ	3862	;# 
   550     0F17                     RA7PPS          equ	3863	;# 
   551     0F18                     RB0PPS          equ	3864	;# 
   552     0F19                     RB1PPS          equ	3865	;# 
   553     0F1A                     RB2PPS          equ	3866	;# 
   554     0F1B                     RB3PPS          equ	3867	;# 
   555     0F1C                     RB4PPS          equ	3868	;# 
   556     0F1D                     RB5PPS          equ	3869	;# 
   557     0F1E                     RB6PPS          equ	3870	;# 
   558     0F1F                     RB7PPS          equ	3871	;# 
   559     0F20                     RC0PPS          equ	3872	;# 
   560     0F21                     RC1PPS          equ	3873	;# 
   561     0F22                     RC2PPS          equ	3874	;# 
   562     0F23                     RC3PPS          equ	3875	;# 
   563     0F24                     RC4PPS          equ	3876	;# 
   564     0F25                     RC5PPS          equ	3877	;# 
   565     0F26                     RC6PPS          equ	3878	;# 
   566     0F27                     RC7PPS          equ	3879	;# 
   567     0F38                     ANSELA          equ	3896	;# 
   568     0F39                     WPUA            equ	3897	;# 
   569     0F3A                     ODCONA          equ	3898	;# 
   570     0F3B                     SLRCONA         equ	3899	;# 
   571     0F3C                     INLVLA          equ	3900	;# 
   572     0F3D                     IOCAP           equ	3901	;# 
   573     0F3E                     IOCAN           equ	3902	;# 
   574     0F3F                     IOCAF           equ	3903	;# 
   575     0F40                     CCDNA           equ	3904	;# 
   576     0F41                     CCDPA           equ	3905	;# 
   577     0F43                     ANSELB          equ	3907	;# 
   578     0F44                     WPUB            equ	3908	;# 
   579     0F45                     ODCONB          equ	3909	;# 
   580     0F46                     SLRCONB         equ	3910	;# 
   581     0F47                     INLVLB          equ	3911	;# 
   582     0F48                     IOCBP           equ	3912	;# 
   583     0F49                     IOCBN           equ	3913	;# 
   584     0F4A                     IOCBF           equ	3914	;# 
   585     0F4B                     CCDNB           equ	3915	;# 
   586     0F4C                     CCDPB           equ	3916	;# 
   587     0F4E                     ANSELC          equ	3918	;# 
   588     0F4F                     WPUC            equ	3919	;# 
   589     0F50                     ODCONC          equ	3920	;# 
   590     0F51                     SLRCONC         equ	3921	;# 
   591     0F52                     INLVLC          equ	3922	;# 
   592     0F53                     IOCCP           equ	3923	;# 
   593     0F54                     IOCCN           equ	3924	;# 
   594     0F55                     IOCCF           equ	3925	;# 
   595     0F56                     CCDNC           equ	3926	;# 
   596     0F57                     CCDPC           equ	3927	;# 
   597     0F65                     WPUE            equ	3941	;# 
   598     0F68                     INLVLE          equ	3944	;# 
   599     0F69                     IOCEP           equ	3945	;# 
   600     0F6A                     IOCEN           equ	3946	;# 
   601     0F6B                     IOCEF           equ	3947	;# 
   602     0FE4                     STATUS_SHAD     equ	4068	;# 
   603     0FE5                     WREG_SHAD       equ	4069	;# 
   604     0FE6                     BSR_SHAD        equ	4070	;# 
   605     0FE7                     PCLATH_SHAD     equ	4071	;# 
   606     0FE8                     FSR0L_SHAD      equ	4072	;# 
   607     0FE9                     FSR0H_SHAD      equ	4073	;# 
   608     0FEA                     FSR1L_SHAD      equ	4074	;# 
   609     0FEB                     FSR1H_SHAD      equ	4075	;# 
   610     0FED                     STKPTR          equ	4077	;# 
   611     0FEE                     TOSL            equ	4078	;# 
   612     0FEF                     TOSH            equ	4079	;# 
   613     0000                     INDF0           equ	0	;# 
   614     0001                     INDF1           equ	1	;# 
   615     0002                     PCL             equ	2	;# 
   616     0003                     STATUS          equ	3	;# 
   617     0004                     FSR0L           equ	4	;# 
   618     0005                     FSR0H           equ	5	;# 
   619     0006                     FSR1L           equ	6	;# 
   620     0007                     FSR1H           equ	7	;# 
   621     0008                     BSR             equ	8	;# 
   622     0009                     WREG            equ	9	;# 
   623     000A                     PCLATH          equ	10	;# 
   624     000B                     INTCON          equ	11	;# 
   625     000C                     PORTA           equ	12	;# 
   626     000D                     PORTB           equ	13	;# 
   627     000E                     PORTC           equ	14	;# 
   628     0010                     PORTE           equ	16	;# 
   629     0011                     TRISA           equ	17	;# 
   630     0012                     TRISB           equ	18	;# 
   631     0013                     TRISC           equ	19	;# 
   632     0016                     LATA            equ	22	;# 
   633     0017                     LATB            equ	23	;# 
   634     0018                     LATC            equ	24	;# 
   635     001C                     TMR0L           equ	28	;# 
   636     001C                     TMR0            equ	28	;# 
   637     001D                     TMR0H           equ	29	;# 
   638     001D                     PR0             equ	29	;# 
   639     001E                     T0CON0          equ	30	;# 
   640     001F                     T0CON1          equ	31	;# 
   641     008C                     ADRES           equ	140	;# 
   642     008C                     ADRESL          equ	140	;# 
   643     008D                     ADRESH          equ	141	;# 
   644     008E                     ADPREV          equ	142	;# 
   645     008E                     ADPREVL         equ	142	;# 
   646     008F                     ADPREVH         equ	143	;# 
   647     0090                     ADACC           equ	144	;# 
   648     0090                     ADACCL          equ	144	;# 
   649     0091                     ADACCH          equ	145	;# 
   650     0093                     ADCON0          equ	147	;# 
   651     0094                     ADCON1          equ	148	;# 
   652     0095                     ADCON2          equ	149	;# 
   653     0096                     ADCON3          equ	150	;# 
   654     0097                     ADSTAT          equ	151	;# 
   655     0098                     ADCLK           equ	152	;# 
   656     0099                     ADACT           equ	153	;# 
   657     009A                     ADREF           equ	154	;# 
   658     009B                     ADCAP           equ	155	;# 
   659     009C                     ADPRE           equ	156	;# 
   660     009D                     ADACQ           equ	157	;# 
   661     009E                     ADPCH           equ	158	;# 
   662     010C                     ADCNT           equ	268	;# 
   663     010D                     ADRPT           equ	269	;# 
   664     010E                     ADLTH           equ	270	;# 
   665     010E                     ADLTHL          equ	270	;# 
   666     010F                     ADLTHH          equ	271	;# 
   667     0110                     ADUTH           equ	272	;# 
   668     0110                     ADUTHL          equ	272	;# 
   669     0111                     ADUTHH          equ	273	;# 
   670     0112                     ADSTPT          equ	274	;# 
   671     0112                     ADSTPTL         equ	274	;# 
   672     0113                     ADSTPTH         equ	275	;# 
   673     0114                     ADFLTR          equ	276	;# 
   674     0114                     ADFLTRL         equ	276	;# 
   675     0115                     ADFLTRH         equ	277	;# 
   676     0116                     ADERR           equ	278	;# 
   677     0116                     ADERRL          equ	278	;# 
   678     0117                     ADERRH          equ	279	;# 
   679     0119                     RC1REG          equ	281	;# 
   680     0119                     RCREG           equ	281	;# 
   681     0119                     RCREG1          equ	281	;# 
   682     011A                     TX1REG          equ	282	;# 
   683     011A                     TXREG1          equ	282	;# 
   684     011A                     TXREG           equ	282	;# 
   685     011B                     SP1BRG          equ	283	;# 
   686     011B                     SPBRG           equ	283	;# 
   687     011B                     SP1BRGL         equ	283	;# 
   688     011B                     SPBRG1          equ	283	;# 
   689     011B                     SPBRGL          equ	283	;# 
   690     011C                     SP1BRGH         equ	284	;# 
   691     011C                     SPBRGH          equ	284	;# 
   692     011C                     SPBRGH1         equ	284	;# 
   693     011D                     RC1STA          equ	285	;# 
   694     011D                     RCSTA1          equ	285	;# 
   695     011D                     RCSTA           equ	285	;# 
   696     011E                     TX1STA          equ	286	;# 
   697     011E                     TXSTA1          equ	286	;# 
   698     011E                     TXSTA           equ	286	;# 
   699     011F                     BAUD1CON        equ	287	;# 
   700     011F                     BAUDCON1        equ	287	;# 
   701     011F                     BAUDCTL1        equ	287	;# 
   702     011F                     BAUDCON         equ	287	;# 
   703     011F                     BAUDCTL         equ	287	;# 
   704     018C                     SSP1BUF         equ	396	;# 
   705     018D                     SSP1ADD         equ	397	;# 
   706     018E                     SSP1MSK         equ	398	;# 
   707     018F                     SSP1STAT        equ	399	;# 
   708     0190                     SSP1CON1        equ	400	;# 
   709     0191                     SSP1CON2        equ	401	;# 
   710     0192                     SSP1CON3        equ	402	;# 
   711     0196                     SSP2BUF         equ	406	;# 
   712     0197                     SSP2ADD         equ	407	;# 
   713     0198                     SSP2MSK         equ	408	;# 
   714     0199                     SSP2STAT        equ	409	;# 
   715     019A                     SSP2CON1        equ	410	;# 
   716     019B                     SSP2CON2        equ	411	;# 
   717     019C                     SSP2CON3        equ	412	;# 
   718     020C                     TMR1            equ	524	;# 
   719     020C                     TMR1L           equ	524	;# 
   720     020D                     TMR1H           equ	525	;# 
   721     020E                     T1CON           equ	526	;# 
   722     020F                     T1GCON          equ	527	;# 
   723     020F                     PR1             equ	527	;# 
   724     0210                     T1GATE          equ	528	;# 
   725     0210                     TMR1GATE        equ	528	;# 
   726     0211                     T1CLK           equ	529	;# 
   727     0211                     TMR1CLK         equ	529	;# 
   728     0212                     TMR3            equ	530	;# 
   729     0212                     TMR3L           equ	530	;# 
   730     0213                     TMR3H           equ	531	;# 
   731     0214                     T3CON           equ	532	;# 
   732     0215                     T3GCON          equ	533	;# 
   733     0215                     PR3             equ	533	;# 
   734     0216                     T3GATE          equ	534	;# 
   735     0216                     TMR3GATE        equ	534	;# 
   736     0217                     T3CLK           equ	535	;# 
   737     0217                     TMR3CLK         equ	535	;# 
   738     0218                     TMR5            equ	536	;# 
   739     0218                     TMR5L           equ	536	;# 
   740     0219                     TMR5H           equ	537	;# 
   741     021A                     T5CON           equ	538	;# 
   742     021B                     T5GCON          equ	539	;# 
   743     021B                     PR5             equ	539	;# 
   744     021C                     T5GATE          equ	540	;# 
   745     021C                     TMR5GATE        equ	540	;# 
   746     021D                     T5CLK           equ	541	;# 
   747     021D                     TMR5CLK         equ	541	;# 
   748     021E                     CCPTMRS0        equ	542	;# 
   749     021F                     CCPTMRS1        equ	543	;# 
   750     028C                     T2TMR           equ	652	;# 
   751     028C                     TMR2            equ	652	;# 
   752     028D                     T2PR            equ	653	;# 
   753     028D                     PR2             equ	653	;# 
   754     028E                     T2CON           equ	654	;# 
   755     028F                     T2HLT           equ	655	;# 
   756     0290                     T2CLKCON        equ	656	;# 
   757     0290                     T2CLK           equ	656	;# 
   758     0291                     T2RST           equ	657	;# 
   759     0292                     T4TMR           equ	658	;# 
   760     0292                     TMR4            equ	658	;# 
   761     0293                     T4PR            equ	659	;# 
   762     0293                     PR4             equ	659	;# 
   763     0294                     T4CON           equ	660	;# 
   764     0295                     T4HLT           equ	661	;# 
   765     0296                     T4CLKCON        equ	662	;# 
   766     0296                     T4CLK           equ	662	;# 
   767     0297                     T4RST           equ	663	;# 
   768     0298                     T6TMR           equ	664	;# 
   769     0298                     TMR6            equ	664	;# 
   770     0299                     T6PR            equ	665	;# 
   771     0299                     PR6             equ	665	;# 
   772     029A                     T6CON           equ	666	;# 
   773     029B                     T6HLT           equ	667	;# 
   774     029C                     T6CLKCON        equ	668	;# 
   775     029C                     T6CLK           equ	668	;# 
   776     029D                     T6RST           equ	669	;# 
   777     030C                     CCPR1           equ	780	;# 
   778     030C                     CCPR1L          equ	780	;# 
   779     030D                     CCPR1H          equ	781	;# 
   780     030E                     CCP1CON         equ	782	;# 
   781     030F                     CCP1CAP         equ	783	;# 
   782     0310                     CCPR2           equ	784	;# 
   783     0310                     CCPR2L          equ	784	;# 
   784     0311                     CCPR2H          equ	785	;# 
   785     0312                     CCP2CON         equ	786	;# 
   786     0313                     CCP2CAP         equ	787	;# 
   787     0314                     CCPR3           equ	788	;# 
   788     0314                     CCPR3L          equ	788	;# 
   789     0315                     CCPR3H          equ	789	;# 
   790     0316                     CCP3CON         equ	790	;# 
   791     0317                     CCP3CAP         equ	791	;# 
   792     0318                     CCPR4           equ	792	;# 
   793     0318                     CCPR4L          equ	792	;# 
   794     0319                     CCPR4H          equ	793	;# 
   795     031A                     CCP4CON         equ	794	;# 
   796     031B                     CCP4CAP         equ	795	;# 
   797     031C                     CCPR5           equ	796	;# 
   798     031C                     CCPR5L          equ	796	;# 
   799     031D                     CCPR5H          equ	797	;# 
   800     031E                     CCP5CON         equ	798	;# 
   801     031F                     CCP5CAP         equ	799	;# 
   802     038C                     PWM6DC          equ	908	;# 
   803     038C                     PWM6DCL         equ	908	;# 
   804     038D                     PWM6DCH         equ	909	;# 
   805     038E                     PWM6CON         equ	910	;# 
   806     0390                     PWM7DC          equ	912	;# 
   807     0390                     PWM7DCL         equ	912	;# 
   808     0391                     PWM7DCH         equ	913	;# 
   809     0392                     PWM7CON         equ	914	;# 
   810     040C                     SCANLADRL       equ	1036	;# 
   811     040D                     SCANLADRH       equ	1037	;# 
   812     040E                     SCANHADRL       equ	1038	;# 
   813     040F                     SCANHADRH       equ	1039	;# 
   814     0410                     SCANCON0        equ	1040	;# 
   815     0411                     SCANTRIG        equ	1041	;# 
   816     0416                     CRCDATA         equ	1046	;# 
   817     0416                     CRCDATL         equ	1046	;# 
   818     0417                     CRCDATH         equ	1047	;# 
   819     0418                     CRCACC          equ	1048	;# 
   820     0418                     CRCACCL         equ	1048	;# 
   821     0419                     CRCACCH         equ	1049	;# 
   822     041A                     CRCSHFT         equ	1050	;# 
   823     041A                     CRCSHIFTL       equ	1050	;# 
   824     041B                     CRCSHIFTH       equ	1051	;# 
   825     041C                     CRCXOR          equ	1052	;# 
   826     041C                     CRCXORL         equ	1052	;# 
   827     041D                     CRCXORH         equ	1053	;# 
   828     041E                     CRCCON0         equ	1054	;# 
   829     041F                     CRCCON1         equ	1055	;# 
   830     048C                     SMT1TMR         equ	1164	;# 
   831     048C                     SMT1TMRL        equ	1164	;# 
   832     048D                     SMT1TMRH        equ	1165	;# 
   833     048E                     SMT1TMRU        equ	1166	;# 
   834     048F                     SMT1CPR         equ	1167	;# 
   835     048F                     SMT1CPRL        equ	1167	;# 
   836     0490                     SMT1CPRH        equ	1168	;# 
   837     0491                     SMT1CPRU        equ	1169	;# 
   838     0492                     SMT1CPW         equ	1170	;# 
   839     0492                     SMT1CPWL        equ	1170	;# 
   840     0493                     SMT1CPWH        equ	1171	;# 
   841     0494                     SMT1CPWU        equ	1172	;# 
   842     0495                     SMT1PR          equ	1173	;# 
   843     0495                     SMT1PRL         equ	1173	;# 
   844     0496                     SMT1PRH         equ	1174	;# 
   845     0497                     SMT1PRU         equ	1175	;# 
   846     0498                     SMT1CON0        equ	1176	;# 
   847     0499                     SMT1CON1        equ	1177	;# 
   848     049A                     SMT1STAT        equ	1178	;# 
   849     049B                     SMT1CLK         equ	1179	;# 
   850     049C                     SMT1SIG         equ	1180	;# 
   851     049D                     SMT1WIN         equ	1181	;# 
   852     050C                     SMT2TMR         equ	1292	;# 
   853     050C                     SMT2TMRL        equ	1292	;# 
   854     050D                     SMT2TMRH        equ	1293	;# 
   855     050E                     SMT2TMRU        equ	1294	;# 
   856     050F                     SMT2CPR         equ	1295	;# 
   857     050F                     SMT2CPRL        equ	1295	;# 
   858     0510                     SMT2CPRH        equ	1296	;# 
   859     0511                     SMT2CPRU        equ	1297	;# 
   860     0512                     SMT2CPW         equ	1298	;# 
   861     0512                     SMT2CPWL        equ	1298	;# 
   862     0513                     SMT2CPWH        equ	1299	;# 
   863     0514                     SMT2CPWU        equ	1300	;# 
   864     0515                     SMT2PR          equ	1301	;# 
   865     0515                     SMT2PRL         equ	1301	;# 
   866     0516                     SMT2PRH         equ	1302	;# 
   867     0517                     SMT2PRU         equ	1303	;# 
   868     0518                     SMT2CON0        equ	1304	;# 
   869     0519                     SMT2CON1        equ	1305	;# 
   870     051A                     SMT2STAT        equ	1306	;# 
   871     051B                     SMT2CLK         equ	1307	;# 
   872     051C                     SMT2SIG         equ	1308	;# 
   873     051D                     SMT2WIN         equ	1309	;# 
   874     058C                     NCO1ACC         equ	1420	;# 
   875     058C                     NCO1ACCL        equ	1420	;# 
   876     058D                     NCO1ACCH        equ	1421	;# 
   877     058E                     NCO1ACCU        equ	1422	;# 
   878     058F                     NCO1INC         equ	1423	;# 
   879     058F                     NCO1INCL        equ	1423	;# 
   880     0590                     NCO1INCH        equ	1424	;# 
   881     0591                     NCO1INCU        equ	1425	;# 
   882     0592                     NCO1CON         equ	1426	;# 
   883     0593                     NCO1CLK         equ	1427	;# 
   884     060C                     CWG1CLKCON      equ	1548	;# 
   885     060D                     CWG1ISM         equ	1549	;# 
   886     060E                     CWG1DBR         equ	1550	;# 
   887     060F                     CWG1DBF         equ	1551	;# 
   888     0610                     CWG1CON0        equ	1552	;# 
   889     0611                     CWG1CON1        equ	1553	;# 
   890     0612                     CWG1AS0         equ	1554	;# 
   891     0613                     CWG1AS1         equ	1555	;# 
   892     0614                     CWG1STR         equ	1556	;# 
   893     0616                     CWG2CLKCON      equ	1558	;# 
   894     0617                     CWG2ISM         equ	1559	;# 
   895     0618                     CWG2DBR         equ	1560	;# 
   896     0619                     CWG2DBF         equ	1561	;# 
   897     061A                     CWG2CON0        equ	1562	;# 
   898     061B                     CWG2CON1        equ	1563	;# 
   899     061C                     CWG2AS0         equ	1564	;# 
   900     061D                     CWG2AS1         equ	1565	;# 
   901     061E                     CWG2STR         equ	1566	;# 
   902     068C                     CWG3CLKCON      equ	1676	;# 
   903     068D                     CWG3ISM         equ	1677	;# 
   904     068E                     CWG3DBR         equ	1678	;# 
   905     068F                     CWG3DBF         equ	1679	;# 
   906     0690                     CWG3CON0        equ	1680	;# 
   907     0691                     CWG3CON1        equ	1681	;# 
   908     0692                     CWG3AS0         equ	1682	;# 
   909     0693                     CWG3AS1         equ	1683	;# 
   910     0694                     CWG3STR         equ	1684	;# 
   911     070C                     PIR0            equ	1804	;# 
   912     070D                     PIR1            equ	1805	;# 
   913     070E                     PIR2            equ	1806	;# 
   914     070F                     PIR3            equ	1807	;# 
   915     0710                     PIR4            equ	1808	;# 
   916     0711                     PIR5            equ	1809	;# 
   917     0712                     PIR6            equ	1810	;# 
   918     0713                     PIR7            equ	1811	;# 
   919     0714                     PIR8            equ	1812	;# 
   920     0716                     PIE0            equ	1814	;# 
   921     0717                     PIE1            equ	1815	;# 
   922     0718                     PIE2            equ	1816	;# 
   923     0719                     PIE3            equ	1817	;# 
   924     071A                     PIE4            equ	1818	;# 
   925     071B                     PIE5            equ	1819	;# 
   926     071C                     PIE6            equ	1820	;# 
   927     071D                     PIE7            equ	1821	;# 
   928     071E                     PIE8            equ	1822	;# 
   929     0796                     PMD0            equ	1942	;# 
   930     0797                     PMD1            equ	1943	;# 
   931     0798                     PMD2            equ	1944	;# 
   932     0799                     PMD3            equ	1945	;# 
   933     079A                     PMD4            equ	1946	;# 
   934     079B                     PMD5            equ	1947	;# 
   935     080C                     WDTCON0         equ	2060	;# 
   936     080D                     WDTCON1         equ	2061	;# 
   937     080E                     WDTPSL          equ	2062	;# 
   938     080F                     WDTPSH          equ	2063	;# 
   939     0810                     WDTTMR          equ	2064	;# 
   940     0811                     BORCON          equ	2065	;# 
   941     0812                     VREGCON         equ	2066	;# 
   942     0813                     PCON0           equ	2067	;# 
   943     0814                     CCDCON          equ	2068	;# 
   944     081A                     NVMADRL         equ	2074	;# 
   945     081B                     NVMADRH         equ	2075	;# 
   946     081C                     NVMDATL         equ	2076	;# 
   947     081D                     NVMDATH         equ	2077	;# 
   948     081E                     NVMCON1         equ	2078	;# 
   949     081F                     NVMCON2         equ	2079	;# 
   950     088C                     CPUDOZE         equ	2188	;# 
   951     088D                     OSCCON1         equ	2189	;# 
   952     088E                     OSCCON2         equ	2190	;# 
   953     088F                     OSCCON3         equ	2191	;# 
   954     0890                     OSCSTAT         equ	2192	;# 
   955     0891                     OSCEN           equ	2193	;# 
   956     0892                     OSCTUNE         equ	2194	;# 
   957     0893                     OSCFRQ          equ	2195	;# 
   958     0895                     CLKRCON         equ	2197	;# 
   959     0896                     CLKRCLK         equ	2198	;# 
   960     0897                     MDCON0          equ	2199	;# 
   961     0898                     MDCON1          equ	2200	;# 
   962     0899                     MDSRC           equ	2201	;# 
   963     089A                     MDCARL          equ	2202	;# 
   964     089B                     MDCARH          equ	2203	;# 
   965     090C                     FVRCON          equ	2316	;# 
   966     090E                     DAC1CON0        equ	2318	;# 
   967     090F                     DAC1CON1        equ	2319	;# 
   968     091F                     ZCD1CON         equ	2335	;# 
   969     091F                     ZCDCON          equ	2335	;# 
   970     098F                     CMOUT           equ	2447	;# 
   971     098F                     CMSTAT          equ	2447	;# 
   972     0990                     CM1CON0         equ	2448	;# 
   973     0991                     CM1CON1         equ	2449	;# 
   974     0992                     CM1NSEL         equ	2450	;# 
   975     0993                     CM1PSEL         equ	2451	;# 
   976     0994                     CM2CON0         equ	2452	;# 
   977     0995                     CM2CON1         equ	2453	;# 
   978     0996                     CM2NSEL         equ	2454	;# 
   979     0997                     CM2PSEL         equ	2455	;# 
   980     0E0F                     CLCDATA         equ	3599	;# 
   981     0E10                     CLC1CON         equ	3600	;# 
   982     0E11                     CLC1POL         equ	3601	;# 
   983     0E12                     CLC1SEL0        equ	3602	;# 
   984     0E13                     CLC1SEL1        equ	3603	;# 
   985     0E14                     CLC1SEL2        equ	3604	;# 
   986     0E15                     CLC1SEL3        equ	3605	;# 
   987     0E16                     CLC1GLS0        equ	3606	;# 
   988     0E17                     CLC1GLS1        equ	3607	;# 
   989     0E18                     CLC1GLS2        equ	3608	;# 
   990     0E19                     CLC1GLS3        equ	3609	;# 
   991     0E1A                     CLC2CON         equ	3610	;# 
   992     0E1B                     CLC2POL         equ	3611	;# 
   993     0E1C                     CLC2SEL0        equ	3612	;# 
   994     0E1D                     CLC2SEL1        equ	3613	;# 
   995     0E1E                     CLC2SEL2        equ	3614	;# 
   996     0E1F                     CLC2SEL3        equ	3615	;# 
   997     0E20                     CLC2GLS0        equ	3616	;# 
   998     0E21                     CLC2GLS1        equ	3617	;# 
   999     0E22                     CLC2GLS2        equ	3618	;# 
  1000     0E23                     CLC2GLS3        equ	3619	;# 
  1001     0E24                     CLC3CON         equ	3620	;# 
  1002     0E25                     CLC3POL         equ	3621	;# 
  1003     0E26                     CLC3SEL0        equ	3622	;# 
  1004     0E27                     CLC3SEL1        equ	3623	;# 
  1005     0E28                     CLC3SEL2        equ	3624	;# 
  1006     0E29                     CLC3SEL3        equ	3625	;# 
  1007     0E2A                     CLC3GLS0        equ	3626	;# 
  1008     0E2B                     CLC3GLS1        equ	3627	;# 
  1009     0E2C                     CLC3GLS2        equ	3628	;# 
  1010     0E2D                     CLC3GLS3        equ	3629	;# 
  1011     0E2E                     CLC4CON         equ	3630	;# 
  1012     0E2F                     CLC4POL         equ	3631	;# 
  1013     0E30                     CLC4SEL0        equ	3632	;# 
  1014     0E31                     CLC4SEL1        equ	3633	;# 
  1015     0E32                     CLC4SEL2        equ	3634	;# 
  1016     0E33                     CLC4SEL3        equ	3635	;# 
  1017     0E34                     CLC4GLS0        equ	3636	;# 
  1018     0E35                     CLC4GLS1        equ	3637	;# 
  1019     0E36                     CLC4GLS2        equ	3638	;# 
  1020     0E37                     CLC4GLS3        equ	3639	;# 
  1021     0E8F                     PPSLOCK         equ	3727	;# 
  1022     0E90                     INTPPS          equ	3728	;# 
  1023     0E91                     T0CKIPPS        equ	3729	;# 
  1024     0E92                     T1CKIPPS        equ	3730	;# 
  1025     0E93                     T1GPPS          equ	3731	;# 
  1026     0E94                     T3CKIPPS        equ	3732	;# 
  1027     0E95                     T3GPPS          equ	3733	;# 
  1028     0E96                     T5CKIPPS        equ	3734	;# 
  1029     0E97                     T5GPPS          equ	3735	;# 
  1030     0E9C                     T2AINPPS        equ	3740	;# 
  1031     0E9D                     T4AINPPS        equ	3741	;# 
  1032     0E9E                     T6AINPPS        equ	3742	;# 
  1033     0EA1                     CCP1PPS         equ	3745	;# 
  1034     0EA2                     CCP2PPS         equ	3746	;# 
  1035     0EA3                     CCP3PPS         equ	3747	;# 
  1036     0EA4                     CCP4PPS         equ	3748	;# 
  1037     0EA5                     CCP5PPS         equ	3749	;# 
  1038     0EA9                     SMT1WINPPS      equ	3753	;# 
  1039     0EAA                     SMT1SIGPPS      equ	3754	;# 
  1040     0EAB                     SMT2WINPPS      equ	3755	;# 
  1041     0EAC                     SMT2SIGPPS      equ	3756	;# 
  1042     0EB1                     CWG1PPS         equ	3761	;# 
  1043     0EB2                     CWG2PPS         equ	3762	;# 
  1044     0EB3                     CWG3PPS         equ	3763	;# 
  1045     0EB8                     MDCARLPPS       equ	3768	;# 
  1046     0EB9                     MDCARHPPS       equ	3769	;# 
  1047     0EBA                     MDSRCPPS        equ	3770	;# 
  1048     0EBB                     CLCIN0PPS       equ	3771	;# 
  1049     0EBC                     CLCIN1PPS       equ	3772	;# 
  1050     0EBD                     CLCIN2PPS       equ	3773	;# 
  1051     0EBE                     CLCIN3PPS       equ	3774	;# 
  1052     0EC3                     ADCACTPPS       equ	3779	;# 
  1053     0EC5                     SSP1CLKPPS      equ	3781	;# 
  1054     0EC6                     SSP1DATPPS      equ	3782	;# 
  1055     0EC7                     SSP1SSPPS       equ	3783	;# 
  1056     0EC8                     SSP2CLKPPS      equ	3784	;# 
  1057     0EC9                     SSP2DATPPS      equ	3785	;# 
  1058     0ECA                     SSP2SSPPS       equ	3786	;# 
  1059     0ECB                     RXPPS           equ	3787	;# 
  1060     0ECC                     TXPPS           equ	3788	;# 
  1061     0F10                     RA0PPS          equ	3856	;# 
  1062     0F11                     RA1PPS          equ	3857	;# 
  1063     0F12                     RA2PPS          equ	3858	;# 
  1064     0F13                     RA3PPS          equ	3859	;# 
  1065     0F14                     RA4PPS          equ	3860	;# 
  1066     0F15                     RA5PPS          equ	3861	;# 
  1067     0F16                     RA6PPS          equ	3862	;# 
  1068     0F17                     RA7PPS          equ	3863	;# 
  1069     0F18                     RB0PPS          equ	3864	;# 
  1070     0F19                     RB1PPS          equ	3865	;# 
  1071     0F1A                     RB2PPS          equ	3866	;# 
  1072     0F1B                     RB3PPS          equ	3867	;# 
  1073     0F1C                     RB4PPS          equ	3868	;# 
  1074     0F1D                     RB5PPS          equ	3869	;# 
  1075     0F1E                     RB6PPS          equ	3870	;# 
  1076     0F1F                     RB7PPS          equ	3871	;# 
  1077     0F20                     RC0PPS          equ	3872	;# 
  1078     0F21                     RC1PPS          equ	3873	;# 
  1079     0F22                     RC2PPS          equ	3874	;# 
  1080     0F23                     RC3PPS          equ	3875	;# 
  1081     0F24                     RC4PPS          equ	3876	;# 
  1082     0F25                     RC5PPS          equ	3877	;# 
  1083     0F26                     RC6PPS          equ	3878	;# 
  1084     0F27                     RC7PPS          equ	3879	;# 
  1085     0F38                     ANSELA          equ	3896	;# 
  1086     0F39                     WPUA            equ	3897	;# 
  1087     0F3A                     ODCONA          equ	3898	;# 
  1088     0F3B                     SLRCONA         equ	3899	;# 
  1089     0F3C                     INLVLA          equ	3900	;# 
  1090     0F3D                     IOCAP           equ	3901	;# 
  1091     0F3E                     IOCAN           equ	3902	;# 
  1092     0F3F                     IOCAF           equ	3903	;# 
  1093     0F40                     CCDNA           equ	3904	;# 
  1094     0F41                     CCDPA           equ	3905	;# 
  1095     0F43                     ANSELB          equ	3907	;# 
  1096     0F44                     WPUB            equ	3908	;# 
  1097     0F45                     ODCONB          equ	3909	;# 
  1098     0F46                     SLRCONB         equ	3910	;# 
  1099     0F47                     INLVLB          equ	3911	;# 
  1100     0F48                     IOCBP           equ	3912	;# 
  1101     0F49                     IOCBN           equ	3913	;# 
  1102     0F4A                     IOCBF           equ	3914	;# 
  1103     0F4B                     CCDNB           equ	3915	;# 
  1104     0F4C                     CCDPB           equ	3916	;# 
  1105     0F4E                     ANSELC          equ	3918	;# 
  1106     0F4F                     WPUC            equ	3919	;# 
  1107     0F50                     ODCONC          equ	3920	;# 
  1108     0F51                     SLRCONC         equ	3921	;# 
  1109     0F52                     INLVLC          equ	3922	;# 
  1110     0F53                     IOCCP           equ	3923	;# 
  1111     0F54                     IOCCN           equ	3924	;# 
  1112     0F55                     IOCCF           equ	3925	;# 
  1113     0F56                     CCDNC           equ	3926	;# 
  1114     0F57                     CCDPC           equ	3927	;# 
  1115     0F65                     WPUE            equ	3941	;# 
  1116     0F68                     INLVLE          equ	3944	;# 
  1117     0F69                     IOCEP           equ	3945	;# 
  1118     0F6A                     IOCEN           equ	3946	;# 
  1119     0F6B                     IOCEF           equ	3947	;# 
  1120     0FE4                     STATUS_SHAD     equ	4068	;# 
  1121     0FE5                     WREG_SHAD       equ	4069	;# 
  1122     0FE6                     BSR_SHAD        equ	4070	;# 
  1123     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1124     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1125     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1126     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1127     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1128     0FED                     STKPTR          equ	4077	;# 
  1129     0FEE                     TOSL            equ	4078	;# 
  1130     0FEF                     TOSH            equ	4079	;# 
  1131                           
  1132                           	psect	idataBANK0
  1133     031A                     __pidataBANK0:
  1134                           
  1135                           ;initializer for _Loading
  1136     031A  347C               	retlw	124
  1137     031B  342F               	retlw	47
  1138     031C  342D               	retlw	45
  1139     031D  345C               	retlw	92
  1140                           
  1141                           ;initializer for _FFT_Home1
  1142     031E  3446               	retlw	70
  1143     031F  3441               	retlw	65
  1144     0320  3453               	retlw	83
  1145     0321  3454               	retlw	84
  1146     0322  3420               	retlw	32
  1147     0323  3446               	retlw	70
  1148     0324  344F               	retlw	79
  1149     0325  3455               	retlw	85
  1150     0326  3452               	retlw	82
  1151     0327  3449               	retlw	73
  1152     0328  3445               	retlw	69
  1153     0329  3452               	retlw	82
  1154     032A  3420               	retlw	32
  1155     032B  3420               	retlw	32
  1156     032C  3420               	retlw	32
  1157     032D  3420               	retlw	32
  1158                           
  1159                           ;initializer for _Rover_Team
  1160     032E  343C               	retlw	60
  1161     032F  343C               	retlw	60
  1162     0330  3452               	retlw	82
  1163     0331  344F               	retlw	79
  1164     0332  3456               	retlw	86
  1165     0333  3445               	retlw	69
  1166     0334  3452               	retlw	82
  1167     0335  3420               	retlw	32
  1168     0336  3454               	retlw	84
  1169     0337  3445               	retlw	69
  1170     0338  3441               	retlw	65
  1171     0339  344D               	retlw	77
  1172     033A  3420               	retlw	32
  1173     033B  3435               	retlw	53
  1174     033C  343E               	retlw	62
  1175     033D  343E               	retlw	62
  1176                           
  1177                           	psect	idataBANK1
  1178     0484                     __pidataBANK1:
  1179                           
  1180                           ;initializer for _FFT_Home2
  1181     0484  3454               	retlw	84
  1182     0485  3452               	retlw	82
  1183     0486  3441               	retlw	65
  1184     0487  344E               	retlw	78
  1185     0488  3453               	retlw	83
  1186     0489  3446               	retlw	70
  1187     048A  344F               	retlw	79
  1188     048B  3452               	retlw	82
  1189     048C  344D               	retlw	77
  1190     048D  3420               	retlw	32
  1191     048E  3420               	retlw	32
  1192     048F  3420               	retlw	32
  1193     0490  3420               	retlw	32
  1194     0491  3420               	retlw	32
  1195     0492  3420               	retlw	32
  1196     0493  3420               	retlw	32
  1197     000C                     _PORTAbits      set	12
  1198     0017                     _LATBbits       set	23
  1199     0012                     _TRISBbits      set	18
  1200     0013                     _TRISCbits      set	19
  1201     0011                     _TRISAbits      set	17
  1202     0016                     _LATAbits       set	22
  1203     000B                     _INTCONbits     set	11
  1204     0119                     _RC1REG         set	281
  1205     011E                     _TX1STAbits     set	286
  1206     011D                     _RC1STAbits     set	285
  1207     011B                     _SP1BRGL        set	283
  1208     011C                     _SP1BRGH        set	284
  1209     011F                     _BAUD1CONbits   set	287
  1210     08F2                     _BRGH           set	2290
  1211     08FB                     _BRG16          set	2299
  1212     0199                     _SSP2STATbits   set	409
  1213     0196                     _SSP2BUF        set	406
  1214     0197                     _SSP2ADDbits    set	407
  1215     019A                     _SSP2CON1bits   set	410
  1216     019B                     _SSP2CON2bits   set	411
  1217     070F                     _PIR3bits       set	1807
  1218     0719                     _PIE3bits       set	1817
  1219     0EC9                     _SSP2DATPPSbits set	3785
  1220     0EC8                     _SSP2CLKPPSbits set	3784
  1221     0E8F                     _PPSLOCKbits    set	3727
  1222     0F25                     _RC5PPS         set	3877
  1223     0F23                     _RC3PPS         set	3875
  1224     0F24                     _RC4PPS         set	3876
  1225     0F43                     _ANSELBbits     set	3907
  1226     0F4E                     _ANSELCbits     set	3918
  1227     0F38                     _ANSELAbits     set	3896
  1228                           
  1229                           	psect	cinit
  1230     003D                     start_initialization:	
  1231                           ; #config settings
  1232                           
  1233     003D                     __initialization:
  1234                           
  1235                           ; Initialize objects allocated to BANK0
  1236     003D  301A               	movlw	low __pidataBANK0
  1237     003E  0084               	movwf	4
  1238     003F  3083               	movlw	(high __pidataBANK0)| (0+128)
  1239     0040  0085               	movwf	5
  1240     0041  3020               	movlw	low __pdataBANK0
  1241     0042  0086               	movwf	6
  1242     0043  3000               	movlw	high __pdataBANK0
  1243     0044  0087               	movwf	7
  1244     0045  3024               	movlw	36
  1245     0046  3184  24BA  3180   	fcall	init_ram
  1246                           
  1247                           ; Initialize objects allocated to BANK1
  1248     0049  3084               	movlw	low __pidataBANK1
  1249     004A  0084               	movwf	4
  1250     004B  3084               	movlw	(high __pidataBANK1)| (0+128)
  1251     004C  0085               	movwf	5
  1252     004D  30A0               	movlw	low __pdataBANK1
  1253     004E  0086               	movwf	6
  1254     004F  3000               	movlw	high __pdataBANK1
  1255     0050  0087               	movwf	7
  1256     0051  3010               	movlw	16
  1257     0052  3184  24BA  3180   	fcall	init_ram
  1258                           
  1259                           ; Clear objects allocated to COMMON
  1260     0055  01FA               	clrf	__pbssCOMMON& (0+127)
  1261                           
  1262                           ; Clear objects allocated to BANK0
  1263     0056  3058               	movlw	low __pbssBANK0
  1264     0057  0084               	movwf	4
  1265     0058  3000               	movlw	high __pbssBANK0
  1266     0059  0085               	movwf	5
  1267     005A  300F               	movlw	15
  1268     005B  3184  24C0  3180   	fcall	clear_ram0
  1269     005E                     end_of_initialization:	
  1270                           ;End of C runtime variable initialization code
  1271                           
  1272     005E                     __end_of__initialization:
  1273     005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1274     005F  0020               	movlb	0
  1275     0060  3183  2BA4         	ljmp	_main	;jump to C main() function
  1276                           
  1277                           	psect	bssCOMMON
  1278     007A                     __pbssCOMMON:
  1279     007A                     _bf:
  1280     007A                     	ds	1
  1281                           
  1282                           	psect	bssBANK0
  1283     0058                     __pbssBANK0:
  1284     0058                     _LCD:
  1285     0058                     	ds	12
  1286     0064                     _frequency:
  1287     0064                     	ds	2
  1288     0066                     _UART_Not_Recieved:
  1289     0066                     	ds	1
  1290                           
  1291                           	psect	dataBANK0
  1292     0020                     __pdataBANK0:
  1293     0020                     _Loading:
  1294     0020                     	ds	4
  1295     0024                     _FFT_Home1:
  1296     0024                     	ds	16
  1297     0034                     _Rover_Team:
  1298     0034                     	ds	16
  1299                           
  1300                           	psect	dataBANK1
  1301     00A0                     __pdataBANK1:
  1302     00A0                     _FFT_Home2:
  1303     00A0                     	ds	16
  1304                           
  1305                           	psect	inittext
  1306     04BA                     init_ram:
  1307     04BA  00FE               	movwf	btemp
  1308     04BB                     initloop:
  1309     04BB  0012               	moviw fsr0++
  1310     04BC  001E               	movwi fsr1++
  1311     04BD  0BFE               	decfsz	btemp,f
  1312     04BE  2CBB               	goto	initloop
  1313     04BF  3400               	retlw	0
  1314                           
  1315                           	psect	clrtext
  1316     04C0                     clear_ram0:	
  1317                           ;	Called with FSR0 containing the base address, and
  1318                           ;	WREG with the size to clear
  1319                           
  1320     04C0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1321     04C1                     clrloop0:
  1322     04C1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1323     04C2  3101               	addfsr 0,1
  1324     04C3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1325     04C4  2CC1               	goto	clrloop0	;have we reached the end yet?
  1326     04C5  3400               	retlw	0	;all done for this memory range, return
  1327                           
  1328                           	psect	cstackCOMMON
  1329     0070                     __pcstackCOMMON:
  1330     0070                     ?_configUART1:
  1331     0070                     ?_configISR:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334     0070                     ?_I2C_stop:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337     0070                     ?_configI2C:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340     0070                     ?_I2C_start:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343     0070                     ?_I2C_write:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346     0070                     ?_HAL_Pulse_Enable:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349     0070                     ?__write_byte:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352     0070                     ?_HAL_Write_Init_Nibble:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355     0070                     ?_HAL_Write_Command:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358     0070                     ?_HAL_Write_Data:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361     0070                     ?_HAL_Clear:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364     0070                     ?_HAL_Display_On:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367     0070                     ?_init_LCD:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370     0070                     ?_initinit:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373     0070                     ?_configPins:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376     0070                     ?_intToChar:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379     0070                     ?_alienFrequencyTask:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382     0070                     ?_initialize_all:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385     0070                     ?_main:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388     0070                     ?_Joystick:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391     0070                     ??_Joystick:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394                           
  1395                           ; 1 bytes @ 0x0
  1396     0070                     	ds	3
  1397     0073                     ?_HAL_LED_OFF:
  1398     0073                     ?___awdiv:	
  1399                           ; 1 bytes @ 0x3
  1400                           
  1401     0073                     ?___lwdiv:	
  1402                           ; 2 bytes @ 0x3
  1403                           
  1404     0073                     ?___lwmod:	
  1405                           ; 2 bytes @ 0x3
  1406                           
  1407     0073                     I2C_write@data:	
  1408                           ; 2 bytes @ 0x3
  1409                           
  1410     0073                     intToChar@integer:	
  1411                           ; 1 bytes @ 0x3
  1412                           
  1413     0073                     HAL_LED_OFF@LED:	
  1414                           ; 1 bytes @ 0x3
  1415                           
  1416     0073                     ___awdiv@divisor:	
  1417                           ; 2 bytes @ 0x3
  1418                           
  1419     0073                     ___lwdiv@divisor:	
  1420                           ; 2 bytes @ 0x3
  1421                           
  1422     0073                     ___lwmod@divisor:	
  1423                           ; 2 bytes @ 0x3
  1424                           
  1425     0073                     ??_configUART1:	
  1426                           ; 2 bytes @ 0x3
  1427                           
  1428     0073                     ??_configISR:	
  1429                           ; 1 bytes @ 0x3
  1430                           
  1431     0073                     ??_I2C_stop:	
  1432                           ; 1 bytes @ 0x3
  1433                           
  1434     0073                     ??_configI2C:	
  1435                           ; 1 bytes @ 0x3
  1436                           
  1437     0073                     ??_I2C_start:	
  1438                           ; 1 bytes @ 0x3
  1439                           
  1440     0073                     ??_I2C_write:	
  1441                           ; 1 bytes @ 0x3
  1442                           
  1443     0073                     ??_configPins:	
  1444                           ; 1 bytes @ 0x3
  1445                           
  1446     0073                     ??_intToChar:	
  1447                           ; 1 bytes @ 0x3
  1448                           
  1449                           
  1450                           ; 1 bytes @ 0x3
  1451     0073                     	ds	1
  1452     0074                     ?_HAL_I2C_Master_Transmit:
  1453     0074                     HAL_I2C_Master_Transmit@dataByte:	
  1454                           ; 1 bytes @ 0x4
  1455                           
  1456                           
  1457                           ; 1 bytes @ 0x4
  1458     0074                     	ds	1
  1459     0075                     HAL_I2C_Master_Transmit@numberOfDataBytes:
  1460     0075                     ___awdiv@dividend:	
  1461                           ; 1 bytes @ 0x5
  1462                           
  1463     0075                     ___lwdiv@dividend:	
  1464                           ; 2 bytes @ 0x5
  1465                           
  1466     0075                     ___lwmod@dividend:	
  1467                           ; 2 bytes @ 0x5
  1468                           
  1469     0075                     ??_HAL_LED_OFF:	
  1470                           ; 2 bytes @ 0x5
  1471                           
  1472                           
  1473                           ; 1 bytes @ 0x5
  1474     0075                     	ds	1
  1475     0076                     HAL_I2C_Master_Transmit@slaveAddress:
  1476     0076                     ??_HAL_I2C_Master_Transmit:	
  1477                           ; 1 bytes @ 0x6
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0x6
  1481     0076                     	ds	1
  1482     0077                     HAL_Pulse_Enable@byte:
  1483     0077                     ___lwmod@counter:	
  1484                           ; 1 bytes @ 0x7
  1485                           
  1486     0077                     ___lwdiv@quotient:	
  1487                           ; 1 bytes @ 0x7
  1488                           
  1489     0077                     ??_HAL_Pulse_Enable:	
  1490                           ; 2 bytes @ 0x7
  1491                           
  1492     0077                     ??___awdiv:	
  1493                           ; 1 bytes @ 0x7
  1494                           
  1495     0077                     ??___lwdiv:	
  1496                           ; 1 bytes @ 0x7
  1497                           
  1498     0077                     ??___lwmod:	
  1499                           ; 1 bytes @ 0x7
  1500                           
  1501                           
  1502                           ; 1 bytes @ 0x7
  1503     0077                     	ds	1
  1504     0078                     __write_byte@byte:
  1505     0078                     ??__write_byte:	
  1506                           ; 1 bytes @ 0x8
  1507                           
  1508     0078                     ??_HAL_Write_Init_Nibble:	
  1509                           ; 1 bytes @ 0x8
  1510                           
  1511                           
  1512                           ; 1 bytes @ 0x8
  1513     0078                     	ds	1
  1514     0079                     ___lwdiv@counter:
  1515     0079                     ??_HAL_Write_Command:	
  1516                           ; 1 bytes @ 0x9
  1517                           
  1518     0079                     ??_HAL_Write_Data:	
  1519                           ; 1 bytes @ 0x9
  1520                           
  1521                           
  1522                           ; 1 bytes @ 0x9
  1523     0079                     	ds	1
  1524     007A                     ??_HAL_Display_On:
  1525     007A                     ??_HAL_Set_Entry_Mode:	
  1526                           ; 1 bytes @ 0xA
  1527                           
  1528     007A                     ??_HAL_Set_Cursor:	
  1529                           ; 1 bytes @ 0xA
  1530                           
  1531     007A                     ??_init_LCD:	
  1532                           ; 1 bytes @ 0xA
  1533                           
  1534     007A                     ??_initialize_all:	
  1535                           ; 1 bytes @ 0xA
  1536                           
  1537     007A                     ??_main:	
  1538                           ; 1 bytes @ 0xA
  1539                           
  1540                           
  1541                           	psect	cstackBANK0
  1542     0044                     __pcstackBANK0:	
  1543                           ; 1 bytes @ 0xA
  1544                           
  1545     0044                     HAL_Write_Init_Nibble@nibble:
  1546     0044                     HAL_Write_Command@cmd:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549     0044                     HAL_Write_Data@data:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552     0044                     ___awdiv@counter:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555                           
  1556                           ; 1 bytes @ 0x0
  1557     0044                     	ds	1
  1558     0045                     ?_HAL_Set_Entry_Mode:
  1559     0045                     ?_HAL_Set_Cursor:	
  1560                           ; 1 bytes @ 0x1
  1561                           
  1562     0045                     ?_HAL_LCD_Print:	
  1563                           ; 1 bytes @ 0x1
  1564                           
  1565     0045                     HAL_Write_Init_Nibble@byte:	
  1566                           ; 1 bytes @ 0x1
  1567                           
  1568     0045                     HAL_LCD_Print@string:	
  1569                           ; 1 bytes @ 0x1
  1570                           
  1571     0045                     ___awdiv@sign:	
  1572                           ; 1 bytes @ 0x1
  1573                           
  1574     0045                     HAL_Set_Entry_Mode@inc:	
  1575                           ; 1 bytes @ 0x1
  1576                           
  1577     0045                     HAL_Set_Cursor@col:	
  1578                           ; 2 bytes @ 0x1
  1579                           
  1580     0045                     ??_HAL_Clear:	
  1581                           ; 2 bytes @ 0x1
  1582                           
  1583                           
  1584                           ; 1 bytes @ 0x1
  1585     0045                     	ds	1
  1586     0046                     HAL_LCD_Print@size:
  1587     0046                     ___awdiv@quotient:	
  1588                           ; 2 bytes @ 0x2
  1589                           
  1590                           
  1591                           ; 2 bytes @ 0x2
  1592     0046                     	ds	1
  1593     0047                     HAL_Set_Entry_Mode@shift:
  1594     0047                     HAL_Set_Cursor@line:	
  1595                           ; 2 bytes @ 0x3
  1596                           
  1597                           
  1598                           ; 2 bytes @ 0x3
  1599     0047                     	ds	1
  1600     0048                     ??_HAL_LCD_Print:
  1601                           
  1602                           ; 1 bytes @ 0x4
  1603     0048                     	ds	1
  1604     0049                     HAL_Set_Entry_Mode@entry_mode:
  1605     0049                     HAL_Set_Cursor@addr:	
  1606                           ; 2 bytes @ 0x5
  1607                           
  1608     0049                     HAL_LCD_Print@i:	
  1609                           ; 2 bytes @ 0x5
  1610                           
  1611                           
  1612                           ; 2 bytes @ 0x5
  1613     0049                     	ds	2
  1614     004B                     ??_initinit:
  1615     004B                     ??_alienFrequencyTask:	
  1616                           ; 1 bytes @ 0x7
  1617                           
  1618                           
  1619                           ; 1 bytes @ 0x7
  1620     004B                     	ds	2
  1621     004D                     alienFrequencyTask@freq_char:
  1622                           
  1623                           ; 4 bytes @ 0x9
  1624     004D                     	ds	4
  1625     0051                     alienFrequencyTask@freq_digit:
  1626                           
  1627                           ; 4 bytes @ 0xD
  1628     0051                     	ds	4
  1629     0055                     alienFrequencyTask@counter:
  1630                           
  1631                           ; 1 bytes @ 0x11
  1632     0055                     	ds	1
  1633     0056                     alienFrequencyTask@i:
  1634                           
  1635                           ; 2 bytes @ 0x12
  1636     0056                     	ds	2
  1637                           
  1638                           	psect	maintext
  1639     03A4                     __pmaintext:	
  1640 ;;
  1641 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1642 ;;
  1643 ;; *************** function _main *****************
  1644 ;; Defined at:
  1645 ;;		line 565 in file "Rover_Main_Ver01.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : B1F/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels required when called: 10
  1665 ;; This function calls:
  1666 ;;		_HAL_LCD_Print
  1667 ;;		_alienFrequencyTask
  1668 ;;		_initialize_all
  1669 ;; This function is called by:
  1670 ;;		Startup code after reset
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674     03A4                     _main:	
  1675                           ;psect for function _main
  1676                           
  1677     03A4                     l2058:	
  1678                           ;incstack = 0
  1679                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1680                           
  1681                           
  1682                           ;Rover_Main_Ver01.c: 566:     initialize_all();
  1683     03A4  3181  2199  3183   	fcall	_initialize_all
  1684     03A7                     l2060:
  1685                           
  1686                           ;Rover_Main_Ver01.c: 567:     LATBbits.LATB4 = 1;
  1687     03A7  0020               	movlb	0	; select bank0
  1688     03A8  1617               	bsf	23,4	;volatile
  1689     03A9                     l2062:
  1690                           
  1691                           ;Rover_Main_Ver01.c: 569:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1692     03A9  30C8               	movlw	200
  1693     03AA                     u1207:
  1694     03AA  3200               	nop2
  1695     03AB  0B89               	decfsz	9,f
  1696     03AC  2BAA               	goto	u1207
  1697     03AD                     l2064:
  1698                           
  1699                           ;Rover_Main_Ver01.c: 570:         HAL_LCD_Print(&Rover_Team[0], 16);
  1700     03AD  3034               	movlw	(low (_Rover_Team| 0))& (0+255)
  1701     03AE  0020               	movlb	0	; select bank0
  1702     03AF  00C5               	movwf	HAL_LCD_Print@string
  1703     03B0  3010               	movlw	16
  1704     03B1  00C6               	movwf	HAL_LCD_Print@size
  1705     03B2  3000               	movlw	0
  1706     03B3  00C7               	movwf	HAL_LCD_Print@size+1
  1707     03B4  3182  22EE  3183   	fcall	_HAL_LCD_Print
  1708     03B7                     l267:	
  1709                           ;Rover_Main_Ver01.c: 572:         }
  1710                           
  1711                           
  1712                           ;Rover_Main_Ver01.c: 571:         while(PORTAbits.RA5 == 1){
  1713     03B7  0020               	movlb	0	; select bank0
  1714     03B8  1A8C               	btfsc	12,5	;volatile
  1715     03B9  2BBB               	goto	u1191
  1716     03BA  2BBC               	goto	u1190
  1717     03BB                     u1191:
  1718     03BB  2BB7               	goto	l267
  1719     03BC                     u1190:
  1720     03BC                     l2066:
  1721                           
  1722                           ;Rover_Main_Ver01.c: 573:         alienFrequencyTask();
  1723     03BC  3180  2062  3183   	fcall	_alienFrequencyTask
  1724     03BF  2BA9               	goto	l2062
  1725     03C0  3180  283B         	ljmp	start
  1726     03C2                     __end_of_main:
  1727                           
  1728                           	psect	text1
  1729     0199                     __ptext1:	
  1730 ;; *************** function _initialize_all *****************
  1731 ;; Defined at:
  1732 ;;		line 543 in file "Rover_Main_Ver01.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 9
  1753 ;; This function calls:
  1754 ;;		_HAL_LED_OFF
  1755 ;;		_configI2C
  1756 ;;		_configISR
  1757 ;;		_configPins
  1758 ;;		_configUART1
  1759 ;;		_init_LCD
  1760 ;;		_initinit
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766     0199                     _initialize_all:	
  1767                           ;psect for function _initialize_all
  1768                           
  1769     0199                     l2000:	
  1770                           ;incstack = 0
  1771                           ; Regs used in _initialize_all: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1772                           
  1773                           
  1774                           ;Rover_Main_Ver01.c: 544:     LCD._backlight = 0x8;
  1775     0199  3008               	movlw	8
  1776     019A  0020               	movlb	0	; select bank0
  1777     019B  00E2               	movwf	_LCD+10
  1778     019C  3000               	movlw	0
  1779     019D  00E3               	movwf	_LCD+11
  1780     019E                     l2002:
  1781                           
  1782                           ;Rover_Main_Ver01.c: 545:     LCD._current_state = 0x0;
  1783     019E  01E0               	clrf	_LCD+8
  1784     019F  01E1               	clrf	_LCD+9
  1785     01A0                     l2004:
  1786                           
  1787                           ;Rover_Main_Ver01.c: 546:     LCD.i2c = 1;
  1788     01A0  3001               	movlw	1
  1789     01A1  00DA               	movwf	_LCD+2
  1790     01A2  3000               	movlw	0
  1791     01A3  00DB               	movwf	_LCD+3
  1792     01A4                     l2006:
  1793                           
  1794                           ;Rover_Main_Ver01.c: 547:     LCD.i2c_addr = 39<<1;
  1795     01A4  304E               	movlw	78
  1796     01A5  00D8               	movwf	_LCD
  1797     01A6  3000               	movlw	0
  1798     01A7  00D9               	movwf	_LCD+1
  1799     01A8                     l2008:
  1800                           
  1801                           ;Rover_Main_Ver01.c: 548:     LCD.num_columns = 16;
  1802     01A8  3010               	movlw	16
  1803     01A9  00DE               	movwf	_LCD+6
  1804     01AA  3000               	movlw	0
  1805     01AB  00DF               	movwf	_LCD+7
  1806     01AC                     l2010:
  1807                           
  1808                           ;Rover_Main_Ver01.c: 549:     LCD.num_lines = 2;
  1809     01AC  3002               	movlw	2
  1810     01AD  00DC               	movwf	_LCD+4
  1811     01AE  3000               	movlw	0
  1812     01AF  00DD               	movwf	_LCD+5
  1813     01B0                     l2012:
  1814                           
  1815                           ;Rover_Main_Ver01.c: 550:     configPins();
  1816     01B0  3181  21DF  3181   	fcall	_configPins
  1817     01B3                     l2014:
  1818                           
  1819                           ;Rover_Main_Ver01.c: 551:     configI2C();
  1820     01B3  3184  24A2  3181   	fcall	_configI2C
  1821     01B6                     l2016:
  1822                           
  1823                           ;Rover_Main_Ver01.c: 552:     configUART1();
  1824     01B6  3184  244E  3181   	fcall	_configUART1
  1825     01B9                     l2018:
  1826                           
  1827                           ;Rover_Main_Ver01.c: 553:     initinit();
  1828     01B9  3182  22BD  3181   	fcall	_initinit
  1829     01BC                     l2020:
  1830                           
  1831                           ;Rover_Main_Ver01.c: 554:     init_LCD();
  1832     01BC  3184  243C  3181   	fcall	_init_LCD
  1833     01BF                     l2022:
  1834                           
  1835                           ;Rover_Main_Ver01.c: 555:     configISR();
  1836     01BF  3184  24CB  3181   	fcall	_configISR
  1837     01C2                     l2024:
  1838                           
  1839                           ;Rover_Main_Ver01.c: 557:     HAL_LED_OFF(1);
  1840     01C2  3001               	movlw	1
  1841     01C3  00F3               	movwf	HAL_LED_OFF@LED
  1842     01C4  3000               	movlw	0
  1843     01C5  00F4               	movwf	HAL_LED_OFF@LED+1
  1844     01C6  3183  2383  3181   	fcall	_HAL_LED_OFF
  1845     01C9                     l2026:
  1846                           
  1847                           ;Rover_Main_Ver01.c: 558:     HAL_LED_OFF(2);
  1848     01C9  3002               	movlw	2
  1849     01CA  00F3               	movwf	HAL_LED_OFF@LED
  1850     01CB  3000               	movlw	0
  1851     01CC  00F4               	movwf	HAL_LED_OFF@LED+1
  1852     01CD  3183  2383  3181   	fcall	_HAL_LED_OFF
  1853     01D0                     l2028:
  1854                           
  1855                           ;Rover_Main_Ver01.c: 559:     HAL_LED_OFF(3);
  1856     01D0  3003               	movlw	3
  1857     01D1  00F3               	movwf	HAL_LED_OFF@LED
  1858     01D2  3000               	movlw	0
  1859     01D3  00F4               	movwf	HAL_LED_OFF@LED+1
  1860     01D4  3183  2383  3181   	fcall	_HAL_LED_OFF
  1861     01D7                     l2030:
  1862                           
  1863                           ;Rover_Main_Ver01.c: 560:     HAL_LED_OFF(4);
  1864     01D7  3004               	movlw	4
  1865     01D8  00F3               	movwf	HAL_LED_OFF@LED
  1866     01D9  3000               	movlw	0
  1867     01DA  00F4               	movwf	HAL_LED_OFF@LED+1
  1868     01DB  3183  2383  3181   	fcall	_HAL_LED_OFF
  1869     01DE                     l261:
  1870     01DE  0008               	return
  1871     01DF                     __end_of_initialize_all:
  1872                           
  1873                           	psect	text2
  1874     02BD                     __ptext2:	
  1875 ;; *************** function _initinit *****************
  1876 ;; Defined at:
  1877 ;;		line 343 in file "Rover_Main_Ver01.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1895 ;;Total ram usage:        1 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; Hardware stack levels required when called: 8
  1898 ;; This function calls:
  1899 ;;		_HAL_Write_Init_Nibble
  1900 ;;		_init_LCD
  1901 ;; This function is called by:
  1902 ;;		_initialize_all
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906     02BD                     _initinit:	
  1907                           ;psect for function _initinit
  1908                           
  1909     02BD                     l1890:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _initinit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1912                           
  1913                           
  1914                           ;Rover_Main_Ver01.c: 344:  _delay((unsigned long)((20)*(4000000/4000.0)));
  1915     02BD  301A               	movlw	26
  1916     02BE  0020               	movlb	0	; select bank0
  1917     02BF  00CB               	movwf	??_initinit
  1918     02C0  30F8               	movlw	248
  1919     02C1                     u1217:
  1920     02C1  0B89               	decfsz	9,f
  1921     02C2  2AC1               	goto	u1217
  1922     02C3  0BCB               	decfsz	??_initinit,f
  1923     02C4  2AC1               	goto	u1217
  1924     02C5  0000               	nop
  1925     02C6                     l1892:
  1926                           
  1927                           ;Rover_Main_Ver01.c: 345:  HAL_Write_Init_Nibble(0x30);
  1928     02C6  3030               	movlw	48
  1929     02C7  3183  2361  3182   	fcall	_HAL_Write_Init_Nibble
  1930     02CA                     l1894:
  1931                           
  1932                           ;Rover_Main_Ver01.c: 346:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1933     02CA  3007               	movlw	7
  1934     02CB  0020               	movlb	0	; select bank0
  1935     02CC  00CB               	movwf	??_initinit
  1936     02CD  307D               	movlw	125
  1937     02CE                     u1227:
  1938     02CE  0B89               	decfsz	9,f
  1939     02CF  2ACE               	goto	u1227
  1940     02D0  0BCB               	decfsz	??_initinit,f
  1941     02D1  2ACE               	goto	u1227
  1942                           
  1943                           ;Rover_Main_Ver01.c: 347:  HAL_Write_Init_Nibble(0x30);
  1944     02D2  3030               	movlw	48
  1945     02D3  3183  2361  3182   	fcall	_HAL_Write_Init_Nibble
  1946     02D6                     l1896:
  1947                           
  1948                           ;Rover_Main_Ver01.c: 348:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1949     02D6  30C8               	movlw	200
  1950     02D7                     u1237:
  1951     02D7  3200               	nop2
  1952     02D8  0B89               	decfsz	9,f
  1953     02D9  2AD7               	goto	u1237
  1954     02DA                     l1898:
  1955                           
  1956                           ;Rover_Main_Ver01.c: 349:  HAL_Write_Init_Nibble(0x30);
  1957     02DA  3030               	movlw	48
  1958     02DB  3183  2361  3182   	fcall	_HAL_Write_Init_Nibble
  1959                           
  1960                           ;Rover_Main_Ver01.c: 350:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1961     02DE  30C8               	movlw	200
  1962     02DF                     u1247:
  1963     02DF  3200               	nop2
  1964     02E0  0B89               	decfsz	9,f
  1965     02E1  2ADF               	goto	u1247
  1966     02E2                     l1900:
  1967                           
  1968                           ;Rover_Main_Ver01.c: 351:  HAL_Write_Init_Nibble(0x20);
  1969     02E2  3020               	movlw	32
  1970     02E3  3183  2361  3182   	fcall	_HAL_Write_Init_Nibble
  1971     02E6                     l1902:
  1972                           
  1973                           ;Rover_Main_Ver01.c: 352:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1974     02E6  30C8               	movlw	200
  1975     02E7                     u1257:
  1976     02E7  3200               	nop2
  1977     02E8  0B89               	decfsz	9,f
  1978     02E9  2AE7               	goto	u1257
  1979                           
  1980                           ;Rover_Main_Ver01.c: 353:  init_LCD();
  1981     02EA  3184  243C  3182   	fcall	_init_LCD
  1982     02ED                     l197:
  1983     02ED  0008               	return
  1984     02EE                     __end_of_initinit:
  1985                           
  1986                           	psect	text3
  1987     043C                     __ptext3:	
  1988 ;; *************** function _init_LCD *****************
  1989 ;; Defined at:
  1990 ;;		line 337 in file "Rover_Main_Ver01.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 7
  2011 ;; This function calls:
  2012 ;;		_HAL_Clear
  2013 ;;		_HAL_Display_On
  2014 ;;		_HAL_Set_Entry_Mode
  2015 ;; This function is called by:
  2016 ;;		_initinit
  2017 ;;		_initialize_all
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021     043C                     _init_LCD:	
  2022                           ;psect for function _init_LCD
  2023                           
  2024     043C                     l1864:	
  2025                           ;incstack = 0
  2026                           ; Regs used in _init_LCD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2027                           
  2028                           
  2029                           ;Rover_Main_Ver01.c: 338:  HAL_Display_On();
  2030     043C  3184  24C6  3184   	fcall	_HAL_Display_On
  2031                           
  2032                           ;Rover_Main_Ver01.c: 339:  HAL_Clear();
  2033     043F  3184  2494  3184   	fcall	_HAL_Clear
  2034                           
  2035                           ;Rover_Main_Ver01.c: 340:  HAL_Set_Entry_Mode(1,0);
  2036     0442  3001               	movlw	1
  2037     0443  0020               	movlb	0	; select bank0
  2038     0444  00C5               	movwf	HAL_Set_Entry_Mode@inc
  2039     0445  3000               	movlw	0
  2040     0446  00C6               	movwf	HAL_Set_Entry_Mode@inc+1
  2041     0447  3000               	movlw	0
  2042     0448  00C7               	movwf	HAL_Set_Entry_Mode@shift
  2043     0449  00C8               	movwf	HAL_Set_Entry_Mode@shift+1
  2044     044A  3183  23FB  3184   	fcall	_HAL_Set_Entry_Mode
  2045     044D                     l194:
  2046     044D  0008               	return
  2047     044E                     __end_of_init_LCD:
  2048                           
  2049                           	psect	text4
  2050     03FB                     __ptext4:	
  2051 ;; *************** function _HAL_Set_Entry_Mode *****************
  2052 ;; Defined at:
  2053 ;;		line 302 in file "Rover_Main_Ver01.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  inc             2    1[BANK0 ] int 
  2056 ;;  shift           2    3[BANK0 ] int 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  entry_mode      2    5[BANK0 ] int 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;Total ram usage:        6 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 6
  2075 ;; This function calls:
  2076 ;;		_HAL_Write_Command
  2077 ;; This function is called by:
  2078 ;;		_init_LCD
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082     03FB                     _HAL_Set_Entry_Mode:	
  2083                           ;psect for function _HAL_Set_Entry_Mode
  2084                           
  2085     03FB                     l1844:	
  2086                           ;incstack = 0
  2087                           ; Regs used in _HAL_Set_Entry_Mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2088                           
  2089                           
  2090                           ;Rover_Main_Ver01.c: 303:  int entry_mode = 0x04;
  2091     03FB  3004               	movlw	4
  2092     03FC  0020               	movlb	0	; select bank0
  2093     03FD  00C9               	movwf	HAL_Set_Entry_Mode@entry_mode
  2094     03FE  3000               	movlw	0
  2095     03FF  00CA               	movwf	HAL_Set_Entry_Mode@entry_mode+1
  2096     0400                     l1846:
  2097                           
  2098                           ;Rover_Main_Ver01.c: 304:  if (inc){
  2099     0400  0845               	movf	HAL_Set_Entry_Mode@inc,w
  2100     0401  0446               	iorwf	HAL_Set_Entry_Mode@inc+1,w
  2101     0402  1903               	btfsc	3,2
  2102     0403  2C05               	goto	u961
  2103     0404  2C06               	goto	u960
  2104     0405                     u961:
  2105     0405  2C07               	goto	l1850
  2106     0406                     u960:
  2107     0406                     l1848:
  2108                           
  2109                           ;Rover_Main_Ver01.c: 305:   entry_mode |= 0x02;
  2110     0406  14C9               	bsf	HAL_Set_Entry_Mode@entry_mode,1
  2111     0407                     l1850:
  2112                           
  2113                           ;Rover_Main_Ver01.c: 307:  if (shift){
  2114     0407  0847               	movf	HAL_Set_Entry_Mode@shift,w
  2115     0408  0448               	iorwf	HAL_Set_Entry_Mode@shift+1,w
  2116     0409  1903               	btfsc	3,2
  2117     040A  2C0C               	goto	u971
  2118     040B  2C0D               	goto	u970
  2119     040C                     u971:
  2120     040C  2C0E               	goto	l1854
  2121     040D                     u970:
  2122     040D                     l1852:
  2123                           
  2124                           ;Rover_Main_Ver01.c: 308:   entry_mode |= 0x01;
  2125     040D  1449               	bsf	HAL_Set_Entry_Mode@entry_mode,0
  2126     040E                     l1854:
  2127                           
  2128                           ;Rover_Main_Ver01.c: 310:  HAL_Write_Command(entry_mode);
  2129     040E  0849               	movf	HAL_Set_Entry_Mode@entry_mode,w
  2130     040F  3183  233E  3183   	fcall	_HAL_Write_Command
  2131     0412                     l177:
  2132     0412  0008               	return
  2133     0413                     __end_of_HAL_Set_Entry_Mode:
  2134                           
  2135                           	psect	text5
  2136     04C6                     __ptext5:	
  2137 ;; *************** function _HAL_Display_On *****************
  2138 ;; Defined at:
  2139 ;;		line 294 in file "Rover_Main_Ver01.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 6
  2160 ;; This function calls:
  2161 ;;		_HAL_Write_Command
  2162 ;; This function is called by:
  2163 ;;		_init_LCD
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167     04C6                     _HAL_Display_On:	
  2168                           ;psect for function _HAL_Display_On
  2169                           
  2170     04C6                     l1842:	
  2171                           ;incstack = 0
  2172                           ; Regs used in _HAL_Display_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2173                           
  2174                           
  2175                           ;Rover_Main_Ver01.c: 295:  HAL_Write_Command(0x08 | 0x04);
  2176     04C6  300C               	movlw	12
  2177     04C7  3183  233E  3184   	fcall	_HAL_Write_Command
  2178     04CA                     l169:
  2179     04CA  0008               	return
  2180     04CB                     __end_of_HAL_Display_On:
  2181                           
  2182                           	psect	text6
  2183     0361                     __ptext6:	
  2184 ;; *************** function _HAL_Write_Init_Nibble *****************
  2185 ;; Defined at:
  2186 ;;		line 238 in file "Rover_Main_Ver01.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  nibble          1    wreg     unsigned char 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  nibble          1    0[BANK0 ] unsigned char 
  2191 ;;  byte            1    1[BANK0 ] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;Total ram usage:        4 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 4
  2208 ;; This function calls:
  2209 ;;		_HAL_I2C_Master_Transmit
  2210 ;;		_HAL_Pulse_Enable
  2211 ;; This function is called by:
  2212 ;;		_initinit
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216     0361                     _HAL_Write_Init_Nibble:	
  2217                           ;psect for function _HAL_Write_Init_Nibble
  2218                           
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _HAL_Write_Init_Nibble: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2222                           ;HAL_Write_Init_Nibble@nibble stored from wreg
  2223     0361  0020               	movlb	0	; select bank0
  2224     0362  00C4               	movwf	HAL_Write_Init_Nibble@nibble
  2225     0363                     l1856:
  2226                           
  2227                           ;Rover_Main_Ver01.c: 239:  uint8_t byte = ((nibble >> 4) & 0x0F) << 4;
  2228     0363  0844               	movf	HAL_Write_Init_Nibble@nibble,w
  2229     0364  00F8               	movwf	??_HAL_Write_Init_Nibble
  2230     0365  3004               	movlw	4
  2231     0366                     u985:
  2232     0366  36F8               	lsrf	??_HAL_Write_Init_Nibble,f
  2233     0367  0B89               	decfsz	9,f
  2234     0368  2B66               	goto	u985
  2235     0369  0878               	movf	??_HAL_Write_Init_Nibble,w
  2236     036A  390F               	andlw	15
  2237     036B  00F9               	movwf	??_HAL_Write_Init_Nibble+1
  2238     036C  3004               	movlw	4
  2239     036D                     u995:
  2240     036D  35F9               	lslf	??_HAL_Write_Init_Nibble+1,f
  2241     036E  0B89               	decfsz	9,f
  2242     036F  2B6D               	goto	u995
  2243     0370  0879               	movf	??_HAL_Write_Init_Nibble+1,w
  2244     0371  00C5               	movwf	HAL_Write_Init_Nibble@byte
  2245                           
  2246                           ;Rover_Main_Ver01.c: 240:  byte = (byte | 0 | LCD._backlight);
  2247     0372  0862               	movf	_LCD+10,w
  2248     0373  0445               	iorwf	HAL_Write_Init_Nibble@byte,w
  2249     0374  00C5               	movwf	HAL_Write_Init_Nibble@byte
  2250     0375                     l1858:
  2251                           
  2252                           ;Rover_Main_Ver01.c: 241:  HAL_I2C_Master_Transmit(LCD.i2c_addr, &byte, 1);
  2253     0375  3045               	movlw	(low (HAL_Write_Init_Nibble@byte| 0))& (0+255)
  2254     0376  00F4               	movwf	HAL_I2C_Master_Transmit@dataByte
  2255     0377  01F5               	clrf	HAL_I2C_Master_Transmit@numberOfDataBytes
  2256     0378  0AF5               	incf	HAL_I2C_Master_Transmit@numberOfDataBytes,f
  2257     0379  0858               	movf	_LCD,w
  2258     037A  3184  2429  3183   	fcall	_HAL_I2C_Master_Transmit
  2259     037D                     l1860:
  2260                           
  2261                           ;Rover_Main_Ver01.c: 242:  HAL_Pulse_Enable(byte);
  2262     037D  0020               	movlb	0	; select bank0
  2263     037E  0845               	movf	HAL_Write_Init_Nibble@byte,w
  2264     037F  3183  23DF  3183   	fcall	_HAL_Pulse_Enable
  2265     0382                     l138:
  2266     0382  0008               	return
  2267     0383                     __end_of_HAL_Write_Init_Nibble:
  2268                           
  2269                           	psect	text7
  2270     044E                     __ptext7:	
  2271 ;; *************** function _configUART1 *****************
  2272 ;; Defined at:
  2273 ;;		line 117 in file "Rover_Main_Ver01.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		status,2
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2291 ;;Total ram usage:        0 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_initialize_all
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301     044E                     _configUART1:	
  2302                           ;psect for function _configUART1
  2303                           
  2304     044E                     l1418:	
  2305                           ;incstack = 0
  2306                           ; Regs used in _configUART1: [status,2]
  2307                           
  2308                           
  2309                           ;Rover_Main_Ver01.c: 119:     BAUD1CONbits.RCIDL = 1;
  2310     044E  0022               	movlb	2	; select bank2
  2311     044F  171F               	bsf	31,6	;volatile
  2312                           
  2313                           ;Rover_Main_Ver01.c: 120:     BAUD1CONbits.SCKP = 0;
  2314     0450  121F               	bcf	31,4	;volatile
  2315                           
  2316                           ;Rover_Main_Ver01.c: 121:     BAUD1CONbits.WUE = 0;
  2317     0451  109F               	bcf	31,1	;volatile
  2318                           
  2319                           ;Rover_Main_Ver01.c: 122:     BAUD1CONbits.ABDEN = 0;
  2320     0452  101F               	bcf	31,0	;volatile
  2321                           
  2322                           ;Rover_Main_Ver01.c: 123:     BRG16 = 1;
  2323     0453  159F               	bsf	31,3	;volatile
  2324                           
  2325                           ;Rover_Main_Ver01.c: 124:     BRGH = 1;
  2326     0454  151E               	bsf	30,2	;volatile
  2327     0455                     l1420:
  2328                           
  2329                           ;Rover_Main_Ver01.c: 125:     SP1BRGH = 0b00000000;
  2330     0455  019C               	clrf	28	;volatile
  2331     0456                     l1422:
  2332                           
  2333                           ;Rover_Main_Ver01.c: 126:     SP1BRGL = 0b01000100;
  2334     0456  3044               	movlw	68
  2335     0457  009B               	movwf	27	;volatile
  2336     0458                     l1424:
  2337                           
  2338                           ;Rover_Main_Ver01.c: 127:     RC1STAbits.RX9 = 0;
  2339     0458  131D               	bcf	29,6	;volatile
  2340     0459                     l1426:
  2341                           
  2342                           ;Rover_Main_Ver01.c: 128:     TX1STAbits.SYNC = 0;
  2343     0459  121E               	bcf	30,4	;volatile
  2344     045A                     l1428:
  2345                           
  2346                           ;Rover_Main_Ver01.c: 129:     TX1STAbits.TXEN = 1;
  2347     045A  169E               	bsf	30,5	;volatile
  2348     045B                     l1430:
  2349                           
  2350                           ;Rover_Main_Ver01.c: 130:     RC1STAbits.SPEN = 1;
  2351     045B  179D               	bsf	29,7	;volatile
  2352     045C                     l1432:
  2353                           
  2354                           ;Rover_Main_Ver01.c: 131:     RC1STAbits.CREN = 1;
  2355     045C  161D               	bsf	29,4	;volatile
  2356     045D                     l1434:
  2357                           
  2358                           ;Rover_Main_Ver01.c: 132:     RC1STAbits.FERR = 0;
  2359     045D  111D               	bcf	29,2	;volatile
  2360     045E                     l1436:
  2361                           
  2362                           ;Rover_Main_Ver01.c: 133:     RC1STAbits.OERR = 0;
  2363     045E  109D               	bcf	29,1	;volatile
  2364     045F                     l81:
  2365     045F  0008               	return
  2366     0460                     __end_of_configUART1:
  2367                           
  2368                           	psect	text8
  2369     01DF                     __ptext8:	
  2370 ;; *************** function _configPins *****************
  2371 ;; Defined at:
  2372 ;;		line 395 in file "Rover_Main_Ver01.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 1
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_initialize_all
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400     01DF                     _configPins:	
  2401                           ;psect for function _configPins
  2402                           
  2403     01DF                     l1494:	
  2404                           ;incstack = 0
  2405                           ; Regs used in _configPins: [wreg+status,2+status,0]
  2406                           
  2407                           
  2408                           ;Rover_Main_Ver01.c: 397:     TRISAbits.TRISA0 = 0;
  2409     01DF  0020               	movlb	0	; select bank0
  2410     01E0  1011               	bcf	17,0	;volatile
  2411                           
  2412                           ;Rover_Main_Ver01.c: 398:     ANSELAbits.ANSA0 = 0;
  2413     01E1  003E               	movlb	30	; select bank30
  2414     01E2  1038               	bcf	56,0	;volatile
  2415                           
  2416                           ;Rover_Main_Ver01.c: 400:     TRISAbits.TRISA1 = 0;
  2417     01E3  0020               	movlb	0	; select bank0
  2418     01E4  1091               	bcf	17,1	;volatile
  2419                           
  2420                           ;Rover_Main_Ver01.c: 401:     ANSELAbits.ANSA1 = 0;
  2421     01E5  003E               	movlb	30	; select bank30
  2422     01E6  10B8               	bcf	56,1	;volatile
  2423                           
  2424                           ;Rover_Main_Ver01.c: 403:     TRISAbits.TRISA2 = 0;
  2425     01E7  0020               	movlb	0	; select bank0
  2426     01E8  1111               	bcf	17,2	;volatile
  2427                           
  2428                           ;Rover_Main_Ver01.c: 404:     ANSELAbits.ANSA2 = 0;
  2429     01E9  003E               	movlb	30	; select bank30
  2430     01EA  1138               	bcf	56,2	;volatile
  2431                           
  2432                           ;Rover_Main_Ver01.c: 406:     TRISAbits.TRISA3 = 0;
  2433     01EB  0020               	movlb	0	; select bank0
  2434     01EC  1191               	bcf	17,3	;volatile
  2435                           
  2436                           ;Rover_Main_Ver01.c: 407:     ANSELAbits.ANSA4 = 0;
  2437     01ED  003E               	movlb	30	; select bank30
  2438     01EE  1238               	bcf	56,4	;volatile
  2439                           
  2440                           ;Rover_Main_Ver01.c: 412:     TRISCbits.TRISC7 = 1;
  2441     01EF  0020               	movlb	0	; select bank0
  2442     01F0  1793               	bsf	19,7	;volatile
  2443                           
  2444                           ;Rover_Main_Ver01.c: 413:     ANSELCbits.ANSC7 = 0;
  2445     01F1  003E               	movlb	30	; select bank30
  2446     01F2  13CE               	bcf	78,7	;volatile
  2447                           
  2448                           ;Rover_Main_Ver01.c: 416:     TRISCbits.TRISC3 = 1;
  2449     01F3  0020               	movlb	0	; select bank0
  2450     01F4  1593               	bsf	19,3	;volatile
  2451                           
  2452                           ;Rover_Main_Ver01.c: 417:     ANSELCbits.ANSC3 = 0;
  2453     01F5  003E               	movlb	30	; select bank30
  2454     01F6  11CE               	bcf	78,3	;volatile
  2455                           
  2456                           ;Rover_Main_Ver01.c: 420:     TRISCbits.TRISC4 = 1;
  2457     01F7  0020               	movlb	0	; select bank0
  2458     01F8  1613               	bsf	19,4	;volatile
  2459                           
  2460                           ;Rover_Main_Ver01.c: 421:     ANSELCbits.ANSC4 = 0;
  2461     01F9  003E               	movlb	30	; select bank30
  2462     01FA  124E               	bcf	78,4	;volatile
  2463                           
  2464                           ;Rover_Main_Ver01.c: 424:     TRISBbits.TRISB4 = 0;
  2465     01FB  0020               	movlb	0	; select bank0
  2466     01FC  1212               	bcf	18,4	;volatile
  2467                           
  2468                           ;Rover_Main_Ver01.c: 425:     ANSELBbits.ANSB4 = 0;
  2469     01FD  003E               	movlb	30	; select bank30
  2470     01FE  1243               	bcf	67,4	;volatile
  2471                           
  2472                           ;Rover_Main_Ver01.c: 428:     TRISAbits.TRISA5 = 1;
  2473     01FF  0020               	movlb	0	; select bank0
  2474     0200  1691               	bsf	17,5	;volatile
  2475                           
  2476                           ;Rover_Main_Ver01.c: 429:     ANSELAbits.ANSA5 = 0;
  2477     0201  003E               	movlb	30	; select bank30
  2478     0202  12B8               	bcf	56,5	;volatile
  2479                           
  2480                           ;Rover_Main_Ver01.c: 432:     PPSLOCKbits.PPSLOCKED = 0;
  2481     0203  003D               	movlb	29	; select bank29
  2482     0204  100F               	bcf	15,0	;volsfr
  2483                           
  2484                           ;Rover_Main_Ver01.c: 434:     RC4PPS = 0x16;
  2485     0205  3016               	movlw	22
  2486     0206  003E               	movlb	30	; select bank30
  2487     0207  00A4               	movwf	36	;volatile
  2488     0208                     l1496:
  2489                           
  2490                           ;Rover_Main_Ver01.c: 435:     SSP2CLKPPSbits.SSP2CLKPPS = 0x14;
  2491     0208  003D               	movlb	29	; select bank29
  2492     0209  0848               	movf	72,w	;volatile
  2493     020A  39E0               	andlw	-32
  2494     020B  3814               	iorlw	20
  2495     020C  00C8               	movwf	72	;volatile
  2496                           
  2497                           ;Rover_Main_Ver01.c: 437:     SSP2DATPPSbits.SSP2DATPPS = 0x13;
  2498     020D  0849               	movf	73,w	;volatile
  2499     020E  39E0               	andlw	-32
  2500     020F  3813               	iorlw	19
  2501     0210  00C9               	movwf	73	;volatile
  2502     0211                     l1498:
  2503                           
  2504                           ;Rover_Main_Ver01.c: 438:     RC3PPS = 0x17;
  2505     0211  3017               	movlw	23
  2506     0212  003E               	movlb	30	; select bank30
  2507     0213  00A3               	movwf	35	;volatile
  2508     0214                     l1500:
  2509                           
  2510                           ;Rover_Main_Ver01.c: 440:     RC5PPS = 0x10;
  2511     0214  3010               	movlw	16
  2512     0215  00A5               	movwf	37	;volatile
  2513     0216                     l1502:
  2514                           
  2515                           ;Rover_Main_Ver01.c: 442:     PPSLOCKbits.PPSLOCKED = 1;
  2516     0216  003D               	movlb	29	; select bank29
  2517     0217  140F               	bsf	15,0	;volsfr
  2518     0218                     l218:
  2519     0218  0008               	return
  2520     0219                     __end_of_configPins:
  2521                           
  2522                           	psect	text9
  2523     04CB                     __ptext9:	
  2524 ;; *************** function _configISR *****************
  2525 ;; Defined at:
  2526 ;;		line 139 in file "Rover_Main_Ver01.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		None
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_initialize_all
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554     04CB                     _configISR:	
  2555                           ;psect for function _configISR
  2556                           
  2557     04CB                     l1438:	
  2558                           ;incstack = 0
  2559                           ; Regs used in _configISR: []
  2560                           
  2561                           
  2562                           ;Rover_Main_Ver01.c: 141:     INTCONbits.GIE = 1;
  2563     04CB  178B               	bsf	11,7	;volatile
  2564                           
  2565                           ;Rover_Main_Ver01.c: 142:     INTCONbits.PEIE = 1;
  2566     04CC  170B               	bsf	11,6	;volatile
  2567                           
  2568                           ;Rover_Main_Ver01.c: 145:     PIE3bits.RCIE = 1;
  2569     04CD  002E               	movlb	14	; select bank14
  2570     04CE  1699               	bsf	25,5	;volatile
  2571     04CF                     l87:
  2572     04CF  0008               	return
  2573     04D0                     __end_of_configISR:
  2574                           
  2575                           	psect	text10
  2576     04A2                     __ptext10:	
  2577 ;; *************** function _configI2C *****************
  2578 ;; Defined at:
  2579 ;;		line 156 in file "Rover_Main_Ver01.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2597 ;;Total ram usage:        0 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_initialize_all
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607     04A2                     _configI2C:	
  2608                           ;psect for function _configI2C
  2609                           
  2610     04A2                     l1440:	
  2611                           ;incstack = 0
  2612                           ; Regs used in _configI2C: [wreg+status,2+status,0]
  2613                           
  2614                           
  2615                           ;Rover_Main_Ver01.c: 158:     SSP2CON1bits.SSPEN = 0;
  2616     04A2  0023               	movlb	3	; select bank3
  2617     04A3  129A               	bcf	26,5	;volatile
  2618                           
  2619                           ;Rover_Main_Ver01.c: 161:     SSP2ADDbits.SSPADD = 19;
  2620     04A4  3013               	movlw	19
  2621     04A5  0097               	movwf	23	;volatile
  2622     04A6                     l1442:
  2623                           
  2624                           ;Rover_Main_Ver01.c: 164:     SSP2CON1bits.SSPM = 0b1000;
  2625     04A6  081A               	movf	26,w	;volatile
  2626     04A7  39F0               	andlw	-16
  2627     04A8  3808               	iorlw	8
  2628     04A9  009A               	movwf	26	;volatile
  2629     04AA                     l1444:
  2630                           
  2631                           ;Rover_Main_Ver01.c: 167:     SSP2CON1bits.SSPEN = 1;
  2632     04AA  169A               	bsf	26,5	;volatile
  2633     04AB                     l96:
  2634     04AB  0008               	return
  2635     04AC                     __end_of_configI2C:
  2636                           
  2637                           	psect	text11
  2638     0383                     __ptext11:	
  2639 ;; *************** function _HAL_LED_OFF *****************
  2640 ;; Defined at:
  2641 ;;		line 376 in file "Rover_Main_Ver01.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  LED             2    3[COMMON] int 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;Total ram usage:        2 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_initialize_all
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669     0383                     _HAL_LED_OFF:	
  2670                           ;psect for function _HAL_LED_OFF
  2671                           
  2672     0383                     l1484:	
  2673                           ;incstack = 0
  2674                           ; Regs used in _HAL_LED_OFF: [wreg-fsr0h+status,2+status,0]
  2675                           
  2676                           
  2677                           ;Rover_Main_Ver01.c: 377:  switch(LED){
  2678     0383  2B90               	goto	l1488
  2679     0384                     l210:	
  2680                           ;Rover_Main_Ver01.c: 378:   case 1:
  2681                           
  2682                           
  2683                           ;Rover_Main_Ver01.c: 379:             LATAbits.LATA0 = 0;
  2684     0384  0020               	movlb	0	; select bank0
  2685     0385  1016               	bcf	22,0	;volatile
  2686                           
  2687                           ;Rover_Main_Ver01.c: 380:    break;
  2688     0386  2BA3               	goto	l215
  2689     0387                     l212:	
  2690                           ;Rover_Main_Ver01.c: 381:   case 2:
  2691                           
  2692                           
  2693                           ;Rover_Main_Ver01.c: 382:             LATAbits.LATA1 = 0;
  2694     0387  0020               	movlb	0	; select bank0
  2695     0388  1096               	bcf	22,1	;volatile
  2696                           
  2697                           ;Rover_Main_Ver01.c: 383:    break;
  2698     0389  2BA3               	goto	l215
  2699     038A                     l213:	
  2700                           ;Rover_Main_Ver01.c: 384:   case 3:
  2701                           
  2702                           
  2703                           ;Rover_Main_Ver01.c: 385:             LATAbits.LATA2 = 0;
  2704     038A  0020               	movlb	0	; select bank0
  2705     038B  1116               	bcf	22,2	;volatile
  2706                           
  2707                           ;Rover_Main_Ver01.c: 386:    break;
  2708     038C  2BA3               	goto	l215
  2709     038D                     l214:	
  2710                           ;Rover_Main_Ver01.c: 387:         case 4:
  2711                           
  2712                           
  2713                           ;Rover_Main_Ver01.c: 388:             LATAbits.LATA3 = 0;
  2714     038D  0020               	movlb	0	; select bank0
  2715     038E  1196               	bcf	22,3	;volatile
  2716                           
  2717                           ;Rover_Main_Ver01.c: 389:             break;
  2718     038F  2BA3               	goto	l215
  2719     0390                     l1488:
  2720                           
  2721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2722                           ; Switch size 1, requested type "simple"
  2723                           ; Number of cases is 1, Range of values is 0 to 0
  2724                           ; switch strategies available:
  2725                           ; Name         Instructions Cycles
  2726                           ; simple_byte            4     3 (average)
  2727                           ; direct_byte            8     6 (fixed)
  2728                           ; jumptable            260     6 (fixed)
  2729                           ;	Chosen strategy is simple_byte
  2730     0390  0874               	movf	HAL_LED_OFF@LED+1,w
  2731     0391  3A00               	xorlw	0	; case 0
  2732     0392  1903               	skipnz
  2733     0393  2B95               	goto	l2088
  2734     0394  2BA3               	goto	l215
  2735     0395                     l2088:
  2736                           
  2737                           ; Switch size 1, requested type "simple"
  2738                           ; Number of cases is 4, Range of values is 1 to 4
  2739                           ; switch strategies available:
  2740                           ; Name         Instructions Cycles
  2741                           ; simple_byte           13     7 (average)
  2742                           ; direct_byte           17     9 (fixed)
  2743                           ; jumptable            263     9 (fixed)
  2744                           ;	Chosen strategy is simple_byte
  2745     0395  0873               	movf	HAL_LED_OFF@LED,w
  2746     0396  3A01               	xorlw	1	; case 1
  2747     0397  1903               	skipnz
  2748     0398  2B84               	goto	l210
  2749     0399  3A03               	xorlw	3	; case 2
  2750     039A  1903               	skipnz
  2751     039B  2B87               	goto	l212
  2752     039C  3A01               	xorlw	1	; case 3
  2753     039D  1903               	skipnz
  2754     039E  2B8A               	goto	l213
  2755     039F  3A07               	xorlw	7	; case 4
  2756     03A0  1903               	skipnz
  2757     03A1  2B8D               	goto	l214
  2758     03A2  2BA3               	goto	l215
  2759     03A3                     l215:
  2760     03A3  0008               	return
  2761     03A4                     __end_of_HAL_LED_OFF:
  2762                           
  2763                           	psect	text12
  2764     0062                     __ptext12:	
  2765 ;; *************** function _alienFrequencyTask *****************
  2766 ;; Defined at:
  2767 ;;		line 479 in file "Rover_Main_Ver01.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  freq_digit      4   13[BANK0 ] unsigned char [4]
  2772 ;;  freq_char       4    9[BANK0 ] unsigned char [4]
  2773 ;;  i               2   18[BANK0 ] int 
  2774 ;;  counter         1   17[BANK0 ] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;Total ram usage:       13 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 7
  2791 ;; This function calls:
  2792 ;;		_HAL_Clear
  2793 ;;		_HAL_LCD_Print
  2794 ;;		_HAL_Set_Cursor
  2795 ;;		___awdiv
  2796 ;;		___lwdiv
  2797 ;;		___lwmod
  2798 ;;		_intToChar
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804     0062                     _alienFrequencyTask:	
  2805                           ;psect for function _alienFrequencyTask
  2806                           
  2807     0062                     l1948:	
  2808                           ;incstack = 0
  2809                           ; Regs used in _alienFrequencyTask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2810                           
  2811                           
  2812                           ;Rover_Main_Ver01.c: 482:     HAL_Clear();
  2813     0062  3184  2494  3180   	fcall	_HAL_Clear
  2814                           
  2815                           ;Rover_Main_Ver01.c: 483:     HAL_LCD_Print(&FFT_Home1[0], 16);
  2816     0065  3024               	movlw	(low (_FFT_Home1| 0))& (0+255)
  2817     0066  0020               	movlb	0	; select bank0
  2818     0067  00C5               	movwf	HAL_LCD_Print@string
  2819     0068  3010               	movlw	16
  2820     0069  00C6               	movwf	HAL_LCD_Print@size
  2821     006A  3000               	movlw	0
  2822     006B  00C7               	movwf	HAL_LCD_Print@size+1
  2823     006C  3182  22EE  3180   	fcall	_HAL_LCD_Print
  2824                           
  2825                           ;Rover_Main_Ver01.c: 485:     HAL_Set_Cursor(0, 1);
  2826     006F  3000               	movlw	0
  2827     0070  0020               	movlb	0	; select bank0
  2828     0071  00C5               	movwf	HAL_Set_Cursor@col
  2829     0072  00C6               	movwf	HAL_Set_Cursor@col+1
  2830     0073  3001               	movlw	1
  2831     0074  00C7               	movwf	HAL_Set_Cursor@line
  2832     0075  3000               	movlw	0
  2833     0076  00C8               	movwf	HAL_Set_Cursor@line+1
  2834     0077  3183  23C2  3180   	fcall	_HAL_Set_Cursor
  2835                           
  2836                           ;Rover_Main_Ver01.c: 487:     HAL_LCD_Print(&FFT_Home2[0], 16);
  2837     007A  30A0               	movlw	(low (_FFT_Home2| 0))& (0+255)
  2838     007B  0020               	movlb	0	; select bank0
  2839     007C  00C5               	movwf	HAL_LCD_Print@string
  2840     007D  3010               	movlw	16
  2841     007E  00C6               	movwf	HAL_LCD_Print@size
  2842     007F  3000               	movlw	0
  2843     0080  00C7               	movwf	HAL_LCD_Print@size+1
  2844     0081  3182  22EE  3180   	fcall	_HAL_LCD_Print
  2845     0084                     l1950:
  2846                           
  2847                           ;Rover_Main_Ver01.c: 491:     LATBbits.LATB4 = 0;
  2848     0084  0020               	movlb	0	; select bank0
  2849     0085  1217               	bcf	23,4	;volatile
  2850     0086                     l1952:
  2851                           
  2852                           ;Rover_Main_Ver01.c: 492:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2853     0086  30C8               	movlw	200
  2854     0087                     u1267:
  2855     0087  3200               	nop2
  2856     0088  0B89               	decfsz	9,f
  2857     0089  2887               	goto	u1267
  2858     008A                     l1954:
  2859                           
  2860                           ;Rover_Main_Ver01.c: 493:     LATBbits.LATB4 = 1;
  2861     008A  0020               	movlb	0	; select bank0
  2862     008B  1617               	bsf	23,4	;volatile
  2863     008C                     l1956:
  2864                           
  2865                           ;Rover_Main_Ver01.c: 497:     UART_Not_Recieved = 2;
  2866     008C  3002               	movlw	2
  2867     008D  00E6               	movwf	_UART_Not_Recieved
  2868     008E                     l1958:	
  2869                           ;Rover_Main_Ver01.c: 498:     while(UART_Not_Recieved != 0){
  2870                           
  2871                           
  2872                           ;Rover_Main_Ver01.c: 498:     while(UART_Not_Recieved != 0){
  2873     008E  0866               	movf	_UART_Not_Recieved,w
  2874     008F  1D03               	btfss	3,2
  2875     0090  2892               	goto	u1141
  2876     0091  2893               	goto	u1140
  2877     0092                     u1141:
  2878     0092  288E               	goto	l1958
  2879     0093                     u1140:
  2880     0093                     l1960:
  2881                           
  2882                           ;Rover_Main_Ver01.c: 500:     char freq_char[4];;Rover_Main_Ver01.c: 501:     uint8_t fr
      +                          eq_digit[4];;Rover_Main_Ver01.c: 502:     uint8_t counter = 0;
  2883     0093  01D5               	clrf	alienFrequencyTask@counter
  2884     0094                     l1962:
  2885                           
  2886                           ;Rover_Main_Ver01.c: 503:     HAL_Clear();
  2887     0094  3184  2494  3180   	fcall	_HAL_Clear
  2888     0097                     l1964:
  2889     0097                     l1966:
  2890                           
  2891                           ;Rover_Main_Ver01.c: 505:     if(frequency < 10){
  2892     0097  3000               	movlw	0
  2893     0098  0020               	movlb	0	; select bank0
  2894     0099  0265               	subwf	_frequency+1,w
  2895     009A  300A               	movlw	10
  2896     009B  1903               	skipnz
  2897     009C  0264               	subwf	_frequency,w
  2898     009D  1803               	skipnc
  2899     009E  28A0               	goto	u1151
  2900     009F  28A1               	goto	u1150
  2901     00A0                     u1151:
  2902     00A0  28A6               	goto	l1970
  2903     00A1                     u1150:
  2904     00A1                     l1968:
  2905                           
  2906                           ;Rover_Main_Ver01.c: 506:         i = 1;
  2907     00A1  3001               	movlw	1
  2908     00A2  00D6               	movwf	alienFrequencyTask@i
  2909     00A3  3000               	movlw	0
  2910     00A4  00D7               	movwf	alienFrequencyTask@i+1
  2911                           
  2912                           ;Rover_Main_Ver01.c: 507:     }
  2913     00A5  28C6               	goto	l245
  2914     00A6                     l1970:
  2915     00A6  3000               	movlw	0
  2916     00A7  0265               	subwf	_frequency+1,w
  2917     00A8  3064               	movlw	100
  2918     00A9  1903               	skipnz
  2919     00AA  0264               	subwf	_frequency,w
  2920     00AB  1803               	skipnc
  2921     00AC  28AE               	goto	u1161
  2922     00AD  28AF               	goto	u1160
  2923     00AE                     u1161:
  2924     00AE  28B4               	goto	l1974
  2925     00AF                     u1160:
  2926     00AF                     l1972:
  2927                           
  2928                           ;Rover_Main_Ver01.c: 509:         i = 10;
  2929     00AF  300A               	movlw	10
  2930     00B0  00D6               	movwf	alienFrequencyTask@i
  2931     00B1  3000               	movlw	0
  2932     00B2  00D7               	movwf	alienFrequencyTask@i+1
  2933                           
  2934                           ;Rover_Main_Ver01.c: 510:     }
  2935     00B3  28C6               	goto	l245
  2936     00B4                     l1974:
  2937     00B4  3003               	movlw	3
  2938     00B5  0265               	subwf	_frequency+1,w
  2939     00B6  30E8               	movlw	232
  2940     00B7  1903               	skipnz
  2941     00B8  0264               	subwf	_frequency,w
  2942     00B9  1803               	skipnc
  2943     00BA  28BC               	goto	u1171
  2944     00BB  28BD               	goto	u1170
  2945     00BC                     u1171:
  2946     00BC  28C2               	goto	l1978
  2947     00BD                     u1170:
  2948     00BD                     l1976:
  2949                           
  2950                           ;Rover_Main_Ver01.c: 512:         i = 100;
  2951     00BD  3064               	movlw	100
  2952     00BE  00D6               	movwf	alienFrequencyTask@i
  2953     00BF  3000               	movlw	0
  2954     00C0  00D7               	movwf	alienFrequencyTask@i+1
  2955                           
  2956                           ;Rover_Main_Ver01.c: 513:     }
  2957     00C1  28C6               	goto	l245
  2958     00C2                     l1978:
  2959                           
  2960                           ;Rover_Main_Ver01.c: 515:         i = 1000;
  2961     00C2  30E8               	movlw	232
  2962     00C3  00D6               	movwf	alienFrequencyTask@i
  2963     00C4  3003               	movlw	3
  2964     00C5  00D7               	movwf	alienFrequencyTask@i+1
  2965     00C6                     l245:
  2966     00C6  0857               	movf	alienFrequencyTask@i+1,w
  2967     00C7  3A80               	xorlw	128
  2968     00C8  00CB               	movwf	??_alienFrequencyTask
  2969     00C9  3080               	movlw	128
  2970     00CA  024B               	subwf	??_alienFrequencyTask,w
  2971     00CB  1D03               	skipz
  2972     00CC  28CF               	goto	u1185
  2973     00CD  3001               	movlw	1
  2974     00CE  0256               	subwf	alienFrequencyTask@i,w
  2975     00CF                     u1185:
  2976     00CF  1803               	skipnc
  2977     00D0  28D2               	goto	u1181
  2978     00D1  28D3               	goto	u1180
  2979     00D2                     u1181:
  2980     00D2  28D4               	goto	l1982
  2981     00D3                     u1180:
  2982     00D3  290A               	goto	l1992
  2983     00D4                     l1982:
  2984                           
  2985                           ;Rover_Main_Ver01.c: 518:         freq_digit[counter] = (frequency % i);
  2986     00D4  0020               	movlb	0	; select bank0
  2987     00D5  0855               	movf	alienFrequencyTask@counter,w
  2988     00D6  3E51               	addlw	(low (alienFrequencyTask@freq_digit| 0))& (0+255)
  2989     00D7  0086               	movwf	6
  2990     00D8  0187               	clrf	7
  2991     00D9  0857               	movf	alienFrequencyTask@i+1,w
  2992     00DA  00F4               	movwf	___lwmod@divisor+1
  2993     00DB  0856               	movf	alienFrequencyTask@i,w
  2994     00DC  00F3               	movwf	___lwmod@divisor
  2995     00DD  0865               	movf	_frequency+1,w
  2996     00DE  00F6               	movwf	___lwmod@dividend+1
  2997     00DF  0864               	movf	_frequency,w
  2998     00E0  00F5               	movwf	___lwmod@dividend
  2999     00E1  3182  228B  3180   	fcall	___lwmod
  3000     00E4  0873               	movf	?___lwmod,w
  3001     00E5  0081               	movwf	1
  3002     00E6                     l1984:
  3003                           
  3004                           ;Rover_Main_Ver01.c: 519:         frequency = frequency / 10;
  3005     00E6  300A               	movlw	10
  3006     00E7  00F3               	movwf	___lwdiv@divisor
  3007     00E8  3000               	movlw	0
  3008     00E9  00F4               	movwf	___lwdiv@divisor+1
  3009     00EA  0020               	movlb	0	; select bank0
  3010     00EB  0865               	movf	_frequency+1,w
  3011     00EC  00F6               	movwf	___lwdiv@dividend+1
  3012     00ED  0864               	movf	_frequency,w
  3013     00EE  00F5               	movwf	___lwdiv@dividend
  3014     00EF  3182  2219  3180   	fcall	___lwdiv
  3015     00F2  0874               	movf	?___lwdiv+1,w
  3016     00F3  0020               	movlb	0	; select bank0
  3017     00F4  00E5               	movwf	_frequency+1
  3018     00F5  0873               	movf	?___lwdiv,w
  3019     00F6  00E4               	movwf	_frequency
  3020     00F7                     l1986:
  3021                           
  3022                           ;Rover_Main_Ver01.c: 520:         counter++;
  3023     00F7  3001               	movlw	1
  3024     00F8  07D5               	addwf	alienFrequencyTask@counter,f
  3025     00F9                     l1988:
  3026                           
  3027                           ;Rover_Main_Ver01.c: 521:     }
  3028     00F9  300A               	movlw	10
  3029     00FA  00F3               	movwf	___awdiv@divisor
  3030     00FB  3000               	movlw	0
  3031     00FC  00F4               	movwf	___awdiv@divisor+1
  3032     00FD  0857               	movf	alienFrequencyTask@i+1,w
  3033     00FE  00F6               	movwf	___awdiv@dividend+1
  3034     00FF  0856               	movf	alienFrequencyTask@i,w
  3035     0100  00F5               	movwf	___awdiv@dividend
  3036     0101  3181  213D  3180   	fcall	___awdiv
  3037     0104  0874               	movf	?___awdiv+1,w
  3038     0105  0020               	movlb	0	; select bank0
  3039     0106  00D7               	movwf	alienFrequencyTask@i+1
  3040     0107  0873               	movf	?___awdiv,w
  3041     0108  00D6               	movwf	alienFrequencyTask@i
  3042     0109  28C6               	goto	l245
  3043     010A                     l1992:
  3044                           
  3045                           ;Rover_Main_Ver01.c: 522:     freq_char[0] = intToChar(freq_digit[0]);
  3046     010A  0020               	movlb	0	; select bank0
  3047     010B  0851               	movf	alienFrequencyTask@freq_digit,w
  3048     010C  3182  2253  3180   	fcall	_intToChar
  3049     010F  0020               	movlb	0	; select bank0
  3050     0110  00CD               	movwf	alienFrequencyTask@freq_char
  3051                           
  3052                           ;Rover_Main_Ver01.c: 523:     freq_char[1] = intToChar(freq_digit[1]);
  3053     0111  0852               	movf	alienFrequencyTask@freq_digit+1,w
  3054     0112  3182  2253  3180   	fcall	_intToChar
  3055     0115  0020               	movlb	0	; select bank0
  3056     0116  00CE               	movwf	alienFrequencyTask@freq_char+1
  3057                           
  3058                           ;Rover_Main_Ver01.c: 524:     freq_char[2] = intToChar(freq_digit[2]);
  3059     0117  0853               	movf	alienFrequencyTask@freq_digit+2,w
  3060     0118  3182  2253  3180   	fcall	_intToChar
  3061     011B  0020               	movlb	0	; select bank0
  3062     011C  00CF               	movwf	alienFrequencyTask@freq_char+2
  3063                           
  3064                           ;Rover_Main_Ver01.c: 525:     freq_char[3] = intToChar(freq_digit[3]);
  3065     011D  0854               	movf	alienFrequencyTask@freq_digit+3,w
  3066     011E  3182  2253  3180   	fcall	_intToChar
  3067     0121  0020               	movlb	0	; select bank0
  3068     0122  00D0               	movwf	alienFrequencyTask@freq_char+3
  3069     0123                     l1994:
  3070                           
  3071                           ;Rover_Main_Ver01.c: 526:     HAL_LCD_Print(&freq_char[0], 4);
  3072     0123  304D               	movlw	(low (alienFrequencyTask@freq_char| 0))& (0+255)
  3073     0124  00C5               	movwf	HAL_LCD_Print@string
  3074     0125  3004               	movlw	4
  3075     0126  00C6               	movwf	HAL_LCD_Print@size
  3076     0127  3000               	movlw	0
  3077     0128  00C7               	movwf	HAL_LCD_Print@size+1
  3078     0129  3182  22EE  3180   	fcall	_HAL_LCD_Print
  3079     012C                     l1996:
  3080                           
  3081                           ;Rover_Main_Ver01.c: 529:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  3082     012C  3006               	movlw	6
  3083     012D  0020               	movlb	0	; select bank0
  3084     012E  00CC               	movwf	??_alienFrequencyTask+1
  3085     012F  3013               	movlw	19
  3086     0130  00CB               	movwf	??_alienFrequencyTask
  3087     0131  30AD               	movlw	173
  3088     0132                     u1277:
  3089     0132  0B89               	decfsz	9,f
  3090     0133  2932               	goto	u1277
  3091     0134  0BCB               	decfsz	??_alienFrequencyTask,f
  3092     0135  2932               	goto	u1277
  3093     0136  0BCC               	decfsz	??_alienFrequencyTask+1,f
  3094     0137  2932               	goto	u1277
  3095     0138  3200               	nop2
  3096     0139                     l1998:
  3097                           
  3098                           ;Rover_Main_Ver01.c: 530:     HAL_Clear();
  3099     0139  3184  2494  3180   	fcall	_HAL_Clear
  3100     013C                     l252:
  3101     013C  0008               	return
  3102     013D                     __end_of_alienFrequencyTask:
  3103                           
  3104                           	psect	text13
  3105     0253                     __ptext13:	
  3106 ;; *************** function _intToChar *****************
  3107 ;; Defined at:
  3108 ;;		line 446 in file "Rover_Main_Ver01.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  integer         1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  integer         1    3[COMMON] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      unsigned char 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;Total ram usage:        1 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 1
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_alienFrequencyTask
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136     0253                     _intToChar:	
  3137                           ;psect for function _intToChar
  3138                           
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _intToChar: [wreg-fsr0h+status,2+status,0]
  3142                           ;intToChar@integer stored from wreg
  3143     0253  00F3               	movwf	intToChar@integer
  3144     0254                     l1504:
  3145                           
  3146                           ;Rover_Main_Ver01.c: 447:     switch(integer){
  3147     0254  2A69               	goto	l1548
  3148     0255                     l1506:
  3149                           
  3150                           ;Rover_Main_Ver01.c: 449:             return('0');
  3151     0255  3030               	movlw	48
  3152     0256  2A8A               	goto	l223
  3153     0257                     l1510:
  3154                           
  3155                           ;Rover_Main_Ver01.c: 451:             return('1');
  3156     0257  3031               	movlw	49
  3157     0258  2A8A               	goto	l223
  3158     0259                     l1514:
  3159                           
  3160                           ;Rover_Main_Ver01.c: 453:             return('2');
  3161     0259  3032               	movlw	50
  3162     025A  2A8A               	goto	l223
  3163     025B                     l1518:
  3164                           
  3165                           ;Rover_Main_Ver01.c: 455:             return('3');
  3166     025B  3033               	movlw	51
  3167     025C  2A8A               	goto	l223
  3168     025D                     l1522:
  3169                           
  3170                           ;Rover_Main_Ver01.c: 457:             return('4');
  3171     025D  3034               	movlw	52
  3172     025E  2A8A               	goto	l223
  3173     025F                     l1526:
  3174                           
  3175                           ;Rover_Main_Ver01.c: 459:             return('5');
  3176     025F  3035               	movlw	53
  3177     0260  2A8A               	goto	l223
  3178     0261                     l1530:
  3179                           
  3180                           ;Rover_Main_Ver01.c: 461:             return('6');
  3181     0261  3036               	movlw	54
  3182     0262  2A8A               	goto	l223
  3183     0263                     l1534:
  3184                           
  3185                           ;Rover_Main_Ver01.c: 463:             return('7');
  3186     0263  3037               	movlw	55
  3187     0264  2A8A               	goto	l223
  3188     0265                     l1538:
  3189                           
  3190                           ;Rover_Main_Ver01.c: 465:             return('8');
  3191     0265  3038               	movlw	56
  3192     0266  2A8A               	goto	l223
  3193     0267                     l1542:
  3194                           
  3195                           ;Rover_Main_Ver01.c: 467:             return('9');
  3196     0267  3039               	movlw	57
  3197     0268  2A8A               	goto	l223
  3198     0269                     l1548:
  3199     0269  0873               	movf	intToChar@integer,w
  3200                           
  3201                           ; Switch size 1, requested type "simple"
  3202                           ; Number of cases is 10, Range of values is 0 to 9
  3203                           ; switch strategies available:
  3204                           ; Name         Instructions Cycles
  3205                           ; direct_byte           26     6 (fixed)
  3206                           ; simple_byte           31    16 (average)
  3207                           ; jumptable            260     6 (fixed)
  3208                           ;	Chosen strategy is simple_byte
  3209     026A  3A00               	xorlw	0	; case 0
  3210     026B  1903               	skipnz
  3211     026C  2A55               	goto	l1506
  3212     026D  3A01               	xorlw	1	; case 1
  3213     026E  1903               	skipnz
  3214     026F  2A57               	goto	l1510
  3215     0270  3A03               	xorlw	3	; case 2
  3216     0271  1903               	skipnz
  3217     0272  2A59               	goto	l1514
  3218     0273  3A01               	xorlw	1	; case 3
  3219     0274  1903               	skipnz
  3220     0275  2A5B               	goto	l1518
  3221     0276  3A07               	xorlw	7	; case 4
  3222     0277  1903               	skipnz
  3223     0278  2A5D               	goto	l1522
  3224     0279  3A01               	xorlw	1	; case 5
  3225     027A  1903               	skipnz
  3226     027B  2A5F               	goto	l1526
  3227     027C  3A03               	xorlw	3	; case 6
  3228     027D  1903               	skipnz
  3229     027E  2A61               	goto	l1530
  3230     027F  3A01               	xorlw	1	; case 7
  3231     0280  1903               	skipnz
  3232     0281  2A63               	goto	l1534
  3233     0282  3A0F               	xorlw	15	; case 8
  3234     0283  1903               	skipnz
  3235     0284  2A65               	goto	l1538
  3236     0285  3A01               	xorlw	1	; case 9
  3237     0286  1903               	skipnz
  3238     0287  2A67               	goto	l1542
  3239     0288  2A89               	goto	l1550
  3240     0289                     l1550:
  3241                           
  3242                           ;Rover_Main_Ver01.c: 469:     return('_');
  3243     0289  305F               	movlw	95
  3244     028A                     l223:
  3245     028A  0008               	return
  3246     028B                     __end_of_intToChar:
  3247                           
  3248                           	psect	text14
  3249     028B                     __ptext14:	
  3250 ;; *************** function ___lwmod *****************
  3251 ;; Defined at:
  3252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  divisor         2    3[COMMON] unsigned int 
  3255 ;;  dividend        2    5[COMMON] unsigned int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  counter         1    7[COMMON] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  2    3[COMMON] unsigned int 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;Total ram usage:        5 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_alienFrequencyTask
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281     028B                     ___lwmod:	
  3282                           ;psect for function ___lwmod
  3283                           
  3284     028B                     l1624:	
  3285                           ;incstack = 0
  3286                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3287                           
  3288     028B  0873               	movf	___lwmod@divisor,w
  3289     028C  0474               	iorwf	___lwmod@divisor+1,w
  3290     028D  1903               	btfsc	3,2
  3291     028E  2A90               	goto	u761
  3292     028F  2A91               	goto	u760
  3293     0290                     u761:
  3294     0290  2AB8               	goto	l1642
  3295     0291                     u760:
  3296     0291                     l1626:
  3297     0291  3001               	movlw	1
  3298     0292  00F7               	movwf	___lwmod@counter
  3299     0293  2A9B               	goto	l1632
  3300     0294                     l1628:
  3301     0294  3001               	movlw	1
  3302     0295                     u775:
  3303     0295  35F3               	lslf	___lwmod@divisor,f
  3304     0296  0DF4               	rlf	___lwmod@divisor+1,f
  3305     0297  0B89               	decfsz	9,f
  3306     0298  2A95               	goto	u775
  3307     0299                     l1630:
  3308     0299  3001               	movlw	1
  3309     029A  07F7               	addwf	___lwmod@counter,f
  3310     029B                     l1632:
  3311     029B  1FF4               	btfss	___lwmod@divisor+1,7
  3312     029C  2A9E               	goto	u781
  3313     029D  2A9F               	goto	u780
  3314     029E                     u781:
  3315     029E  2A94               	goto	l1628
  3316     029F                     u780:
  3317     029F                     l1634:
  3318     029F  0874               	movf	___lwmod@divisor+1,w
  3319     02A0  0276               	subwf	___lwmod@dividend+1,w
  3320     02A1  1D03               	skipz
  3321     02A2  2AA5               	goto	u795
  3322     02A3  0873               	movf	___lwmod@divisor,w
  3323     02A4  0275               	subwf	___lwmod@dividend,w
  3324     02A5                     u795:
  3325     02A5  1C03               	skipc
  3326     02A6  2AA8               	goto	u791
  3327     02A7  2AA9               	goto	u790
  3328     02A8                     u791:
  3329     02A8  2AAD               	goto	l1638
  3330     02A9                     u790:
  3331     02A9                     l1636:
  3332     02A9  0873               	movf	___lwmod@divisor,w
  3333     02AA  02F5               	subwf	___lwmod@dividend,f
  3334     02AB  0874               	movf	___lwmod@divisor+1,w
  3335     02AC  3BF6               	subwfb	___lwmod@dividend+1,f
  3336     02AD                     l1638:
  3337     02AD  3001               	movlw	1
  3338     02AE                     u805:
  3339     02AE  36F4               	lsrf	___lwmod@divisor+1,f
  3340     02AF  0CF3               	rrf	___lwmod@divisor,f
  3341     02B0  0B89               	decfsz	9,f
  3342     02B1  2AAE               	goto	u805
  3343     02B2                     l1640:
  3344     02B2  3001               	movlw	1
  3345     02B3  02F7               	subwf	___lwmod@counter,f
  3346     02B4  1D03               	btfss	3,2
  3347     02B5  2AB7               	goto	u811
  3348     02B6  2AB8               	goto	u810
  3349     02B7                     u811:
  3350     02B7  2A9F               	goto	l1634
  3351     02B8                     u810:
  3352     02B8                     l1642:
  3353     02B8  0876               	movf	___lwmod@dividend+1,w
  3354     02B9  00F4               	movwf	?___lwmod+1
  3355     02BA  0875               	movf	___lwmod@dividend,w
  3356     02BB  00F3               	movwf	?___lwmod
  3357     02BC                     l724:
  3358     02BC  0008               	return
  3359     02BD                     __end_of___lwmod:
  3360                           
  3361                           	psect	text15
  3362     0219                     __ptext15:	
  3363 ;; *************** function ___lwdiv *****************
  3364 ;; Defined at:
  3365 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  divisor         2    3[COMMON] unsigned int 
  3368 ;;  dividend        2    5[COMMON] unsigned int 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  quotient        2    7[COMMON] unsigned int 
  3371 ;;  counter         1    9[COMMON] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  2    3[COMMON] unsigned int 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;Total ram usage:        7 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_alienFrequencyTask
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395     0219                     ___lwdiv:	
  3396                           ;psect for function ___lwdiv
  3397                           
  3398     0219                     l1598:	
  3399                           ;incstack = 0
  3400                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3401                           
  3402     0219  01F7               	clrf	___lwdiv@quotient
  3403     021A  01F8               	clrf	___lwdiv@quotient+1
  3404     021B                     l1600:
  3405     021B  0873               	movf	___lwdiv@divisor,w
  3406     021C  0474               	iorwf	___lwdiv@divisor+1,w
  3407     021D  1903               	btfsc	3,2
  3408     021E  2A20               	goto	u691
  3409     021F  2A21               	goto	u690
  3410     0220                     u691:
  3411     0220  2A4E               	goto	l1620
  3412     0221                     u690:
  3413     0221                     l1602:
  3414     0221  3001               	movlw	1
  3415     0222  00F9               	movwf	___lwdiv@counter
  3416     0223  2A2B               	goto	l1608
  3417     0224                     l1604:
  3418     0224  3001               	movlw	1
  3419     0225                     u705:
  3420     0225  35F3               	lslf	___lwdiv@divisor,f
  3421     0226  0DF4               	rlf	___lwdiv@divisor+1,f
  3422     0227  0B89               	decfsz	9,f
  3423     0228  2A25               	goto	u705
  3424     0229                     l1606:
  3425     0229  3001               	movlw	1
  3426     022A  07F9               	addwf	___lwdiv@counter,f
  3427     022B                     l1608:
  3428     022B  1FF4               	btfss	___lwdiv@divisor+1,7
  3429     022C  2A2E               	goto	u711
  3430     022D  2A2F               	goto	u710
  3431     022E                     u711:
  3432     022E  2A24               	goto	l1604
  3433     022F                     u710:
  3434     022F                     l1610:
  3435     022F  3001               	movlw	1
  3436     0230                     u725:
  3437     0230  35F7               	lslf	___lwdiv@quotient,f
  3438     0231  0DF8               	rlf	___lwdiv@quotient+1,f
  3439     0232  0B89               	decfsz	9,f
  3440     0233  2A30               	goto	u725
  3441     0234  0874               	movf	___lwdiv@divisor+1,w
  3442     0235  0276               	subwf	___lwdiv@dividend+1,w
  3443     0236  1D03               	skipz
  3444     0237  2A3A               	goto	u735
  3445     0238  0873               	movf	___lwdiv@divisor,w
  3446     0239  0275               	subwf	___lwdiv@dividend,w
  3447     023A                     u735:
  3448     023A  1C03               	skipc
  3449     023B  2A3D               	goto	u731
  3450     023C  2A3E               	goto	u730
  3451     023D                     u731:
  3452     023D  2A43               	goto	l1616
  3453     023E                     u730:
  3454     023E                     l1612:
  3455     023E  0873               	movf	___lwdiv@divisor,w
  3456     023F  02F5               	subwf	___lwdiv@dividend,f
  3457     0240  0874               	movf	___lwdiv@divisor+1,w
  3458     0241  3BF6               	subwfb	___lwdiv@dividend+1,f
  3459     0242                     l1614:
  3460     0242  1477               	bsf	___lwdiv@quotient,0
  3461     0243                     l1616:
  3462     0243  3001               	movlw	1
  3463     0244                     u745:
  3464     0244  36F4               	lsrf	___lwdiv@divisor+1,f
  3465     0245  0CF3               	rrf	___lwdiv@divisor,f
  3466     0246  0B89               	decfsz	9,f
  3467     0247  2A44               	goto	u745
  3468     0248                     l1618:
  3469     0248  3001               	movlw	1
  3470     0249  02F9               	subwf	___lwdiv@counter,f
  3471     024A  1D03               	btfss	3,2
  3472     024B  2A4D               	goto	u751
  3473     024C  2A4E               	goto	u750
  3474     024D                     u751:
  3475     024D  2A2F               	goto	l1610
  3476     024E                     u750:
  3477     024E                     l1620:
  3478     024E  0878               	movf	___lwdiv@quotient+1,w
  3479     024F  00F4               	movwf	?___lwdiv+1
  3480     0250  0877               	movf	___lwdiv@quotient,w
  3481     0251  00F3               	movwf	?___lwdiv
  3482     0252                     l714:
  3483     0252  0008               	return
  3484     0253                     __end_of___lwdiv:
  3485                           
  3486                           	psect	text16
  3487     013D                     __ptext16:	
  3488 ;; *************** function ___awdiv *****************
  3489 ;; Defined at:
  3490 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  divisor         2    3[COMMON] int 
  3493 ;;  dividend        2    5[COMMON] int 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  quotient        2    2[BANK0 ] int 
  3496 ;;  sign            1    1[BANK0 ] unsigned char 
  3497 ;;  counter         1    0[BANK0 ] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  2    3[COMMON] int 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3511 ;;Total ram usage:        8 bytes
  3512 ;; Hardware stack levels used: 1
  3513 ;; Hardware stack levels required when called: 1
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_alienFrequencyTask
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521     013D                     ___awdiv:	
  3522                           ;psect for function ___awdiv
  3523                           
  3524     013D                     l1904:	
  3525                           ;incstack = 0
  3526                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3527                           
  3528     013D  0020               	movlb	0	; select bank0
  3529     013E  01C5               	clrf	___awdiv@sign
  3530     013F                     l1906:
  3531     013F  1FF4               	btfss	___awdiv@divisor+1,7
  3532     0140  2942               	goto	u1041
  3533     0141  2943               	goto	u1040
  3534     0142                     u1041:
  3535     0142  294A               	goto	l1912
  3536     0143                     u1040:
  3537     0143                     l1908:
  3538     0143  09F3               	comf	___awdiv@divisor,f
  3539     0144  09F4               	comf	___awdiv@divisor+1,f
  3540     0145  0AF3               	incf	___awdiv@divisor,f
  3541     0146  1903               	skipnz
  3542     0147  0AF4               	incf	___awdiv@divisor+1,f
  3543     0148                     l1910:
  3544     0148  3001               	movlw	1
  3545     0149  00C5               	movwf	___awdiv@sign
  3546     014A                     l1912:
  3547     014A  1FF6               	btfss	___awdiv@dividend+1,7
  3548     014B  294D               	goto	u1051
  3549     014C  294E               	goto	u1050
  3550     014D                     u1051:
  3551     014D  2955               	goto	l1918
  3552     014E                     u1050:
  3553     014E                     l1914:
  3554     014E  09F5               	comf	___awdiv@dividend,f
  3555     014F  09F6               	comf	___awdiv@dividend+1,f
  3556     0150  0AF5               	incf	___awdiv@dividend,f
  3557     0151  1903               	skipnz
  3558     0152  0AF6               	incf	___awdiv@dividend+1,f
  3559     0153                     l1916:
  3560     0153  3001               	movlw	1
  3561     0154  06C5               	xorwf	___awdiv@sign,f
  3562     0155                     l1918:
  3563     0155  01C6               	clrf	___awdiv@quotient
  3564     0156  01C7               	clrf	___awdiv@quotient+1
  3565     0157                     l1920:
  3566     0157  0873               	movf	___awdiv@divisor,w
  3567     0158  0474               	iorwf	___awdiv@divisor+1,w
  3568     0159  1903               	btfsc	3,2
  3569     015A  295C               	goto	u1061
  3570     015B  295D               	goto	u1060
  3571     015C                     u1061:
  3572     015C  298A               	goto	l1940
  3573     015D                     u1060:
  3574     015D                     l1922:
  3575     015D  3001               	movlw	1
  3576     015E  00C4               	movwf	___awdiv@counter
  3577     015F  2967               	goto	l1928
  3578     0160                     l1924:
  3579     0160  3001               	movlw	1
  3580     0161                     u1075:
  3581     0161  35F3               	lslf	___awdiv@divisor,f
  3582     0162  0DF4               	rlf	___awdiv@divisor+1,f
  3583     0163  0B89               	decfsz	9,f
  3584     0164  2961               	goto	u1075
  3585     0165                     l1926:
  3586     0165  3001               	movlw	1
  3587     0166  07C4               	addwf	___awdiv@counter,f
  3588     0167                     l1928:
  3589     0167  1FF4               	btfss	___awdiv@divisor+1,7
  3590     0168  296A               	goto	u1081
  3591     0169  296B               	goto	u1080
  3592     016A                     u1081:
  3593     016A  2960               	goto	l1924
  3594     016B                     u1080:
  3595     016B                     l1930:
  3596     016B  3001               	movlw	1
  3597     016C                     u1095:
  3598     016C  35C6               	lslf	___awdiv@quotient,f
  3599     016D  0DC7               	rlf	___awdiv@quotient+1,f
  3600     016E  0B89               	decfsz	9,f
  3601     016F  296C               	goto	u1095
  3602     0170  0874               	movf	___awdiv@divisor+1,w
  3603     0171  0276               	subwf	___awdiv@dividend+1,w
  3604     0172  1D03               	skipz
  3605     0173  2976               	goto	u1105
  3606     0174  0873               	movf	___awdiv@divisor,w
  3607     0175  0275               	subwf	___awdiv@dividend,w
  3608     0176                     u1105:
  3609     0176  1C03               	skipc
  3610     0177  2979               	goto	u1101
  3611     0178  297A               	goto	u1100
  3612     0179                     u1101:
  3613     0179  297F               	goto	l1936
  3614     017A                     u1100:
  3615     017A                     l1932:
  3616     017A  0873               	movf	___awdiv@divisor,w
  3617     017B  02F5               	subwf	___awdiv@dividend,f
  3618     017C  0874               	movf	___awdiv@divisor+1,w
  3619     017D  3BF6               	subwfb	___awdiv@dividend+1,f
  3620     017E                     l1934:
  3621     017E  1446               	bsf	___awdiv@quotient,0
  3622     017F                     l1936:
  3623     017F  3001               	movlw	1
  3624     0180                     u1115:
  3625     0180  36F4               	lsrf	___awdiv@divisor+1,f
  3626     0181  0CF3               	rrf	___awdiv@divisor,f
  3627     0182  0B89               	decfsz	9,f
  3628     0183  2980               	goto	u1115
  3629     0184                     l1938:
  3630     0184  3001               	movlw	1
  3631     0185  02C4               	subwf	___awdiv@counter,f
  3632     0186  1D03               	btfss	3,2
  3633     0187  2989               	goto	u1121
  3634     0188  298A               	goto	u1120
  3635     0189                     u1121:
  3636     0189  296B               	goto	l1930
  3637     018A                     u1120:
  3638     018A                     l1940:
  3639     018A  0845               	movf	___awdiv@sign,w
  3640     018B  1903               	btfsc	3,2
  3641     018C  298E               	goto	u1131
  3642     018D  298F               	goto	u1130
  3643     018E                     u1131:
  3644     018E  2994               	goto	l1944
  3645     018F                     u1130:
  3646     018F                     l1942:
  3647     018F  09C6               	comf	___awdiv@quotient,f
  3648     0190  09C7               	comf	___awdiv@quotient+1,f
  3649     0191  0AC6               	incf	___awdiv@quotient,f
  3650     0192  1903               	skipnz
  3651     0193  0AC7               	incf	___awdiv@quotient+1,f
  3652     0194                     l1944:
  3653     0194  0847               	movf	___awdiv@quotient+1,w
  3654     0195  00F4               	movwf	?___awdiv+1
  3655     0196  0846               	movf	___awdiv@quotient,w
  3656     0197  00F3               	movwf	?___awdiv
  3657     0198                     l587:
  3658     0198  0008               	return
  3659     0199                     __end_of___awdiv:
  3660                           
  3661                           	psect	text17
  3662     03C2                     __ptext17:	
  3663 ;; *************** function _HAL_Set_Cursor *****************
  3664 ;; Defined at:
  3665 ;;		line 318 in file "Rover_Main_Ver01.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  col             2    1[BANK0 ] int 
  3668 ;;  line            2    3[BANK0 ] int 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  addr            2    5[BANK0 ] int 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;Total ram usage:        6 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 6
  3687 ;; This function calls:
  3688 ;;		_HAL_Write_Command
  3689 ;; This function is called by:
  3690 ;;		_alienFrequencyTask
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694     03C2                     _HAL_Set_Cursor:	
  3695                           ;psect for function _HAL_Set_Cursor
  3696                           
  3697     03C2                     l1866:	
  3698                           ;incstack = 0
  3699                           ; Regs used in _HAL_Set_Cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3700                           
  3701                           
  3702                           ;Rover_Main_Ver01.c: 319:  int addr = col & 0x3F;
  3703     03C2  303F               	movlw	63
  3704     03C3  0020               	movlb	0	; select bank0
  3705     03C4  0545               	andwf	HAL_Set_Cursor@col,w
  3706     03C5  00C9               	movwf	HAL_Set_Cursor@addr
  3707     03C6  3000               	movlw	0
  3708     03C7  0546               	andwf	HAL_Set_Cursor@col+1,w
  3709     03C8  00CA               	movwf	HAL_Set_Cursor@addr+1
  3710     03C9                     l1868:
  3711                           
  3712                           ;Rover_Main_Ver01.c: 320:  if (line & 1){
  3713     03C9  1C47               	btfss	HAL_Set_Cursor@line,0
  3714     03CA  2BCC               	goto	u1011
  3715     03CB  2BCD               	goto	u1010
  3716     03CC                     u1011:
  3717     03CC  2BD1               	goto	l1872
  3718     03CD                     u1010:
  3719     03CD                     l1870:
  3720                           
  3721                           ;Rover_Main_Ver01.c: 321:   addr += 0x40;
  3722     03CD  3040               	movlw	64
  3723     03CE  07C9               	addwf	HAL_Set_Cursor@addr,f
  3724     03CF  3000               	movlw	0
  3725     03D0  3DCA               	addwfc	HAL_Set_Cursor@addr+1,f
  3726     03D1                     l1872:
  3727                           
  3728                           ;Rover_Main_Ver01.c: 323:  if(line & 2){
  3729     03D1  1CC7               	btfss	HAL_Set_Cursor@line,1
  3730     03D2  2BD4               	goto	u1021
  3731     03D3  2BD5               	goto	u1020
  3732     03D4                     u1021:
  3733     03D4  2BD9               	goto	l1876
  3734     03D5                     u1020:
  3735     03D5                     l1874:
  3736                           
  3737                           ;Rover_Main_Ver01.c: 324:   addr += 0x14;
  3738     03D5  3014               	movlw	20
  3739     03D6  07C9               	addwf	HAL_Set_Cursor@addr,f
  3740     03D7  3000               	movlw	0
  3741     03D8  3DCA               	addwfc	HAL_Set_Cursor@addr+1,f
  3742     03D9                     l1876:
  3743                           
  3744                           ;Rover_Main_Ver01.c: 326:  HAL_Write_Command(0x80 | addr);
  3745     03D9  0849               	movf	HAL_Set_Cursor@addr,w
  3746     03DA  3880               	iorlw	128
  3747     03DB  3183  233E  3183   	fcall	_HAL_Write_Command
  3748     03DE                     l185:
  3749     03DE  0008               	return
  3750     03DF                     __end_of_HAL_Set_Cursor:
  3751                           
  3752                           	psect	text18
  3753     02EE                     __ptext18:	
  3754 ;; *************** function _HAL_LCD_Print *****************
  3755 ;; Defined at:
  3756 ;;		line 329 in file "Rover_Main_Ver01.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  string          1    1[BANK0 ] PTR unsigned char 
  3759 ;;		 -> Rover_Team(16), alienFrequencyTask@freq_char(4), FFT_Home2(16), FFT_Home1(16), 
  3760 ;;  size            2    2[BANK0 ] int 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  i               2    5[BANK0 ] int 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3772 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;Total ram usage:        6 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 6
  3779 ;; This function calls:
  3780 ;;		_HAL_Write_Data
  3781 ;; This function is called by:
  3782 ;;		_alienFrequencyTask
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787     02EE                     _HAL_LCD_Print:	
  3788                           ;psect for function _HAL_LCD_Print
  3789                           
  3790     02EE                     l1878:	
  3791                           ;incstack = 0
  3792                           ; Regs used in _HAL_LCD_Print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3793                           
  3794                           
  3795                           ;Rover_Main_Ver01.c: 330:  for(int i=0;i<size;i++){
  3796     02EE  0020               	movlb	0	; select bank0
  3797     02EF  01C9               	clrf	HAL_LCD_Print@i
  3798     02F0  01CA               	clrf	HAL_LCD_Print@i+1
  3799     02F1  2B0B               	goto	l1888
  3800     02F2                     l1880:
  3801                           
  3802                           ;Rover_Main_Ver01.c: 331:   HAL_Write_Data(*string);
  3803     02F2  0020               	movlb	0	; select bank0
  3804     02F3  0845               	movf	HAL_LCD_Print@string,w
  3805     02F4  0086               	movwf	6
  3806     02F5  0187               	clrf	7
  3807     02F6  0801               	movf	1,w
  3808     02F7  3184  2413  3182   	fcall	_HAL_Write_Data
  3809     02FA                     l1882:
  3810                           
  3811                           ;Rover_Main_Ver01.c: 332:   string = string + 1;
  3812     02FA  0020               	movlb	0	; select bank0
  3813     02FB  0845               	movf	HAL_LCD_Print@string,w
  3814     02FC  3E01               	addlw	1
  3815     02FD  00C5               	movwf	HAL_LCD_Print@string
  3816     02FE                     l1884:
  3817                           
  3818                           ;Rover_Main_Ver01.c: 333:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3819     02FE  3007               	movlw	7
  3820     02FF  0020               	movlb	0	; select bank0
  3821     0300  00C8               	movwf	??_HAL_LCD_Print
  3822     0301  307D               	movlw	125
  3823     0302                     u1287:
  3824     0302  0B89               	decfsz	9,f
  3825     0303  2B02               	goto	u1287
  3826     0304  0BC8               	decfsz	??_HAL_LCD_Print,f
  3827     0305  2B02               	goto	u1287
  3828     0306                     l1886:
  3829                           
  3830                           ;Rover_Main_Ver01.c: 334:  }
  3831     0306  3001               	movlw	1
  3832     0307  0020               	movlb	0	; select bank0
  3833     0308  07C9               	addwf	HAL_LCD_Print@i,f
  3834     0309  3000               	movlw	0
  3835     030A  3DCA               	addwfc	HAL_LCD_Print@i+1,f
  3836     030B                     l1888:
  3837     030B  084A               	movf	HAL_LCD_Print@i+1,w
  3838     030C  3A80               	xorlw	128
  3839     030D  00C8               	movwf	??_HAL_LCD_Print
  3840     030E  0847               	movf	HAL_LCD_Print@size+1,w
  3841     030F  3A80               	xorlw	128
  3842     0310  0248               	subwf	??_HAL_LCD_Print,w
  3843     0311  1D03               	skipz
  3844     0312  2B15               	goto	u1035
  3845     0313  0846               	movf	HAL_LCD_Print@size,w
  3846     0314  0249               	subwf	HAL_LCD_Print@i,w
  3847     0315                     u1035:
  3848     0315  1C03               	skipc
  3849     0316  2B18               	goto	u1031
  3850     0317  2B19               	goto	u1030
  3851     0318                     u1031:
  3852     0318  2AF2               	goto	l1880
  3853     0319                     u1030:
  3854     0319                     l191:
  3855     0319  0008               	return
  3856     031A                     __end_of_HAL_LCD_Print:
  3857                           
  3858                           	psect	text19
  3859     0413                     __ptext19:	
  3860 ;; *************** function _HAL_Write_Data *****************
  3861 ;; Defined at:
  3862 ;;		line 267 in file "Rover_Main_Ver01.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  data            1    wreg     unsigned char 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  data            1    0[BANK0 ] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;Total ram usage:        2 bytes
  3881 ;; Hardware stack levels used: 1
  3882 ;; Hardware stack levels required when called: 5
  3883 ;; This function calls:
  3884 ;;		__write_byte
  3885 ;; This function is called by:
  3886 ;;		_HAL_LCD_Print
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890     0413                     _HAL_Write_Data:	
  3891                           ;psect for function _HAL_Write_Data
  3892                           
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _HAL_Write_Data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3896                           ;HAL_Write_Data@data stored from wreg
  3897     0413  0020               	movlb	0	; select bank0
  3898     0414  00C4               	movwf	HAL_Write_Data@data
  3899     0415                     l1862:
  3900                           
  3901                           ;Rover_Main_Ver01.c: 268:  _write_byte((data & 0xF0)| 1);
  3902     0415  0844               	movf	HAL_Write_Data@data,w
  3903     0416  39F0               	andlw	240
  3904     0417  3801               	iorlw	1
  3905     0418  3184  2460  3184   	fcall	__write_byte
  3906                           
  3907                           ;Rover_Main_Ver01.c: 269:  _write_byte(((data << 4) & 0xF0) | 1);
  3908     041B  0020               	movlb	0	; select bank0
  3909     041C  0844               	movf	HAL_Write_Data@data,w
  3910     041D  00F9               	movwf	??_HAL_Write_Data
  3911     041E  3004               	movlw	4
  3912     041F                     u1005:
  3913     041F  35F9               	lslf	??_HAL_Write_Data,f
  3914     0420  0B89               	decfsz	9,f
  3915     0421  2C1F               	goto	u1005
  3916     0422  0879               	movf	??_HAL_Write_Data,w
  3917     0423  39F0               	andlw	240
  3918     0424  3801               	iorlw	1
  3919     0425  3184  2460  3184   	fcall	__write_byte
  3920     0428                     l151:
  3921     0428  0008               	return
  3922     0429                     __end_of_HAL_Write_Data:
  3923                           
  3924                           	psect	text20
  3925     0494                     __ptext20:	
  3926 ;; *************** function _HAL_Clear *****************
  3927 ;; Defined at:
  3928 ;;		line 273 in file "Rover_Main_Ver01.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;Total ram usage:        1 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 6
  3949 ;; This function calls:
  3950 ;;		_HAL_Write_Command
  3951 ;; This function is called by:
  3952 ;;		_init_LCD
  3953 ;;		_alienFrequencyTask
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957     0494                     _HAL_Clear:	
  3958                           ;psect for function _HAL_Clear
  3959                           
  3960     0494                     l1838:	
  3961                           ;incstack = 0
  3962                           ; Regs used in _HAL_Clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3963                           
  3964                           
  3965                           ;Rover_Main_Ver01.c: 274:  HAL_Write_Command(0x01);
  3966     0494  3001               	movlw	1
  3967     0495  3183  233E  3184   	fcall	_HAL_Write_Command
  3968     0498                     l1840:
  3969                           
  3970                           ;Rover_Main_Ver01.c: 275:  _delay((unsigned long)((3)*(4000000/4000.0)));
  3971     0498  3004               	movlw	4
  3972     0499  0020               	movlb	0	; select bank0
  3973     049A  00C5               	movwf	??_HAL_Clear
  3974     049B  30E4               	movlw	228
  3975     049C                     u1297:
  3976     049C  0B89               	decfsz	9,f
  3977     049D  2C9C               	goto	u1297
  3978     049E  0BC5               	decfsz	??_HAL_Clear,f
  3979     049F  2C9C               	goto	u1297
  3980     04A0  0000               	nop
  3981     04A1                     l154:
  3982     04A1  0008               	return
  3983     04A2                     __end_of_HAL_Clear:
  3984                           
  3985                           	psect	text21
  3986     033E                     __ptext21:	
  3987 ;; *************** function _HAL_Write_Command *****************
  3988 ;; Defined at:
  3989 ;;		line 245 in file "Rover_Main_Ver01.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  cmd             1    wreg     unsigned char 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  cmd             1    0[BANK0 ] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;Total ram usage:        2 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 5
  4010 ;; This function calls:
  4011 ;;		__write_byte
  4012 ;; This function is called by:
  4013 ;;		_HAL_Clear
  4014 ;;		_HAL_Display_On
  4015 ;;		_HAL_Set_Entry_Mode
  4016 ;;		_HAL_Set_Cursor
  4017 ;;		_HAL_Show_Cursor
  4018 ;;		_HAL_Hide_Cursor
  4019 ;;		_HAL_Blink_Cursor_On
  4020 ;;		_HAL_Blink_Cursor_Off
  4021 ;;		_HAL_Display_Off
  4022 ;;		_HAL_Home
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026     033E                     _HAL_Write_Command:	
  4027                           ;psect for function _HAL_Write_Command
  4028                           
  4029                           
  4030                           ;incstack = 0
  4031                           ; Regs used in _HAL_Write_Command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4032                           ;HAL_Write_Command@cmd stored from wreg
  4033     033E  0020               	movlb	0	; select bank0
  4034     033F  00C4               	movwf	HAL_Write_Command@cmd
  4035     0340                     l1832:
  4036                           
  4037                           ;Rover_Main_Ver01.c: 246:  _write_byte((cmd & 0xF0) | 0);
  4038     0340  0844               	movf	HAL_Write_Command@cmd,w
  4039     0341  39F0               	andlw	240
  4040     0342  3184  2460  3183   	fcall	__write_byte
  4041                           
  4042                           ;Rover_Main_Ver01.c: 247:  _write_byte(((cmd<<4) & 0xF0) | 0);
  4043     0345  0020               	movlb	0	; select bank0
  4044     0346  0844               	movf	HAL_Write_Command@cmd,w
  4045     0347  00F9               	movwf	??_HAL_Write_Command
  4046     0348  3004               	movlw	4
  4047     0349                     u945:
  4048     0349  35F9               	lslf	??_HAL_Write_Command,f
  4049     034A  0B89               	decfsz	9,f
  4050     034B  2B49               	goto	u945
  4051     034C  0879               	movf	??_HAL_Write_Command,w
  4052     034D  39F0               	andlw	240
  4053     034E  3184  2460  3183   	fcall	__write_byte
  4054     0351                     l1834:
  4055                           
  4056                           ;Rover_Main_Ver01.c: 248:  if (cmd <= 3){
  4057     0351  3004               	movlw	4
  4058     0352  0020               	movlb	0	; select bank0
  4059     0353  0244               	subwf	HAL_Write_Command@cmd,w
  4060     0354  1803               	skipnc
  4061     0355  2B57               	goto	u951
  4062     0356  2B58               	goto	u950
  4063     0357                     u951:
  4064     0357  2B60               	goto	l142
  4065     0358                     u950:
  4066     0358                     l1836:
  4067                           
  4068                           ;Rover_Main_Ver01.c: 249:   _delay((unsigned long)((5)*(4000000/4000.0)));
  4069     0358  3007               	movlw	7
  4070     0359  00F9               	movwf	??_HAL_Write_Command
  4071     035A  307D               	movlw	125
  4072     035B                     u1307:
  4073     035B  0B89               	decfsz	9,f
  4074     035C  2B5B               	goto	u1307
  4075     035D  0BF9               	decfsz	??_HAL_Write_Command,f
  4076     035E  2B5B               	goto	u1307
  4077     035F  0000               	nop
  4078     0360                     l142:
  4079     0360  0008               	return
  4080     0361                     __end_of_HAL_Write_Command:
  4081                           
  4082                           	psect	text22
  4083     0460                     __ptext22:	
  4084 ;; *************** function __write_byte *****************
  4085 ;; Defined at:
  4086 ;;		line 232 in file "Rover_Main_Ver01.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  byte            1    wreg     unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  byte            1    8[COMMON] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;Total ram usage:        1 bytes
  4105 ;; Hardware stack levels used: 1
  4106 ;; Hardware stack levels required when called: 4
  4107 ;; This function calls:
  4108 ;;		_HAL_I2C_Master_Transmit
  4109 ;;		_HAL_Pulse_Enable
  4110 ;; This function is called by:
  4111 ;;		_HAL_Write_Command
  4112 ;;		_HAL_Write_Data
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116     0460                     __write_byte:	
  4117                           ;psect for function __write_byte
  4118                           
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in __write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4122                           ;__write_byte@byte stored from wreg
  4123     0460  00F8               	movwf	__write_byte@byte
  4124     0461                     l1826:
  4125                           
  4126                           ;Rover_Main_Ver01.c: 233:  byte = (byte | LCD._backlight);
  4127     0461  0020               	movlb	0	; select bank0
  4128     0462  0862               	movf	_LCD+10,w
  4129     0463  0478               	iorwf	__write_byte@byte,w
  4130     0464  00F8               	movwf	__write_byte@byte
  4131     0465                     l1828:
  4132                           
  4133                           ;Rover_Main_Ver01.c: 234:     HAL_I2C_Master_Transmit(LCD.i2c_addr, &byte,1);
  4134     0465  3078               	movlw	(low (__write_byte@byte| 0))& (0+255)
  4135     0466  00F4               	movwf	HAL_I2C_Master_Transmit@dataByte
  4136     0467  01F5               	clrf	HAL_I2C_Master_Transmit@numberOfDataBytes
  4137     0468  0AF5               	incf	HAL_I2C_Master_Transmit@numberOfDataBytes,f
  4138     0469  0858               	movf	_LCD,w
  4139     046A  3184  2429  3184   	fcall	_HAL_I2C_Master_Transmit
  4140     046D                     l1830:
  4141                           
  4142                           ;Rover_Main_Ver01.c: 235:     HAL_Pulse_Enable(byte);
  4143     046D  0878               	movf	__write_byte@byte,w
  4144     046E  3183  23DF  3184   	fcall	_HAL_Pulse_Enable
  4145     0471                     l135:
  4146     0471  0008               	return
  4147     0472                     __end_of__write_byte:
  4148                           
  4149                           	psect	text23
  4150     03DF                     __ptext23:	
  4151 ;; *************** function _HAL_Pulse_Enable *****************
  4152 ;; Defined at:
  4153 ;;		line 225 in file "Rover_Main_Ver01.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  byte            1    wreg     unsigned char 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  byte            1    7[COMMON] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;Total ram usage:        1 bytes
  4172 ;; Hardware stack levels used: 1
  4173 ;; Hardware stack levels required when called: 3
  4174 ;; This function calls:
  4175 ;;		_HAL_I2C_Master_Transmit
  4176 ;; This function is called by:
  4177 ;;		__write_byte
  4178 ;;		_HAL_Write_Init_Nibble
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182     03DF                     _HAL_Pulse_Enable:	
  4183                           ;psect for function _HAL_Pulse_Enable
  4184                           
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _HAL_Pulse_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4188                           ;HAL_Pulse_Enable@byte stored from wreg
  4189     03DF  00F7               	movwf	HAL_Pulse_Enable@byte
  4190     03E0                     l1820:
  4191                           
  4192                           ;Rover_Main_Ver01.c: 226:  byte = (byte | 0x04 | LCD._backlight);
  4193     03E0  0020               	movlb	0	; select bank0
  4194     03E1  0862               	movf	_LCD+10,w
  4195     03E2  0477               	iorwf	HAL_Pulse_Enable@byte,w
  4196     03E3  3804               	iorlw	4
  4197     03E4  00F7               	movwf	HAL_Pulse_Enable@byte
  4198     03E5                     l1822:
  4199                           
  4200                           ;Rover_Main_Ver01.c: 227:  HAL_I2C_Master_Transmit(LCD.i2c_addr, &byte, 1);
  4201     03E5  3077               	movlw	(low (HAL_Pulse_Enable@byte| 0))& (0+255)
  4202     03E6  00F4               	movwf	HAL_I2C_Master_Transmit@dataByte
  4203     03E7  01F5               	clrf	HAL_I2C_Master_Transmit@numberOfDataBytes
  4204     03E8  0AF5               	incf	HAL_I2C_Master_Transmit@numberOfDataBytes,f
  4205     03E9  0858               	movf	_LCD,w
  4206     03EA  3184  2429  3183   	fcall	_HAL_I2C_Master_Transmit
  4207     03ED                     l1824:
  4208                           
  4209                           ;Rover_Main_Ver01.c: 228:  byte = ((byte & ~0x04) | LCD._backlight);
  4210     03ED  0877               	movf	HAL_Pulse_Enable@byte,w
  4211     03EE  39FB               	andlw	251
  4212     03EF  0020               	movlb	0	; select bank0
  4213     03F0  0462               	iorwf	_LCD+10,w
  4214     03F1  00F7               	movwf	HAL_Pulse_Enable@byte
  4215                           
  4216                           ;Rover_Main_Ver01.c: 229:  HAL_I2C_Master_Transmit(LCD.i2c_addr, &byte, 1);
  4217     03F2  3077               	movlw	(low (HAL_Pulse_Enable@byte| 0))& (0+255)
  4218     03F3  00F4               	movwf	HAL_I2C_Master_Transmit@dataByte
  4219     03F4  01F5               	clrf	HAL_I2C_Master_Transmit@numberOfDataBytes
  4220     03F5  0AF5               	incf	HAL_I2C_Master_Transmit@numberOfDataBytes,f
  4221     03F6  0858               	movf	_LCD,w
  4222     03F7  3184  2429  3183   	fcall	_HAL_I2C_Master_Transmit
  4223     03FA                     l132:
  4224     03FA  0008               	return
  4225     03FB                     __end_of_HAL_Pulse_Enable:
  4226                           
  4227                           	psect	text24
  4228     0429                     __ptext24:	
  4229 ;; *************** function _HAL_I2C_Master_Transmit *****************
  4230 ;; Defined at:
  4231 ;;		line 196 in file "Rover_Main_Ver01.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  slaveAddress    1    wreg     unsigned char 
  4234 ;;  dataByte        1    4[COMMON] PTR unsigned char 
  4235 ;;		 -> HAL_Backlight_Off@byte(1), HAL_Backlight_On@byte(1), HAL_Write_Init_Nibble@byte(1), _write_byte@byte(1), 
  4236 ;;		 -> HAL_Pulse_Enable@byte(1), 
  4237 ;;  numberOfData    1    5[COMMON] unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  slaveAddress    1    6[COMMON] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4252 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;Total ram usage:        3 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 2
  4256 ;; This function calls:
  4257 ;;		_I2C_start
  4258 ;;		_I2C_stop
  4259 ;;		_I2C_write
  4260 ;; This function is called by:
  4261 ;;		_HAL_Pulse_Enable
  4262 ;;		__write_byte
  4263 ;;		_HAL_Write_Init_Nibble
  4264 ;;		_HAL_Backlight_On
  4265 ;;		_HAL_Backlight_Off
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269     0429                     _HAL_I2C_Master_Transmit:	
  4270                           ;psect for function _HAL_I2C_Master_Transmit
  4271                           
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in _HAL_I2C_Master_Transmit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4275                           ;HAL_I2C_Master_Transmit@slaveAddress stored from wreg
  4276     0429  00F6               	movwf	HAL_I2C_Master_Transmit@slaveAddress
  4277     042A                     l1812:
  4278                           
  4279                           ;Rover_Main_Ver01.c: 197:     I2C_start();
  4280     042A  3184  24B3  3184   	fcall	_I2C_start
  4281     042D                     l1814:
  4282                           
  4283                           ;Rover_Main_Ver01.c: 199:     I2C_write(slaveAddress);
  4284     042D  0876               	movf	HAL_I2C_Master_Transmit@slaveAddress,w
  4285     042E  3184  2472  3184   	fcall	_I2C_write
  4286     0431                     l1816:
  4287                           
  4288                           ;Rover_Main_Ver01.c: 202:     I2C_write(*dataByte);
  4289     0431  0874               	movf	HAL_I2C_Master_Transmit@dataByte,w
  4290     0432  0086               	movwf	6
  4291     0433  0187               	clrf	7
  4292     0434  0801               	movf	1,w
  4293     0435  3184  2472  3184   	fcall	_I2C_write
  4294     0438                     l1818:
  4295                           
  4296                           ;Rover_Main_Ver01.c: 205:     I2C_stop();
  4297     0438  3184  24AC  3184   	fcall	_I2C_stop
  4298     043B                     l117:
  4299     043B  0008               	return
  4300     043C                     __end_of_HAL_I2C_Master_Transmit:
  4301                           
  4302                           	psect	text25
  4303     0472                     __ptext25:	
  4304 ;; *************** function _I2C_write *****************
  4305 ;; Defined at:
  4306 ;;		line 179 in file "Rover_Main_Ver01.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  data            1    wreg     unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  data            1    3[COMMON] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;Total ram usage:        1 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_HAL_I2C_Master_Transmit
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334     0472                     _I2C_write:	
  4335                           ;psect for function _I2C_write
  4336                           
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _I2C_write: [wreg+status,2+status,0]
  4340                           ;I2C_write@data stored from wreg
  4341     0472  00F3               	movwf	I2C_write@data
  4342     0473                     l1806:
  4343                           
  4344                           ;Rover_Main_Ver01.c: 180:     SSP2BUF = data;
  4345     0473  0873               	movf	I2C_write@data,w
  4346     0474  0023               	movlb	3	; select bank3
  4347     0475  0096               	movwf	22	;volatile
  4348     0476                     l1808:
  4349                           
  4350                           ;Rover_Main_Ver01.c: 181:     bf = SSP2STATbits.BF;
  4351     0476  0819               	movf	25,w	;volatile
  4352     0477  3901               	andlw	1
  4353     0478  00FA               	movwf	_bf
  4354                           
  4355                           ;Rover_Main_Ver01.c: 182:     while(SSP2STATbits.BF == 1){
  4356     0479  2C7B               	goto	l107
  4357     047A                     l108:
  4358                           
  4359                           ;Rover_Main_Ver01.c: 183:         __nop();
  4360     047A  0000               	nop
  4361     047B                     l107:	
  4362                           ;Rover_Main_Ver01.c: 184:     }
  4363                           
  4364                           
  4365                           ;Rover_Main_Ver01.c: 182:     while(SSP2STATbits.BF == 1){
  4366     047B  0023               	movlb	3	; select bank3
  4367     047C  1819               	btfsc	25,0	;volatile
  4368     047D  2C7F               	goto	u931
  4369     047E  2C80               	goto	u930
  4370     047F                     u931:
  4371     047F  2C7A               	goto	l108
  4372     0480                     u930:
  4373     0480                     l1810:
  4374                           
  4375                           ;Rover_Main_Ver01.c: 185:     bf = SSP2STATbits.BF;
  4376     0480  0819               	movf	25,w	;volatile
  4377     0481  3901               	andlw	1
  4378     0482  00FA               	movwf	_bf
  4379     0483                     l110:
  4380     0483  0008               	return
  4381     0484                     __end_of_I2C_write:
  4382                           
  4383                           	psect	text26
  4384     04AC                     __ptext26:	
  4385 ;; *************** function _I2C_stop *****************
  4386 ;; Defined at:
  4387 ;;		line 149 in file "Rover_Main_Ver01.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		None
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 1
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_HAL_I2C_Master_Transmit
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415     04AC                     _I2C_stop:	
  4416                           ;psect for function _I2C_stop
  4417                           
  4418     04AC                     l1802:	
  4419                           ;incstack = 0
  4420                           ; Regs used in _I2C_stop: []
  4421                           
  4422                           
  4423                           ;Rover_Main_Ver01.c: 150:     SSP2CON2bits.PEN = 1;
  4424     04AC  0023               	movlb	3	; select bank3
  4425     04AD  151B               	bsf	27,2	;volatile
  4426     04AE                     l90:	
  4427                           ;Rover_Main_Ver01.c: 153:     }
  4428                           
  4429                           
  4430                           ;Rover_Main_Ver01.c: 151:     while(SSP2CON2bits.PEN == 1){
  4431     04AE  191B               	btfsc	27,2	;volatile
  4432     04AF  2CB1               	goto	u911
  4433     04B0  2CB2               	goto	u910
  4434     04B1                     u911:
  4435     04B1  2CAE               	goto	l90
  4436     04B2                     u910:
  4437     04B2                     l93:
  4438     04B2  0008               	return
  4439     04B3                     __end_of_I2C_stop:
  4440                           
  4441                           	psect	text27
  4442     04B3                     __ptext27:	
  4443 ;; *************** function _I2C_start *****************
  4444 ;; Defined at:
  4445 ;;		line 170 in file "Rover_Main_Ver01.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		None
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;Total ram usage:        0 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 1
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_HAL_I2C_Master_Transmit
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473     04B3                     _I2C_start:	
  4474                           ;psect for function _I2C_start
  4475                           
  4476     04B3                     l1804:	
  4477                           ;incstack = 0
  4478                           ; Regs used in _I2C_start: []
  4479                           
  4480                           
  4481                           ;Rover_Main_Ver01.c: 172:     SSP2CON2bits.SEN = 1;
  4482     04B3  0023               	movlb	3	; select bank3
  4483     04B4  141B               	bsf	27,0	;volatile
  4484     04B5                     l99:	
  4485                           ;Rover_Main_Ver01.c: 176:     }
  4486                           
  4487                           
  4488                           ;Rover_Main_Ver01.c: 174:     while(SSP2CON2bits.SEN == 1){
  4489     04B5  181B               	btfsc	27,0	;volatile
  4490     04B6  2CB8               	goto	u921
  4491     04B7  2CB9               	goto	u920
  4492     04B8                     u921:
  4493     04B8  2CB5               	goto	l99
  4494     04B9                     u920:
  4495     04B9                     l102:
  4496     04B9  0008               	return
  4497     04BA                     __end_of_I2C_start:
  4498                           
  4499                           	psect	intentry
  4500     0004                     __pintentry:	
  4501 ;; *************** function _Joystick *****************
  4502 ;; Defined at:
  4503 ;;		line 578 in file "Rover_Main_Ver01.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4519 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;Total ram usage:        3 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		Interrupt level 1
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530     0004                     _Joystick:
  4531                           
  4532                           ;incstack = 0
  4533     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4534                           
  4535                           ; Regs used in _Joystick: [wreg+status,2+status,0]
  4536     0005  3180               	pagesel	$
  4537     0006                     i1l1766:
  4538                           
  4539                           ;Rover_Main_Ver01.c: 580:     if(PIR3bits.RCIF == 1){
  4540     0006  002E               	movlb	14	; select bank14
  4541     0007  1E8F               	btfss	15,5	;volatile
  4542     0008  280A               	goto	u88_21
  4543     0009  280B               	goto	u88_20
  4544     000A                     u88_21:
  4545     000A  2838               	goto	i1l1780
  4546     000B                     u88_20:
  4547     000B                     i1l1768:
  4548                           
  4549                           ;Rover_Main_Ver01.c: 581:         if(UART_Not_Recieved == 2){
  4550     000B  3002               	movlw	2
  4551     000C  0020               	movlb	0	; select bank0
  4552     000D  0666               	xorwf	_UART_Not_Recieved,w
  4553     000E  1D03               	btfss	3,2
  4554     000F  2811               	goto	u89_21
  4555     0010  2812               	goto	u89_20
  4556     0011                     u89_21:
  4557     0011  281F               	goto	i1l1772
  4558     0012                     u89_20:
  4559     0012                     i1l1770:
  4560                           
  4561                           ;Rover_Main_Ver01.c: 582:             frequency = RC1REG << 8;
  4562     0012  0022               	movlb	2	; select bank2
  4563     0013  0819               	movf	25,w	;volatile
  4564     0014  00F0               	movwf	??_Joystick
  4565     0015  01F1               	clrf	??_Joystick+1
  4566     0016  0870               	movf	??_Joystick,w
  4567     0017  00F1               	movwf	??_Joystick+1
  4568     0018  01F0               	clrf	??_Joystick
  4569     0019  0870               	movf	??_Joystick,w
  4570     001A  0020               	movlb	0	; select bank0
  4571     001B  00E4               	movwf	_frequency
  4572     001C  0871               	movf	??_Joystick+1,w
  4573     001D  00E5               	movwf	_frequency+1
  4574                           
  4575                           ;Rover_Main_Ver01.c: 583:         }
  4576     001E  2833               	goto	i1l1776
  4577     001F                     i1l1772:
  4578     001F  0366               	decf	_UART_Not_Recieved,w
  4579     0020  1D03               	btfss	3,2
  4580     0021  2823               	goto	u90_21
  4581     0022  2824               	goto	u90_20
  4582     0023                     u90_21:
  4583     0023  2832               	goto	i1l280
  4584     0024                     u90_20:
  4585     0024                     i1l1774:
  4586                           
  4587                           ;Rover_Main_Ver01.c: 585:             frequency = frequency + RC1REG;
  4588     0024  0022               	movlb	2	; select bank2
  4589     0025  0819               	movf	25,w	;volatile
  4590     0026  0020               	movlb	0	; select bank0
  4591     0027  0764               	addwf	_frequency,w
  4592     0028  00F0               	movwf	??_Joystick
  4593     0029  0865               	movf	_frequency+1,w
  4594     002A  1803               	skipnc
  4595     002B  0A65               	incf	_frequency+1,w
  4596     002C  00F1               	movwf	??_Joystick+1
  4597     002D  0870               	movf	??_Joystick,w
  4598     002E  00E4               	movwf	_frequency
  4599     002F  0871               	movf	??_Joystick+1,w
  4600     0030  00E5               	movwf	_frequency+1
  4601                           
  4602                           ;Rover_Main_Ver01.c: 586:         }
  4603     0031  2833               	goto	i1l1776
  4604     0032                     i1l280:	
  4605                           ;Rover_Main_Ver01.c: 587:         else{
  4606                           
  4607                           
  4608                           ;Rover_Main_Ver01.c: 588:             __nop();
  4609     0032  0000               	nop
  4610     0033                     i1l1776:
  4611                           
  4612                           ;Rover_Main_Ver01.c: 590:         UART_Not_Recieved--;
  4613     0033  3001               	movlw	1
  4614     0034  0020               	movlb	0	; select bank0
  4615     0035  02E6               	subwf	_UART_Not_Recieved,f
  4616     0036                     i1l1778:
  4617                           
  4618                           ;Rover_Main_Ver01.c: 591:         PIR3bits.RCIF = 0;
  4619     0036  002E               	movlb	14	; select bank14
  4620     0037  128F               	bcf	15,5	;volatile
  4621     0038                     i1l1780:
  4622                           
  4623                           ;Rover_Main_Ver01.c: 593:     PIR3bits.TXIF = 0;
  4624     0038  120F               	bcf	15,4	;volatile
  4625     0039                     i1l282:
  4626     0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4627     003A  0009               	retfie
  4628     003B                     __end_of_Joystick:
  4629     0002                     ___latbits      equ	2
  4630     007E                     btemp           set	126	;btemp
  4631     007E                     int$flags       set	126
  4632     007E                     wtemp0          set	126
  4633                           
  4634                           	psect	config
  4635                           
  4636                           ;Config register CONFIG1 @ 0x8007
  4637                           ;	External Oscillator mode selection bits
  4638                           ;	FEXTOSC = OFF, Oscillator not enabled
  4639                           ;	Power-up default value for COSC bits
  4640                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  4641                           ;	Clock Out Enable bit
  4642                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  4643                           ;	Clock Switch Enable bit
  4644                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4645                           ;	Fail-Safe Clock Monitor Enable bit
  4646                           ;	FCMEN = ON, FSCM timer enabled
  4647     8007                     	org	32775
  4648     8007  3FEC               	dw	16364
  4649                           
  4650                           ;Config register CONFIG2 @ 0x8008
  4651                           ;	Master Clear Enable bit
  4652                           ;	MCLRE = ON, MCLR pin is Master Clear function
  4653                           ;	Power-up Timer Enable bit
  4654                           ;	PWRTE = OFF, PWRT disabled
  4655                           ;	Low-Power BOR enable bit
  4656                           ;	LPBOREN = OFF, ULPBOR disabled
  4657                           ;	Brown-out reset enable bits
  4658                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4659                           ;	Brown-out Reset Voltage Selection
  4660                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  4661                           ;	Zero-cross detect disable
  4662                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  4663                           ;	Peripheral Pin Select one-way control
  4664                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  4665                           ;	Stack Overflow/Underflow Reset Enable bit
  4666                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4667                           ;	Background Debugger
  4668                           ;	DEBUG = 0x1, unprogrammed default
  4669     8008                     	org	32776
  4670     8008  3FFF               	dw	16383
  4671                           
  4672                           ;Config register CONFIG3 @ 0x8009
  4673                           ;	WDT Period Select bits
  4674                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4675                           ;	WDT operating mode
  4676                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  4677                           ;	WDT Window Select bits
  4678                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4679                           ;	WDT input clock selector
  4680                           ;	WDTCCS = SC, Software Control
  4681     8009                     	org	32777
  4682     8009  3F9F               	dw	16287
  4683                           
  4684                           ;Config register CONFIG4 @ 0x800A
  4685                           ;	UserNVM self-write protection bits
  4686                           ;	WRT = OFF, Write protection off
  4687                           ;	Scanner Enable bit
  4688                           ;	SCANE = available, Scanner module is available for use
  4689                           ;	Low Voltage Programming Enable bit
  4690                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  4691     800A                     	org	32778
  4692     800A  3FFF               	dw	16383
  4693                           
  4694                           ;Config register CONFIG5 @ 0x800B
  4695                           ;	UserNVM Program memory code protection bit
  4696                           ;	CP = OFF, Program Memory code protection disabled
  4697                           ;	DataNVM code protection bit
  4698                           ;	CPD = OFF, Data EEPROM code protection disabled
  4699     800B                     	org	32779
  4700     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         16
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     20      71
    BANK1            80      0      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    HAL_I2C_Master_Transmit@dataByte	PTR unsigned char  size(1) Largest target is 1
		 -> HAL_Backlight_Off@byte(COMMON[1]), HAL_Backlight_On@byte(COMMON[1]), HAL_Pulse_Enable@byte(COMMON[1]), HAL_Write_Init_Nibble@byte(BANK0[1]), 
		 -> _write_byte@byte(COMMON[1]), 

    HAL_LCD_Print@string	PTR unsigned char  size(1) Largest target is 16
		 -> alienFrequencyTask@freq_char(BANK0[4]), FFT_Home1(BANK0[16]), FFT_Home2(BANK1[16]), Rover_Team(BANK0[16]), 


Critical Paths under _main in COMMON

    _initinit->_HAL_Write_Init_Nibble
    _HAL_Set_Entry_Mode->_HAL_Write_Command
    _HAL_Display_On->_HAL_Write_Command
    _HAL_Write_Init_Nibble->_HAL_Pulse_Enable
    _alienFrequencyTask->___lwdiv
    _HAL_Set_Cursor->_HAL_Write_Command
    _HAL_LCD_Print->_HAL_Write_Data
    _HAL_Write_Data->__write_byte
    _HAL_Clear->_HAL_Write_Command
    _HAL_Write_Command->__write_byte
    __write_byte->_HAL_Pulse_Enable
    _HAL_Pulse_Enable->_HAL_I2C_Master_Transmit
    _HAL_I2C_Master_Transmit->_I2C_write

Critical Paths under _Joystick in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_alienFrequencyTask
    _initialize_all->_initinit
    _init_LCD->_HAL_Set_Entry_Mode
    _HAL_Set_Entry_Mode->_HAL_Write_Command
    _HAL_Display_On->_HAL_Write_Command
    _alienFrequencyTask->_HAL_LCD_Print
    _alienFrequencyTask->_HAL_Set_Cursor
    _HAL_Set_Cursor->_HAL_Write_Command
    _HAL_LCD_Print->_HAL_Write_Data
    _HAL_Clear->_HAL_Write_Command

Critical Paths under _Joystick in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Joystick in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Joystick in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Joystick in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Joystick in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Joystick in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Joystick in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Joystick in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Joystick in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Joystick in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Joystick in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Joystick in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Joystick in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10800
                      _HAL_LCD_Print
                 _alienFrequencyTask
                     _initialize_all
 ---------------------------------------------------------------------------------
 (1) _initialize_all                                       0     0      0    5851
                        _HAL_LED_OFF
                          _configI2C
                          _configISR
                         _configPins
                        _configUART1
                           _init_LCD
                           _initinit
 ---------------------------------------------------------------------------------
 (2) _initinit                                             1     1      0    3251
                                              7 BANK0      1     1      0
              _HAL_Write_Init_Nibble
                           _init_LCD
 ---------------------------------------------------------------------------------
 (3) _init_LCD                                             0     0      0    2574
                          _HAL_Clear
                     _HAL_Display_On
                 _HAL_Set_Entry_Mode
 ---------------------------------------------------------------------------------
 (4) _HAL_Set_Entry_Mode                                   6     2      4     930
                                              1 BANK0      6     2      4
                  _HAL_Write_Command
 ---------------------------------------------------------------------------------
 (4) _HAL_Display_On                                       0     0      0     822
                  _HAL_Write_Command
 ---------------------------------------------------------------------------------
 (3) _HAL_Write_Init_Nibble                                4     4      0     677
                                              8 COMMON     2     2      0
                                              0 BANK0      2     2      0
            _HAL_I2C_Master_Transmit
                   _HAL_Pulse_Enable
 ---------------------------------------------------------------------------------
 (2) _configUART1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configPins                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HAL_LED_OFF                                          2     0      2      26
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _alienFrequencyTask                                  13    13      0    4017
                                              7 BANK0     13    13      0
                          _HAL_Clear
                      _HAL_LCD_Print
                     _HAL_Set_Cursor
                            ___awdiv
                            ___lwdiv
                            ___lwmod
                          _intToChar
 ---------------------------------------------------------------------------------
 (2) _intToChar                                            1     1      0      29
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     161
                                              3 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     164
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     451
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _HAL_Set_Cursor                                       6     2      4     961
                                              1 BANK0      6     2      4
                  _HAL_Write_Command
 ---------------------------------------------------------------------------------
 (2) _HAL_LCD_Print                                        6     3      3     932
                                              1 BANK0      6     3      3
                     _HAL_Write_Data
 ---------------------------------------------------------------------------------
 (3) _HAL_Write_Data                                       2     2      0     775
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                        __write_byte
 ---------------------------------------------------------------------------------
 (4) _HAL_Clear                                            1     1      0     822
                                              1 BANK0      1     1      0
                  _HAL_Write_Command
 ---------------------------------------------------------------------------------
 (5) _HAL_Write_Command                                    2     2      0     822
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                        __write_byte
 ---------------------------------------------------------------------------------
 (6) __write_byte                                          1     1      0     681
                                              8 COMMON     1     1      0
            _HAL_I2C_Master_Transmit
                   _HAL_Pulse_Enable
 ---------------------------------------------------------------------------------
 (7) _HAL_Pulse_Enable                                     1     1      0     367
                                              7 COMMON     1     1      0
            _HAL_I2C_Master_Transmit
 ---------------------------------------------------------------------------------
 (8) _HAL_I2C_Master_Transmit                              3     1      2     161
                                              4 COMMON     3     1      2
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (9) _I2C_write                                            1     1      0      47
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Joystick                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HAL_LCD_Print
     _HAL_Write_Data
       __write_byte
         _HAL_I2C_Master_Transmit
           _I2C_start
           _I2C_stop
           _I2C_write
         _HAL_Pulse_Enable
           _HAL_I2C_Master_Transmit
   _alienFrequencyTask
     _HAL_Clear
       _HAL_Write_Command
         __write_byte
     _HAL_LCD_Print
     _HAL_Set_Cursor
       _HAL_Write_Command
     ___awdiv
     ___lwdiv
     ___lwmod
     _intToChar
   _initialize_all
     _HAL_LED_OFF
     _configI2C
     _configISR
     _configPins
     _configUART1
     _init_LCD
       _HAL_Clear
       _HAL_Display_On
         _HAL_Write_Command
       _HAL_Set_Entry_Mode
         _HAL_Write_Command
     _initinit
       _HAL_Write_Init_Nibble
         _HAL_I2C_Master_Transmit
         _HAL_Pulse_Enable
       _init_LCD

 _Joystick (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     10      11     78.6%
BANK0               80     20      71     88.8%
BANK1               80      0      16     20.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      98      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Mar 22 02:57:47 2025

                                      l81 045F                                        l90 04AE  
                                      l93 04B2                                        l87 04CF  
                                      l96 04AB                                        l99 04B5  
                            ___awdiv@sign 0045                          ??_HAL_Set_Cursor 007A  
                                      _bf 007A                       alienFrequencyTask@i 0056  
                                     l102 04B9                                       l110 0483  
                                     l210 0384                                       l107 047B  
                                     l108 047A                                       l132 03FA  
                                     l212 0387                                       l117 043B  
                                     l213 038A                                       l142 0360  
                                     l214 038D                                       l135 0471  
                                     l151 0428                                       l223 028A  
                                     l215 03A3                                       l154 04A1  
                                     l218 0218                                       l138 0382  
                                     l252 013C                                       l245 00C6  
                                     l261 01DE                                       l191 0319  
                                     l185 03DE                                       l169 04CA  
                                     l177 0412                                       l194 044D  
                                     l267 03B7                                       l197 02ED  
                                     l714 0252                                       l724 02BC  
                                     l587 0198                                       _LCD 0058  
                                     u710 022F                                       u711 022E  
                                     u705 0225                                       u730 023E  
                                     u810 02B8                                       u731 023D  
                                     u811 02B7                                       u725 0230  
                                     u805 02AE                                       u910 04B2  
                                     u750 024E                                       u911 04B1  
                                     u751 024D                                       u735 023A  
                                     u920 04B9                                       u760 0291  
                                     u921 04B8                                       u745 0244  
                                     u761 0290                                       u930 0480  
                                     u690 0221                                       u931 047F  
                                     u691 0220                                       u780 029F  
                                     u781 029E                                       u950 0358  
                                     u790 02A9                                       u951 0357  
                                     u791 02A8                                       u775 0295  
                                     u960 0406                                       u945 0349  
                                     u961 0405                                       u970 040D  
                                     u795 02A5                                       u971 040C  
                                     u985 0366                                       u995 036D  
                                     wreg 0009                 ??_HAL_I2C_Master_Transmit 0076  
                            ?__write_byte 0070                              _BAUD1CONbits 011F  
                                    l2000 0199                                      l2010 01AC  
                                    l2002 019E                                      l2020 01BC  
                                    l2012 01B0                                      l2004 01A0  
                                    l2030 01D7                                      l2022 01BF  
                                    l2014 01B3                                      l2006 01A4  
                                    l2024 01C2                                      l2016 01B6  
                                    l2008 01A8                                      l2026 01C9  
                                    l2018 01B9                                      l1500 0214  
                                    l1420 0455                                      l2028 01D0  
                                    l2060 03A7                                      l1510 0257  
                                    l1502 0216                                      l1430 045B  
                                    l1422 0456                                      l2062 03A9  
                                    l1600 021B                                      l1504 0254  
                                    l1440 04A2                                      l1432 045C  
                                    l1424 0458                                      l2064 03AD  
                                    l1610 022F                                      l1602 0221  
                                    l1530 0261                                      l1522 025D  
                                    l1514 0259                                      l1506 0255  
                                    l1442 04A6                                      l1434 045D  
                                    l1426 0459                                      l1418 044E  
                                    l2066 03BC                                      l2058 03A4  
                                    l1612 023E                                      l1604 0224  
                                    l1620 024E                                      l1444 04AA  
                                    l1436 045E                                      l1428 045A  
                                    l1614 0242                                      l1606 0229  
                                    l1630 0299                                      l1550 0289  
                                    l1542 0267                                      l1534 0263  
                                    l1526 025F                                      l1518 025B  
                                    l1438 04CB                                      l1616 0243  
                                    l1608 022B                                      l1640 02B2  
                                    l1632 029B                                      l1624 028B  
                                    l2088 0395                                      l1802 04AC  
                                    l1810 0480                                      l1618 0248  
                                    l1634 029F                                      l1626 0291  
                                    l1642 02B8                                      l1538 0265  
                                    l1804 04B3                                      l1812 042A  
                                    l1820 03E0                                      l1636 02A9  
                                    l1628 0294                                      l1548 0269  
                                    l1484 0383                                      l1900 02E2  
                                    l1806 0473                                      l1814 042D  
                                    l1822 03E5                                      l1830 046D  
                                    l1910 0148                                      l1638 02AD  
                                    l1494 01DF                                      l1902 02E6  
                                    l1808 0476                                      l1816 0431  
                                    l1824 03ED                                      l1832 0340  
                                    l1840 0498                                      l1920 0157  
                                    l1912 014A                                      l1904 013D  
                                    l1488 0390                                      l1496 0208  
                                    l1818 0438                                      l1826 0461  
                                    l1834 0351                                      l1930 016B  
                                    l1922 015D                                      l1914 014E  
                                    l1906 013F                                      l1498 0211  
                                    l1842 04C6                                      l1850 0407  
                                    l1828 0465                                      l1836 0358  
                                    l1932 017A                                      l1924 0160  
                                    l1940 018A                                      l1916 0153  
                                    l1908 0143                                      l1860 037D  
                                    l1852 040D                                      l1844 03FB  
                                    l1838 0494                                      l1862 0415  
                                    l1870 03CD                                      l1942 018F  
                                    l1934 017E                                      l1926 0165  
                                    l1918 0155                                      l1598 0219  
                                    l1950 0084                                      l1854 040E  
                                    l1846 0400                                      l1880 02F2  
                                    l1872 03D1                                      l1944 0194  
                                    l1936 017F                                      l1928 0167  
                                    l1960 0093                                      l1952 0086  
                                    l1856 0363                                      l1848 0406  
                                    l1864 043C                                      l1882 02FA  
                                    l1874 03D5                                      l1866 03C2  
                                    l1938 0184                                      l1970 00A6  
                                    l1962 0094                                      l1954 008A  
                                    l1858 0375                                      l1890 02BD  
                                    l1884 02FE                                      l1876 03D9  
                                    l1868 03C9                                      l1972 00AF  
                                    l1964 0097                                      l1956 008C  
                                    l1948 0062                                      l1892 02C6  
                                    l1886 0306                                      l1878 02EE  
                                    l1982 00D4                                      l1974 00B4  
                                    l1966 0097                                      l1958 008E  
                                    l1894 02CA                                      l1888 030B  
                                    l1984 00E6                                      l1992 010A  
                                    l1976 00BD                                      l1968 00A1  
                                    l1896 02D6                                      l1994 0123  
                                    l1986 00F7                                      l1978 00C2  
                                    l1898 02DA                                      l1996 012C  
                                    l1988 00F9                                      l1998 0139  
                                    _BRGH 08F2                                      u1010 03CD  
                                    u1011 03CC                                      u1020 03D5  
                                    u1100 017A                                      u1005 041F  
                                    u1021 03D4                                      u1101 0179  
                                    u1030 0319                                      u1031 0318  
                                    u1120 018A                                      u1040 0143  
                                    u1121 0189                                      u1105 0176  
                                    u1041 0142                                      u1130 018F  
                                    u1050 014E                                      u1035 0315  
                                    u1131 018E                                      u1115 0180  
                                    u1051 014D                                      u1060 015D  
                                    u1140 0093                                      u1061 015C  
                                    u1141 0092                                      u1150 00A1  
                                    u1151 00A0                                      u1207 03AA  
                                    u1080 016B                                      u1160 00AF  
                                    u1081 016A                                      u1161 00AE  
                                    u1217 02C1                                      u1170 00BD  
                                    u1307 035B                                      u1075 0161  
                                    u1171 00BC                                      u1227 02CE  
                                    u1180 00D3                                      u1181 00D2  
                                    u1237 02D7                                      u1190 03BC  
                                    u1095 016C                                      u1247 02DF  
                                    u1191 03BB                                      u1185 00CF  
                                    u1257 02E7                                      u1267 0087  
                                    u1277 0132                                      u1287 0302  
                                    u1297 049C                          ??_initialize_all 007A  
                                    _main 03A4                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 003B                          __end_of_I2C_stop 04B3  
               HAL_Write_Init_Nibble@byte 0045                             I2C_write@data 0073  
                                   ?_main 0070                           __end_of___awdiv 0199  
                                   _BRG16 08FB                           ___awdiv@divisor 0073  
         HAL_I2C_Master_Transmit@dataByte 0074                           __end_of___lwdiv 0253  
                                   i1l280 0032                           __end_of___lwmod 02BD  
                                   i1l282 0039                           ___awdiv@counter 0044  
                                   u90_20 0024                                     u90_21 0023  
                                   u88_20 000B                                     u88_21 000A  
                                   u89_20 0012                                     u89_21 0011  
                        ??_HAL_Write_Data 0079                                     status 0003  
                       __end_of_I2C_start 04BA                                     wtemp0 007E  
                       __end_of_I2C_write 0484                           __initialization 003D  
                            __end_of_main 03C2                        _HAL_Set_Entry_Mode 03FB  
                       __end_of_HAL_Clear 04A2               alienFrequencyTask@freq_char 004D  
                                  ??_main 007A                       ?_HAL_Set_Entry_Mode 0045  
                        __end_of_Joystick 003B                          ___awdiv@dividend 0075  
                                  _RC1REG 0119                                    _RC3PPS 0F23  
                                  _RC4PPS 0F24                                    _RC5PPS 0F25  
                                  i1l1770 0012                                    i1l1772 001F  
                                  i1l1780 0038                                    i1l1774 0024  
                                  i1l1766 0006                                    i1l1776 0033  
                                  i1l1768 000B                                    i1l1778 0036  
                          HAL_LED_OFF@LED 0073                        _alienFrequencyTask 0062  
                    ??_HAL_Set_Entry_Mode 007A                     __end_of_HAL_LCD_Print 031A  
                     ?_alienFrequencyTask 0070                                 ??___awdiv 0077  
                          HAL_LCD_Print@i 0049                                 ??___lwdiv 0077  
                        __end_of_init_LCD 044E                                 ??___lwmod 0077  
                        __end_of_initinit 02EE                          ___awdiv@quotient 0046  
                    ??_alienFrequencyTask 004B                                 ?_I2C_stop 0070  
                              _Rover_Team 0034                         ?_HAL_Pulse_Enable 0070  
                 __end_of__initialization 005E                     _HAL_Write_Init_Nibble 0361  
                      ??_HAL_Pulse_Enable 0077                            __pcstackCOMMON 0070  
                            __pidataBANK0 031A                              __pidataBANK1 0484  
             HAL_Write_Init_Nibble@nibble 0044                                ??_I2C_stop 0073  
            alienFrequencyTask@freq_digit 0051                                __pbssBANK0 0058  
                               ?_Joystick 0070                                __pmaintext 03A4  
                        intToChar@integer 0073                                __pintentry 0004  
                          _SSP2DATPPSbits 0EC9                                   _SP1BRGH 011C  
                                 _SP1BRGL 011B                                _configPins 01DF  
                          _SSP2CLKPPSbits 0EC8                                   _SSP2BUF 0196  
                               ?_init_LCD 0070                    ?_HAL_Write_Init_Nibble 0070  
                               ?_initinit 0070                                   _Loading 0020  
                              ??_Joystick 0070                         __end_of_configI2C 04AC  
                               _I2C_start 04B3                                 _I2C_write 0472  
                       __end_of_configISR 04D0                                   ___awdiv 013D  
                                 ___lwdiv 0219                                   ___lwmod 028B  
                ?_HAL_I2C_Master_Transmit 0074                     HAL_Set_Entry_Mode@inc 0045  
                                 __ptext1 0199                                   __ptext2 02BD  
                                 __ptext3 043C                                   __ptext4 03FB  
                                 __ptext5 04C6                                   __ptext6 0361  
                                 __ptext7 044E                                   __ptext8 01DF  
                                 __ptext9 04CB                         __end_of_intToChar 028B  
                               _HAL_Clear 0494                      HAL_Pulse_Enable@byte 0077  
                               _FFT_Home1 0024                                 _FFT_Home2 00A0  
                                 clrloop0 04C1                         _UART_Not_Recieved 0066  
                    end_of_initialization 005E                                ??_init_LCD 007A  
                                 init_ram 04BA                                   initloop 04BB  
                              ??_initinit 004B                             ??_HAL_LED_OFF 0075  
                              ?_I2C_start 0070                                ?_I2C_write 0070  
                       HAL_Set_Cursor@col 0045                                 _PORTAbits 000C  
                              ?_HAL_Clear 0070                          __write_byte@byte 0078  
               alienFrequencyTask@counter 0055                               ?_configPins 0070  
                               _TRISAbits 0011                                 _TRISBbits 0012  
                               _TRISCbits 0013                             ??_configUART1 0073  
         __end_of_HAL_I2C_Master_Transmit 043C                       __end_of_HAL_LED_OFF 03A4  
                          _HAL_Display_On 04C6                             ??__write_byte 0078  
                     start_initialization 003D                               ??_I2C_start 0073  
                             ??_I2C_write 0073                       __end_of_configUART1 0460  
                             __pdataBANK0 0020                               __pdataBANK1 00A0  
                  __end_of_HAL_Display_On 04CB                               ??_HAL_Clear 0045  
                             __pbssCOMMON 007A                                 ___latbits 0002  
                           __pcstackBANK0 0044                            _HAL_Set_Cursor 03C2  
                 ??_HAL_Write_Init_Nibble 0078                       __end_of__write_byte 0472  
                        ___lwdiv@dividend 0075                               _HAL_LED_OFF 0383  
                     HAL_LCD_Print@string 0045                         HAL_LCD_Print@size 0046  
                           _HAL_LCD_Print 02EE                            _initialize_all 0199  
                                ?___awdiv 0073                   HAL_Set_Entry_Mode@shift 0047  
                                ?___lwdiv 0073                                  ?___lwmod 0073  
                               _configI2C 04A2                                 _configISR 04CB  
                         ?_HAL_Display_On 0070                    __end_of_HAL_Set_Cursor 03DF  
                                _I2C_stop 04AC                                 _intToChar 0253  
                               _frequency 0064                          ___lwdiv@quotient 0077  
                             _configUART1 044E                                  _LATAbits 0016  
                                _LATBbits 0017                                 clear_ram0 04C0  
                                _PIE3bits 0719                            _HAL_Write_Data 0413  
                  __end_of_initialize_all 01DF                            ?_HAL_LCD_Print 0045  
                                _PIR3bits 070F                                ?_configI2C 0070  
                        _HAL_Pulse_Enable 03DF                                ?_configISR 0070  
                    HAL_Write_Command@cmd 0044                           ?_HAL_Set_Cursor 0045  
                            ??_configPins 0073                               __write_byte 0460  
                              ?_intToChar 0070                    __end_of_HAL_Write_Data 0429  
                         ?_initialize_all 0070                                  _Joystick 0004  
                      __end_of_configPins 0219                                _ANSELAbits 0F38  
                              _ANSELBbits 0F43                                _ANSELCbits 0F4E  
                       _HAL_Write_Command 033E                        ?_HAL_Write_Command 0070  
                         ___lwdiv@divisor 0073                           ___lwdiv@counter 0079  
                                __ptext10 04A2                                  __ptext11 0383  
                                __ptext20 0494                                  __ptext12 0062  
                                __ptext21 033E                                  __ptext13 0253  
                                __ptext22 0460                                  __ptext14 028B  
                                __ptext23 03DF                                  __ptext15 0219  
                                __ptext24 0429                                  __ptext16 013D  
                                __ptext25 0472                                  __ptext17 03C2  
                                __ptext26 04AC                                  __ptext18 02EE  
                                __ptext27 04B3                                  __ptext19 0413  
                            _SSP2CON1bits 019A                              _SSP2CON2bits 019B  
                     ??_HAL_Write_Command 0079                                  _init_LCD 043C  
              __end_of_HAL_Set_Entry_Mode 0413                           ?_HAL_Write_Data 0070  
                                _initinit 02BD                           ??_HAL_LCD_Print 0048  
                              _RC1STAbits 011D                                  int$flags 007E  
                             ??_configI2C 0073                               ??_configISR 0073  
               __end_of_HAL_Write_Command 0361                              _SSP2STATbits 0199  
              __end_of_alienFrequencyTask 013D              HAL_Set_Entry_Mode@entry_mode 0049  
HAL_I2C_Master_Transmit@numberOfDataBytes 0075                                _INTCONbits 000B  
                             ??_intToChar 0073                        HAL_Write_Data@data 0044  
                 _HAL_I2C_Master_Transmit 0429                                  intlevel1 0000  
           __end_of_HAL_Write_Init_Nibble 0383                               _SSP2ADDbits 0197  
                        ___lwmod@dividend 0075       HAL_I2C_Master_Transmit@slaveAddress 0076  
                             _PPSLOCKbits 0E8F                              ?_HAL_LED_OFF 0073  
                        ??_HAL_Display_On 007A                        HAL_Set_Cursor@addr 0049  
                      HAL_Set_Cursor@line 0047                           ___lwmod@divisor 0073  
                         ___lwmod@counter 0077                                _TX1STAbits 011E  
                __end_of_HAL_Pulse_Enable 03FB                              ?_configUART1 0070  
